<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.1112.1434                               -->
<workbook original-version='18.1' source-build='2021.3.4 (20213.21.1112.1434)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='HappinessReportVisualization' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='result 1 (GDPandHappiness)' inline='true' name='federated.0irfktz1ax8i1712152di12ncho5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='GDPandHappiness' name='excel-direct.07zmtqb0m3d0zw11n59pl0832sob'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Temporary Amal Folder/PlanB/Happiness Report Portfolio/GDPandHappiness.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.07zmtqb0m3d0zw11n59pl0832sob' name='result 1' table='[&apos;result 1$&apos;]' type='table'>
          <columns gridOrigin='A1:C142:no:A1:C142:0' header='yes' outcome='6'>
            <column datatype='string' name='COUNTRY' ordinal='0' />
            <column datatype='real' name='SCORE/4' ordinal='1' />
            <column datatype='real' name='&quot;GDPPERCAPITA&quot;/4' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.07zmtqb0m3d0zw11n59pl0832sob' name='result 1' table='[&apos;result 1$&apos;]' type='table'>
          <columns gridOrigin='A1:C142:no:A1:C142:0' header='yes' outcome='6'>
            <column datatype='string' name='COUNTRY' ordinal='0' />
            <column datatype='real' name='SCORE/4' ordinal='1' />
            <column datatype='real' name='&quot;GDPPERCAPITA&quot;/4' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[result 1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C142:no:A1:C142:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[result 1]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result 1_2906E7D40E654533BD63511E73501B1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SCORE/4</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SCORE/4]</local-name>
            <parent-name>[result 1]</parent-name>
            <remote-alias>SCORE/4</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result 1_2906E7D40E654533BD63511E73501B1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>&quot;GDPPERCAPITA&quot;/4</remote-name>
            <remote-type>5</remote-type>
            <local-name>[&quot;GDPPERCAPITA&quot;/4]</local-name>
            <parent-name>[result 1]</parent-name>
            <remote-alias>&quot;GDPPERCAPITA&quot;/4</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result 1_2906E7D40E654533BD63511E73501B1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='National Average GDP per Capita' datatype='real' name='[&quot;GDPPERCAPITA&quot;/4]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='National Average Score' datatype='real' name='[SCORE/4]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='result 1' datatype='table' name='[__tableau_internal_object_id__].[result 1_2906E7D40E654533BD63511E73501B1C]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/USER/Documents/My Tableau Repository/Datasources/result 1 (GDPandHappiness).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='12/14/2021 09:03:39 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='result 1 (GDPandHappiness)' increment-value='%null%' refresh-type='create' rows-inserted='141' timestamp-start='2021-12-14 09:03:39.382' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>COUNTRY</remote-name>
              <remote-type>129</remote-type>
              <local-name>[COUNTRY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTRY</remote-alias>
              <ordinal>0</ordinal>
              <family>result 1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>141</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SCORE/4</remote-name>
              <remote-type>5</remote-type>
              <local-name>[SCORE/4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SCORE/4</remote-alias>
              <ordinal>1</ordinal>
              <family>result 1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>141</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>&quot;GDPPERCAPITA&quot;/4</remote-name>
              <remote-type>5</remote-type>
              <local-name>[&quot;GDPPERCAPITA&quot;/4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>&quot;GDPPERCAPITA&quot;/4</remote-alias>
              <ordinal>2</ordinal>
              <family>result 1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>141</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='result 1' id='result 1_2906E7D40E654533BD63511E73501B1C'>
            <properties context=''>
              <relation connection='excel-direct.07zmtqb0m3d0zw11n59pl0832sob' name='result 1' table='[&apos;result 1$&apos;]' type='table'>
                <columns gridOrigin='A1:C142:no:A1:C142:0' header='yes' outcome='6'>
                  <column datatype='string' name='COUNTRY' ordinal='0' />
                  <column datatype='real' name='SCORE/4' ordinal='1' />
                  <column datatype='real' name='&quot;GDPPERCAPITA&quot;/4' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='result 1 (HAPPY2015)' inline='true' name='federated.0xhdmgo1y2a4b5178i8ry1f33vb8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='HAPPY2015' name='excel-direct.136pmjk0ebis9p1h33kam0e3u9fn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Temporary Amal Folder/PlanB/Happiness Report Portfolio/HAPPY2015.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.136pmjk0ebis9p1h33kam0e3u9fn' name='result 1' table='[&apos;result 1$&apos;]' type='table'>
          <columns gridOrigin='A1:B159:no:A1:B159:0' header='yes' outcome='6'>
            <column datatype='string' name='COUNTRY' ordinal='0' />
            <column datatype='real' name='HAPPINESS_SCORE' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.136pmjk0ebis9p1h33kam0e3u9fn' name='result 1' table='[&apos;result 1$&apos;]' type='table'>
          <columns gridOrigin='A1:B159:no:A1:B159:0' header='yes' outcome='6'>
            <column datatype='string' name='COUNTRY' ordinal='0' />
            <column datatype='real' name='HAPPINESS_SCORE' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[result 1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B159:no:A1:B159:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[result 1]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result 1_BFE67685AA3D426F92DD02339D784A3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HAPPINESS_SCORE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HAPPINESS_SCORE]</local-name>
            <parent-name>[result 1]</parent-name>
            <remote-alias>HAPPINESS_SCORE</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result 1_BFE67685AA3D426F92DD02339D784A3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Somaliland region&quot;' value='9.5624000000000002' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Somaliland region&quot;' value='44.076999999999998' />
        </semantic-values>
      </column>
      <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[COUNTRY]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Australia &amp; New Zealand&quot;'>
            <value>&quot;Australia&quot;</value>
            <value>&quot;New Zealand&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Central and Eastern Europe&quot;'>
            <value>&quot;Albania&quot;</value>
            <value>&quot;Armenia&quot;</value>
            <value>&quot;Azerbaijan&quot;</value>
            <value>&quot;Belarus&quot;</value>
            <value>&quot;Bosnia and Herzegovina&quot;</value>
            <value>&quot;Bulgaria&quot;</value>
            <value>&quot;Croatia&quot;</value>
            <value>&quot;Czech Republic&quot;</value>
            <value>&quot;Estonia&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Hungary&quot;</value>
            <value>&quot;Kazakhstan&quot;</value>
            <value>&quot;Kosovo&quot;</value>
            <value>&quot;Kyrgyzstan&quot;</value>
            <value>&quot;Latvia&quot;</value>
            <value>&quot;Lithuania&quot;</value>
            <value>&quot;Macedonia&quot;</value>
            <value>&quot;Moldova&quot;</value>
            <value>&quot;Montenegro&quot;</value>
            <value>&quot;Poland&quot;</value>
            <value>&quot;Romania&quot;</value>
            <value>&quot;Russia&quot;</value>
            <value>&quot;Serbia&quot;</value>
            <value>&quot;Slovakia&quot;</value>
            <value>&quot;Slovenia&quot;</value>
            <value>&quot;Tajikistan&quot;</value>
            <value>&quot;Turkmenistan&quot;</value>
            <value>&quot;Ukraine&quot;</value>
            <value>&quot;Uzbekistan&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Eastern Asia&quot;'>
            <value>&quot;China&quot;</value>
            <value>&quot;Hong Kong&quot;</value>
            <value>&quot;Japan&quot;</value>
            <value>&quot;Mongolia&quot;</value>
            <value>&quot;South Korea&quot;</value>
            <value>&quot;Taiwan&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Latin America and Carribean&quot;'>
            <value>&quot;Argentina&quot;</value>
            <value>&quot;Bolivia&quot;</value>
            <value>&quot;Brazil&quot;</value>
            <value>&quot;Chile&quot;</value>
            <value>&quot;Colombia&quot;</value>
            <value>&quot;Costa Rica&quot;</value>
            <value>&quot;Dominican Republic&quot;</value>
            <value>&quot;Ecuador&quot;</value>
            <value>&quot;El Salvador&quot;</value>
            <value>&quot;Guatemala&quot;</value>
            <value>&quot;Haiti&quot;</value>
            <value>&quot;Honduras&quot;</value>
            <value>&quot;Jamaica&quot;</value>
            <value>&quot;Mexico&quot;</value>
            <value>&quot;Nicaragua&quot;</value>
            <value>&quot;Panama&quot;</value>
            <value>&quot;Paraguay&quot;</value>
            <value>&quot;Peru&quot;</value>
            <value>&quot;Suriname&quot;</value>
            <value>&quot;Trinidad and Tobago&quot;</value>
            <value>&quot;Uruguay&quot;</value>
            <value>&quot;Venezuela&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Middle East and North Africa&quot;'>
            <value>&quot;Algeria&quot;</value>
            <value>&quot;Egypt&quot;</value>
            <value>&quot;Iran&quot;</value>
            <value>&quot;Iraq&quot;</value>
            <value>&quot;Israel&quot;</value>
            <value>&quot;Jordan&quot;</value>
            <value>&quot;Kuwait&quot;</value>
            <value>&quot;Lebanon&quot;</value>
            <value>&quot;Libya&quot;</value>
            <value>&quot;Morocco&quot;</value>
            <value>&quot;Oman&quot;</value>
            <value>&quot;Palestinian Territories&quot;</value>
            <value>&quot;Qatar&quot;</value>
            <value>&quot;Saudi Arabia&quot;</value>
            <value>&quot;Syria&quot;</value>
            <value>&quot;Tunisia&quot;</value>
            <value>&quot;Turkey&quot;</value>
            <value>&quot;United Arab Emirates&quot;</value>
            <value>&quot;Yemen&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;North America&quot;'>
            <value>&quot;Canada&quot;</value>
            <value>&quot;United States&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Southeastern Asia&quot;'>
            <value>&quot;Cambodia&quot;</value>
            <value>&quot;Indonesia&quot;</value>
            <value>&quot;Laos&quot;</value>
            <value>&quot;Malaysia&quot;</value>
            <value>&quot;Myanmar&quot;</value>
            <value>&quot;Philippines&quot;</value>
            <value>&quot;Singapore&quot;</value>
            <value>&quot;Thailand&quot;</value>
            <value>&quot;Vietnam&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Southern Asia&quot;'>
            <value>&quot;Afghanistan&quot;</value>
            <value>&quot;Bangladesh&quot;</value>
            <value>&quot;Bhutan&quot;</value>
            <value>&quot;India&quot;</value>
            <value>&quot;Nepal&quot;</value>
            <value>&quot;Pakistan&quot;</value>
            <value>&quot;Sri Lanka&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Sub-Saharan Africa&quot;'>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Benin&quot;</value>
            <value>&quot;Botswana&quot;</value>
            <value>&quot;Burkina Faso&quot;</value>
            <value>&quot;Burundi&quot;</value>
            <value>&quot;Cameroon&quot;</value>
            <value>&quot;Central African Republic&quot;</value>
            <value>&quot;Chad&quot;</value>
            <value>&quot;Comoros&quot;</value>
            <value>&quot;Congo (Brazzaville)&quot;</value>
            <value>&quot;Congo (Kinshasa)&quot;</value>
            <value>&quot;Djibouti&quot;</value>
            <value>&quot;Ethiopia&quot;</value>
            <value>&quot;Gabon&quot;</value>
            <value>&quot;Ghana&quot;</value>
            <value>&quot;Guinea&quot;</value>
            <value>&quot;Ivory Coast&quot;</value>
            <value>&quot;Kenya&quot;</value>
            <value>&quot;Lesotho&quot;</value>
            <value>&quot;Liberia&quot;</value>
            <value>&quot;Madagascar&quot;</value>
            <value>&quot;Malawi&quot;</value>
            <value>&quot;Mali&quot;</value>
            <value>&quot;Mauritania&quot;</value>
            <value>&quot;Mozambique&quot;</value>
            <value>&quot;Niger&quot;</value>
            <value>&quot;Nigeria&quot;</value>
            <value>&quot;Rwanda&quot;</value>
            <value>&quot;Senegal&quot;</value>
            <value>&quot;Sierra Leone&quot;</value>
            <value>&quot;South Africa&quot;</value>
            <value>&quot;Sudan&quot;</value>
            <value>&quot;Swaziland&quot;</value>
            <value>&quot;Tanzania&quot;</value>
            <value>&quot;Togo&quot;</value>
            <value>&quot;Uganda&quot;</value>
            <value>&quot;Zambia&quot;</value>
            <value>&quot;Zimbabwe&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Western Europe&quot;'>
            <value>&quot;Austria&quot;</value>
            <value>&quot;Belgium&quot;</value>
            <value>&quot;Cyprus&quot;</value>
            <value>&quot;Denmark&quot;</value>
            <value>&quot;Finland&quot;</value>
            <value>&quot;France&quot;</value>
            <value>&quot;Germany&quot;</value>
            <value>&quot;Greece&quot;</value>
            <value>&quot;Iceland&quot;</value>
            <value>&quot;Ireland&quot;</value>
            <value>&quot;Italy&quot;</value>
            <value>&quot;Luxembourg&quot;</value>
            <value>&quot;Malta&quot;</value>
            <value>&quot;Netherlands&quot;</value>
            <value>&quot;Norway&quot;</value>
            <value>&quot;Portugal&quot;</value>
            <value>&quot;Spain&quot;</value>
            <value>&quot;Sweden&quot;</value>
            <value>&quot;Switzerland&quot;</value>
            <value>&quot;United Kingdom&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Happiness Score' datatype='real' name='[HAPPINESS_SCORE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='result 1' datatype='table' name='[__tableau_internal_object_id__].[result 1_BFE67685AA3D426F92DD02339D784A3F]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/USER/Documents/My Tableau Repository/Datasources/result 1 (HAPPY2015).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='12/14/2021 09:03:45 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='result 1 (HAPPY2015)' increment-value='%null%' refresh-type='create' rows-inserted='158' timestamp-start='2021-12-14 09:03:45.873' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>COUNTRY</remote-name>
              <remote-type>129</remote-type>
              <local-name>[COUNTRY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTRY</remote-alias>
              <ordinal>0</ordinal>
              <family>result 1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>158</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HAPPINESS_SCORE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[HAPPINESS_SCORE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HAPPINESS_SCORE</remote-alias>
              <ordinal>1</ordinal>
              <family>result 1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>157</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Country (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Australia &amp; New Zealand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central and Eastern Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Latin America and Carribean&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Southern Asia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eastern Asia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Middle East and North Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Southeastern Asia&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Albania, Armenia, Azerbaijan and 26 more&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='result 1' id='result 1_BFE67685AA3D426F92DD02339D784A3F'>
            <properties context=''>
              <relation connection='excel-direct.136pmjk0ebis9p1h33kam0e3u9fn' name='result 1' table='[&apos;result 1$&apos;]' type='table'>
                <columns gridOrigin='A1:B159:no:A1:B159:0' header='yes' outcome='6'>
                  <column datatype='string' name='COUNTRY' ordinal='0' />
                  <column datatype='real' name='HAPPINESS_SCORE' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='result 1 (Average_National_Participation_2015_2019)' inline='true' name='federated.10n55f51072jwp12tmdvu0dsm75l' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Average_National_Participation_2015_2019' name='excel-direct.0ugdd5507epb9j1ceh39t1173a11'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Temporary Amal Folder/PlanB/Happiness Report Portfolio/Average_National_Participation_2015_2019.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0ugdd5507epb9j1ceh39t1173a11' name='result 1' table='[&apos;result 1$&apos;]' type='table'>
          <columns gridOrigin='A1:A2:no:A1:A2:0' header='yes' outcome='6'>
            <column datatype='real' name='Average National Participants' ordinal='0' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0ugdd5507epb9j1ceh39t1173a11' name='result 1' table='[&apos;result 1$&apos;]' type='table'>
          <columns gridOrigin='A1:A2:no:A1:A2:0' header='yes' outcome='6'>
            <column datatype='real' name='Average National Participants' ordinal='0' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[result 1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:A2:no:A1:A2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average National Participants</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average National Participants]</local-name>
            <parent-name>[result 1]</parent-name>
            <remote-alias>Average National Participants</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result 1_CFC610BB1ECD4164BA92AC475334ACEE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='result 1' datatype='table' name='[__tableau_internal_object_id__].[result 1_CFC610BB1ECD4164BA92AC475334ACEE]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/USER/Documents/My Tableau Repository/Datasources/result 1 (Average_National_Participation_2015_2019).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='12/14/2021 09:03:31 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='result 1 (Average_National_Participation_2015_2019)' increment-value='%null%' refresh-type='create' rows-inserted='1' timestamp-start='2021-12-14 09:03:30.921' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Average National Participants</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average National Participants]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average National Participants</remote-alias>
              <ordinal>0</ordinal>
              <family>result 1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='result 1' id='result 1_CFC610BB1ECD4164BA92AC475334ACEE'>
            <properties context=''>
              <relation connection='excel-direct.0ugdd5507epb9j1ceh39t1173a11' name='result 1' table='[&apos;result 1$&apos;]' type='table'>
                <columns gridOrigin='A1:A2:no:A1:A2:0' header='yes' outcome='6'>
                  <column datatype='real' name='Average National Participants' ordinal='0' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='result 1 (RegionalHappiness)' inline='true' name='federated.1eewe4g1676yn01gz9mv80ke4won' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='RegionalHappiness' name='excel-direct.1ygttp5123s5l518bdmnz0n5q8rv'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Temporary Amal Folder/PlanB/Happiness Report Portfolio/RegionalHappiness.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ygttp5123s5l518bdmnz0n5q8rv' name='result 1' table='[&apos;result 1$&apos;]' type='table'>
          <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
            <column datatype='string' name='REGION' ordinal='0' />
            <column datatype='real' name='ROUND(AVG(HAPPINESS_SCORE),3)' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ygttp5123s5l518bdmnz0n5q8rv' name='result 1' table='[&apos;result 1$&apos;]' type='table'>
          <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
            <column datatype='string' name='REGION' ordinal='0' />
            <column datatype='real' name='ROUND(AVG(HAPPINESS_SCORE),3)' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[result 1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B11:no:A1:B11:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REGION</remote-name>
            <remote-type>130</remote-type>
            <local-name>[REGION]</local-name>
            <parent-name>[result 1]</parent-name>
            <remote-alias>REGION</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result 1_D0F6AAD06A6C4C93B3FDB1AA5587B405]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ROUND(AVG(HAPPINESS_SCORE),3)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ROUND(AVG(HAPPINESS_SCORE),3)]</local-name>
            <parent-name>[result 1]</parent-name>
            <remote-alias>ROUND(AVG(HAPPINESS_SCORE),3)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result 1_D0F6AAD06A6C4C93B3FDB1AA5587B405]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Region' datatype='string' name='[REGION]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Region Average Happiness' datatype='real' name='[ROUND(AVG(HAPPINESS_SCORE),3)]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='result 1' datatype='table' name='[__tableau_internal_object_id__].[result 1_D0F6AAD06A6C4C93B3FDB1AA5587B405]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/USER/Documents/My Tableau Repository/Datasources/result 1 (RegionalHappiness).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='12/14/2021 09:03:50 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='result 1 (RegionalHappiness)' increment-value='%null%' refresh-type='create' rows-inserted='10' timestamp-start='2021-12-14 09:03:49.938' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>REGION</remote-name>
              <remote-type>129</remote-type>
              <local-name>[REGION]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>REGION</remote-alias>
              <ordinal>0</ordinal>
              <family>result 1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result 1_D0F6AAD06A6C4C93B3FDB1AA5587B405]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ROUND(AVG(HAPPINESS_SCORE),3)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ROUND(AVG(HAPPINESS_SCORE),3)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ROUND(AVG(HAPPINESS_SCORE),3)</remote-alias>
              <ordinal>1</ordinal>
              <family>result 1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result 1_D0F6AAD06A6C4C93B3FDB1AA5587B405]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='result 1' id='result 1_D0F6AAD06A6C4C93B3FDB1AA5587B405'>
            <properties context=''>
              <relation connection='excel-direct.1ygttp5123s5l518bdmnz0n5q8rv' name='result 1' table='[&apos;result 1$&apos;]' type='table'>
                <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
                  <column datatype='string' name='REGION' ordinal='0' />
                  <column datatype='real' name='ROUND(AVG(HAPPINESS_SCORE),3)' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='result 1 (Country Happiness Score 2019)' inline='true' name='federated.1h0ds391yb4wzu1cofxec1whgpwx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Country Happiness Score 2019' name='excel-direct.11irbb6045yhhn1cl7wam05ll2eo'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Temporary Amal Folder/PlanB/Happiness Report Portfolio/Country Happiness Score 2019.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.11irbb6045yhhn1cl7wam05ll2eo' name='result 1' table='[&apos;result 1$&apos;]' type='table'>
          <columns gridOrigin='A1:B157:no:A1:B157:0' header='yes' outcome='6'>
            <column datatype='string' name='COUNTRY_OR_REGION' ordinal='0' />
            <column datatype='real' name='SCORE' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.11irbb6045yhhn1cl7wam05ll2eo' name='result 1' table='[&apos;result 1$&apos;]' type='table'>
          <columns gridOrigin='A1:B157:no:A1:B157:0' header='yes' outcome='6'>
            <column datatype='string' name='COUNTRY_OR_REGION' ordinal='0' />
            <column datatype='real' name='SCORE' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[result 1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B157:no:A1:B157:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY_OR_REGION</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTRY_OR_REGION]</local-name>
            <parent-name>[result 1]</parent-name>
            <remote-alias>COUNTRY_OR_REGION</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result 1_EFC774DABC4E4275AA544FEE4E9CB0FD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SCORE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SCORE]</local-name>
            <parent-name>[result 1]</parent-name>
            <remote-alias>SCORE</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result 1_EFC774DABC4E4275AA544FEE4E9CB0FD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country Or Region' datatype='string' name='[COUNTRY_OR_REGION]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Score' datatype='real' name='[SCORE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='result 1' datatype='table' name='[__tableau_internal_object_id__].[result 1_EFC774DABC4E4275AA544FEE4E9CB0FD]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/USER/Documents/My Tableau Repository/Datasources/result 1 (Country Happiness Score 2019).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='12/14/2021 09:03:35 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='result 1 (Country Happiness Score 2019)' increment-value='%null%' refresh-type='create' rows-inserted='156' timestamp-start='2021-12-14 09:03:35.277' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>COUNTRY_OR_REGION</remote-name>
              <remote-type>129</remote-type>
              <local-name>[COUNTRY_OR_REGION]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTRY_OR_REGION</remote-alias>
              <ordinal>0</ordinal>
              <family>result 1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>156</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result 1_EFC774DABC4E4275AA544FEE4E9CB0FD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SCORE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[SCORE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SCORE</remote-alias>
              <ordinal>1</ordinal>
              <family>result 1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>155</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result 1_EFC774DABC4E4275AA544FEE4E9CB0FD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='result 1' id='result 1_EFC774DABC4E4275AA544FEE4E9CB0FD'>
            <properties context=''>
              <relation connection='excel-direct.11irbb6045yhhn1cl7wam05ll2eo' name='result 1' table='[&apos;result 1$&apos;]' type='table'>
                <columns gridOrigin='A1:B157:no:A1:B157:0' header='yes' outcome='6'>
                  <column datatype='string' name='COUNTRY_OR_REGION' ordinal='0' />
                  <column datatype='real' name='SCORE' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='result 1 (Average GDP per Capita and Happiness)' inline='true' name='federated.1ja3x560krvlig11g068z1g3lt6u' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Average GDP per Capita and Happiness' name='excel-direct.0u0skw11u4oioy0zubw0e0wasaca'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Temporary Amal Folder/PlanB/Happiness Report Portfolio/Average GDP per Capita and Happiness.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0u0skw11u4oioy0zubw0e0wasaca' name='result 1' table='[&apos;result 1$&apos;]' type='table'>
          <columns gridOrigin='A1:C142:no:A1:C142:0' header='yes' outcome='6'>
            <column datatype='string' name='COUNTRY' ordinal='0' />
            <column datatype='real' name='AVG GDP PER CAPITA' ordinal='1' />
            <column datatype='real' name='AVG HAPPINESS SCORE' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0u0skw11u4oioy0zubw0e0wasaca' name='result 1' table='[&apos;result 1$&apos;]' type='table'>
          <columns gridOrigin='A1:C142:no:A1:C142:0' header='yes' outcome='6'>
            <column datatype='string' name='COUNTRY' ordinal='0' />
            <column datatype='real' name='AVG GDP PER CAPITA' ordinal='1' />
            <column datatype='real' name='AVG HAPPINESS SCORE' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[result 1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C142:no:A1:C142:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[result 1]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result 1_816538C06B7D43C386742ABFF1D780DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVG GDP PER CAPITA</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AVG GDP PER CAPITA]</local-name>
            <parent-name>[result 1]</parent-name>
            <remote-alias>AVG GDP PER CAPITA</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result 1_816538C06B7D43C386742ABFF1D780DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVG HAPPINESS SCORE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AVG HAPPINESS SCORE]</local-name>
            <parent-name>[result 1]</parent-name>
            <remote-alias>AVG HAPPINESS SCORE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result 1_816538C06B7D43C386742ABFF1D780DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg Gdp Per Capita' datatype='real' name='[AVG GDP PER CAPITA]' role='measure' type='quantitative' />
      <column caption='Avg Happiness Score' datatype='real' name='[AVG HAPPINESS SCORE]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='result 1' datatype='table' name='[__tableau_internal_object_id__].[result 1_816538C06B7D43C386742ABFF1D780DE]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/USER/Documents/My Tableau Repository/Datasources/result 1 (Average GDP per Capita and Happiness).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='12/14/2021 09:03:26 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='result 1 (Average GDP per Capita and Happiness)' increment-value='%null%' refresh-type='create' rows-inserted='141' timestamp-start='2021-12-14 09:03:26.620' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>COUNTRY</remote-name>
              <remote-type>129</remote-type>
              <local-name>[COUNTRY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTRY</remote-alias>
              <ordinal>0</ordinal>
              <family>result 1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>141</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result 1_816538C06B7D43C386742ABFF1D780DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AVG GDP PER CAPITA</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AVG GDP PER CAPITA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AVG GDP PER CAPITA</remote-alias>
              <ordinal>1</ordinal>
              <family>result 1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>140</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result 1_816538C06B7D43C386742ABFF1D780DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AVG HAPPINESS SCORE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AVG HAPPINESS SCORE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AVG HAPPINESS SCORE</remote-alias>
              <ordinal>2</ordinal>
              <family>result 1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>135</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result 1_816538C06B7D43C386742ABFF1D780DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='result 1' id='result 1_816538C06B7D43C386742ABFF1D780DE'>
            <properties context=''>
              <relation connection='excel-direct.0u0skw11u4oioy0zubw0e0wasaca' name='result 1' table='[&apos;result 1$&apos;]' type='table'>
                <columns gridOrigin='A1:C142:no:A1:C142:0' header='yes' outcome='6'>
                  <column datatype='string' name='COUNTRY' ordinal='0' />
                  <column datatype='real' name='AVG GDP PER CAPITA' ordinal='1' />
                  <column datatype='real' name='AVG HAPPINESS SCORE' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='2015 Regional Happiness Score'>
      <table>
        <view>
          <datasources>
            <datasource caption='result 1 (HAPPY2015)' name='federated.0xhdmgo1y2a4b5178i8ry1f33vb8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0xhdmgo1y2a4b5178i8ry1f33vb8'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='9.5624000000000002' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Somaliland region&quot;' value='44.076999999999998' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[COUNTRY]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Australia &amp; New Zealand&quot;'>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central and Eastern Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Macedonia&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Eastern Asia&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Latin America and Carribean&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Middle East and North Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Palestinian Territories&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;United States&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeastern Asia&quot;'>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southern Asia&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Sub-Saharan Africa&quot;'>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo (Brazzaville)&quot;</value>
                  <value>&quot;Congo (Kinshasa)&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Ivory Coast&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Swaziland&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Western Europe&quot;'>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Happiness Score' datatype='real' name='[HAPPINESS_SCORE]' role='measure' type='quantitative' />
            <column-instance column='[HAPPINESS_SCORE]' derivation='Avg' name='[avg:HAPPINESS_SCORE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0xhdmgo1y2a4b5178i8ry1f33vb8].[Longitude (generated)]' field-type='quantitative' max='17664785.832262397' min='-10413685.666671095' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0xhdmgo1y2a4b5178i8ry1f33vb8].[Latitude (generated)]' field-type='quantitative' max='17124927.150233816' min='-10054480.823040893' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0xhdmgo1y2a4b5178i8ry1f33vb8].[avg:HAPPINESS_SCORE:qk]' num-steps='13' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0xhdmgo1y2a4b5178i8ry1f33vb8].[avg:HAPPINESS_SCORE:qk]' />
              <lod column='[federated.0xhdmgo1y2a4b5178i8ry1f33vb8].[Country (group)]' />
              <geometry column='[federated.0xhdmgo1y2a4b5178i8ry1f33vb8].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xhdmgo1y2a4b5178i8ry1f33vb8].[Latitude (generated)]</rows>
        <cols>[federated.0xhdmgo1y2a4b5178i8ry1f33vb8].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{95EC5858-388E-4B9A-ACD0-43F92D51A2DD}' />
    </worksheet>
    <worksheet name='2019 National Happiness Score'>
      <table>
        <view>
          <datasources>
            <datasource caption='result 1 (Country Happiness Score 2019)' name='federated.1h0ds391yb4wzu1cofxec1whgpwx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1h0ds391yb4wzu1cofxec1whgpwx'>
            <column caption='Country Or Region' datatype='string' name='[COUNTRY_OR_REGION]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Score' datatype='real' name='[SCORE]' role='measure' type='quantitative' />
            <column-instance column='[COUNTRY_OR_REGION]' derivation='None' name='[none:COUNTRY_OR_REGION:nk]' pivot='key' type='nominal' />
            <column-instance column='[SCORE]' derivation='Sum' name='[sum:SCORE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1h0ds391yb4wzu1cofxec1whgpwx].[Longitude (generated)]' field-type='quantitative' max='18414053.821081713' min='-13980204.723827001' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1h0ds391yb4wzu1cofxec1whgpwx].[Latitude (generated)]' field-type='quantitative' max='12950374.743645534' min='-5996713.0491977511' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1h0ds391yb4wzu1cofxec1whgpwx].[sum:SCORE:qk]' num-steps='10' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#cce1cb</color>
                <color>#aad2a8</color>
                <color>#8bc388</color>
                <color>#6fb46c</color>
                <color>#56a552</color>
                <color>#40963c</color>
                <color>#2c8728</color>
                <color>#1c7818</color>
                <color>#0e690a</color>
                <color>#045a00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1h0ds391yb4wzu1cofxec1whgpwx].[sum:SCORE:qk]' />
              <lod column='[federated.1h0ds391yb4wzu1cofxec1whgpwx].[none:COUNTRY_OR_REGION:nk]' />
              <geometry column='[federated.1h0ds391yb4wzu1cofxec1whgpwx].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1h0ds391yb4wzu1cofxec1whgpwx].[Latitude (generated)]</rows>
        <cols>[federated.1h0ds391yb4wzu1cofxec1whgpwx].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B889825D-710E-4927-A52C-7F4BCCD9B427}' />
    </worksheet>
    <worksheet name='Average National Participation'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='8'>Average National Participation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='result 1 (Average_National_Participation_2015_2019)' name='federated.10n55f51072jwp12tmdvu0dsm75l' />
          </datasources>
          <datasource-dependencies datasource='federated.10n55f51072jwp12tmdvu0dsm75l'>
            <column datatype='real' name='[Average National Participants]' role='measure' type='quantitative' />
            <column-instance column='[Average National Participants]' derivation='Sum' name='[sum:Average National Participants:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='20' />
            <format attr='width' value='135' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.10n55f51072jwp12tmdvu0dsm75l].[sum:Average National Participants:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D9317794-D7A0-4A46-85FD-8B8ACCE97F69}' />
    </worksheet>
    <worksheet name='Relationship Between Change of Income and Change in Happiness'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Relationship Between Average Change of Income and Average Change in Happiness</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='result 1 (Average GDP per Capita and Happiness)' name='federated.1ja3x560krvlig11g068z1g3lt6u' />
          </datasources>
          <datasource-dependencies datasource='federated.1ja3x560krvlig11g068z1g3lt6u'>
            <column caption='Avg Gdp Per Capita' datatype='real' name='[AVG GDP PER CAPITA]' role='measure' type='quantitative' />
            <column caption='Avg Happiness Score' datatype='real' name='[AVG HAPPINESS SCORE]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[AVG GDP PER CAPITA]' derivation='Sum' name='[sum:AVG GDP PER CAPITA:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AVG HAPPINESS SCORE]' derivation='Sum' name='[sum:AVG HAPPINESS SCORE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ja3x560krvlig11g068z1g3lt6u].[none:COUNTRY:nk]' />
              <lod column='[federated.1ja3x560krvlig11g068z1g3lt6u].[none:COUNTRY:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ja3x560krvlig11g068z1g3lt6u].[sum:AVG HAPPINESS SCORE:qk]</rows>
        <cols>[federated.1ja3x560krvlig11g068z1g3lt6u].[sum:AVG GDP PER CAPITA:qk]</cols>
      </table>
      <simple-id uuid='{79275C15-CA7C-438E-A03D-244C105FF7E5}' />
    </worksheet>
    <worksheet name='Relationship Between Income and Happiness'>
      <table>
        <view>
          <datasources>
            <datasource caption='result 1 (GDPandHappiness)' name='federated.0irfktz1ax8i1712152di12ncho5' />
          </datasources>
          <datasource-dependencies datasource='federated.0irfktz1ax8i1712152di12ncho5'>
            <column caption='National Average GDP per Capita' datatype='real' name='[&quot;GDPPERCAPITA&quot;/4]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='National Average Score' datatype='real' name='[SCORE/4]' role='measure' type='quantitative' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[&quot;GDPPERCAPITA&quot;/4]' derivation='Sum' name='[sum:&quot;GDPPERCAPITA&quot;/4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SCORE/4]' derivation='Sum' name='[sum:SCORE/4:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0irfktz1ax8i1712152di12ncho5].[sum:SCORE/4:qk]' field-type='quantitative' max='9.9809011193985118' min='3.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0irfktz1ax8i1712152di12ncho5].[none:COUNTRY:nk]' />
              <lod column='[federated.0irfktz1ax8i1712152di12ncho5].[none:COUNTRY:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0irfktz1ax8i1712152di12ncho5].[sum:SCORE/4:qk]</rows>
        <cols>[federated.0irfktz1ax8i1712152di12ncho5].[sum:&quot;GDPPERCAPITA&quot;/4:qk]</cols>
      </table>
      <simple-id uuid='{C3E0551E-ADF9-4DC5-BB73-4FC8368D1E5B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Average Income and Happiness'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='7' param='horz' type-v2='layout-flow' w='49517' x='50000' y='929'>
            <zone h='98142' id='5' type-v2='layout-basic' w='39861' x='50000' y='929'>
              <zone h='49071' id='3' name='Relationship Between Income and Happiness' w='39861' x='50000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='9' name='Relationship Between Change of Income and Change in Happiness' w='39861' x='50000' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98142' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89861' y='929'>
              <zone h='9175' id='10' name='Average National Participation' w='9656' x='89861' y='929'>
                <layout-cache fixed-size-h='71' fixed-size-w='135' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='80489' id='8' name='Relationship Between Income and Happiness' pane-specification-id='0' param='[federated.0irfktz1ax8i1712152di12ncho5].[none:COUNTRY:nk]' type-v2='color' w='9656' x='89861' y='10104'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8478' id='12' name='2015 Regional Happiness Score' pane-specification-id='0' param='[federated.0xhdmgo1y2a4b5178i8ry1f33vb8].[avg:HAPPINESS_SCORE:qk]' type-v2='color' w='9656' x='89861' y='90593'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='98142' id='11' name='2015 Regional Happiness Score' w='49517' x='483' y='929'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='17' param='vert' type-v2='layout-flow' w='99034' x='483' y='929'>
                <zone fixed-size='280' h='98142' id='11' is-fixed='true' name='2015 Regional Happiness Score' w='49517' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8478' id='12' name='2015 Regional Happiness Score' pane-specification-id='0' param='[federated.0xhdmgo1y2a4b5178i8ry1f33vb8].[avg:HAPPINESS_SCORE:qk]' type-v2='color' w='9656' x='89861' y='90593'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='9' is-fixed='true' name='Relationship Between Change of Income and Change in Happiness' w='39861' x='50000' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='66' h='9175' id='10' is-fixed='true' name='Average National Participation' w='9656' x='89861' y='929'>
                  <layout-cache fixed-size-h='71' fixed-size-w='135' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='3' is-fixed='true' name='Relationship Between Income and Happiness' w='39861' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='80489' id='8' name='Relationship Between Income and Happiness' pane-specification-id='0' param='[federated.0irfktz1ax8i1712152di12ncho5].[none:COUNTRY:nk]' type-v2='color' w='9656' x='89861' y='10104'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B27EFA26-145C-4B39-B85A-70C7970DBCC5}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='167'>
    <window class='worksheet' name='Average National Participation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10n55f51072jwp12tmdvu0dsm75l].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3EA8059D-BE89-4641-9E05-9767E2F4F2A5}' />
    </window>
    <window class='worksheet' name='2019 National Happiness Score'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1h0ds391yb4wzu1cofxec1whgpwx].[sum:SCORE:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h0ds391yb4wzu1cofxec1whgpwx].[none:COUNTRY_OR_REGION:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{60FA67EF-3B3F-4262-919A-B8EBBEB4339C}' />
    </window>
    <window class='worksheet' name='2015 Regional Happiness Score'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xhdmgo1y2a4b5178i8ry1f33vb8].[avg:HAPPINESS_SCORE:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xhdmgo1y2a4b5178i8ry1f33vb8].[Country (group)]</field>
            <field>[federated.0xhdmgo1y2a4b5178i8ry1f33vb8].[avg:HAPPINESS_SCORE:qk]</field>
            <field>[federated.0xhdmgo1y2a4b5178i8ry1f33vb8].[none:COUNTRY:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{D94270F3-33E1-473A-9E59-B73DD62032EC}' />
    </window>
    <window class='worksheet' name='Relationship Between Income and Happiness'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0irfktz1ax8i1712152di12ncho5].[none:COUNTRY:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0irfktz1ax8i1712152di12ncho5].[none:COUNTRY:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{46DD9751-3BD2-487C-A783-EE22B2D6AA22}' />
    </window>
    <window class='worksheet' name='Relationship Between Change of Income and Change in Happiness'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ja3x560krvlig11g068z1g3lt6u].[none:COUNTRY:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ja3x560krvlig11g068z1g3lt6u].[none:COUNTRY:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A63B9F55-68B7-427C-97F5-DD8F42573EAB}' />
    </window>
    <window class='dashboard' maximized='true' name='Average Income and Happiness'>
      <viewpoints>
        <viewpoint name='2015 Regional Happiness Score'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='4' />
        </viewpoint>
        <viewpoint name='Average National Participation' />
        <viewpoint name='Relationship Between Change of Income and Change in Happiness'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Relationship Between Income and Happiness'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0irfktz1ax8i1712152di12ncho5].[none:COUNTRY:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{4066575A-E356-4981-B04E-C57060AB0BC9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='2015 Regional Happiness Score' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9eZBd133n9znnrm/vfcVKACTABdw3ixIlarMseSRZlq2xLVvKxOWZmvnL
      qSSVZJLKH6lUUplKMpOJ43hqJhrb8mgk2Vos2eYmSiIp7gQBggABYms0el9ev/1u55z8cV/v
      DaBJooGWNV8Uqt97995zz7n39zvntx9Rq9WM4zhca5ypJTwzHV7zdrcaqjZPOPYWIgioNy/S
      EgEdLQ8/61NOGoRWctlrDQaDAkAgEEgACv4wnXd9jk7b8IFCTNExCASn6gYhBK80PD7b1SIr
      Na81XEZCm1/pDMnaAowBIa7YZ2MM55qSFxvuYkdg5SXt7x6GkCu39YsG23EcPM+75g1HTcHF
      6PLEst1gVEJ86gXM+CtcrI/gK5dcYDOdr2MEMA955VG3Q1hHRAaDxqCBlPhBIoygaBcZevAL
      KCXpcxXdvgAExhhGI5sdXkJVwWtNl8dKMfcXFW9PObwd2DxQ1Bvca8VdjSFMFK/ULN4KPA5l
      FXdlI2wU46HFN+Zz/GZXAwF8Yz7LLV7Cxcjekue3HWFUgmnVkLmOy04ivzhP4yqoHHuC2QtP
      oIVCWVC3AuqLC2P72dWsxfnTrLrWmHSKlUiEAS0MfmJTyOyk98Ev4XYP8Y8HWpxpCqqJoGib
      pXaHfcFnrIisLRBSYgMfKMa8Und4oBhdsc9aJ1wKLULh8I8GQhwJxgi0MggBvtT0uopKkq5E
      p0IbKQyDjuGBQsKJpsWZQKL+nq4KZvIUsnwCbvt1jDHo8beR3TsRfn7pnP/EAKQELBZm6S7e
      Rm3hbURsqHvxisk3/bA4iRhj0l/a38XSAUEx9LC1Q+GWxyDfCV3DRAYqSnJbLkYLa+nCRzsS
      Mrak0wWtFbRFpv1+nK46V4EUFvtygv1ieaVtKsPRmsu0cvjHgyFZDBUFOctgNCRCcGc+4fa8
      4rZcwqXA8LXp7FXFrJ836EYFQYC57Qvp+zEGKVqYuLmKAeQN7OMNhzGG1umXiMbepvih38bK
      d5NIQc0LMcJgq7WPxyAMFMMswizK/BqzYkUIrQTyXYyNPEFr/tTijchKg23ZuHKRmQQZe7l9
      KVd8tmxuya5eZTaCkHKZ+QBjNMaAljb/oDsmbxmMMRxteNyW0XyxN+ITHTG3ZdXSNUNOwrCr
      Nmr+5xa6UYGzP0aMHSd+9XtA+rzF0D3IQt+qc3+hGQCjUa0qU69/nWT6HGRzGBMjDZRkL3ld
      IBu7ZCIbjEEYQUdQoOEEaKmhLfMvzuil2EcKyZy+SPfA3XTe+0V2uQl5yzCfbP2jFkKSdySP
      lBKkAKMVC8riUmTxWGfMrozh7oLCtxaHrzjedBiPrS3v25bCGIQx7Y8a06wighqRyeHc9WmM
      StD1cnru/FnMwujSpb/QIlD1xDNUz/+EhizTmjpFZuddlEbeIlYNrESiVAA2BHaCwSAwCNfH
      Ek2MFmgp2gpvuz0nxGAoukOU7v4ct+QlX+iJOFoTvNVwuCmjr9CbawtjDMZo3mz6/FZ/hLOG
      /7RWHG9Y/HAhg/k51QHMItHPXoR8FzJTgLCFuPAMRrVw1Rx69jyyNQpYGA7jl59F2X0kHTuB
      X+AVwGiF1WwRmQZGwPz4S1jZDuydN1NhAmG7lL0KaE1H6GIb6Oq4HbfrJnxRwjJWm/gFxqTW
      SiMMrszS/+BXcb0MHygmSAz3FA2f6b6yQrsVEEJye97QaS+LU4uMUUng8Yr/c6sAm+oM4rWv
      o44/SX7smzD+Sjq2RhnRrJK3F7Btg5k9i9WcwglO4439NX6mQlI4uNTOL+wKYFp1qudfxJMO
      oRXRTGapHv0B+UOPsbf7ZloTb1GcqpMfvhURRXTtOEg0M0H9wnM0MgHagpUmSksJkDB02xew
      Owf4Yk+LYc8gxI2ZY4xO5fped1E0MERK8e0ZjxjJrJIE5jr2ba1v4n0gGXkDf/bHhNnDUJtC
      djtYuU6MEKjKDBz4BM1kDl3cj2jN0pU5RbOapVr4ZQI3g8yVltr6hWWAaPIcgd0idGKEkBgM
      Y9M/pq8yh1XqJr/3QXI770LmO6md+glTp56gGU+jMrptMFl+mwJAQr9/C/7uO9nlKvZmWKWg
      XndscG/Xsvj1fsVUEPOns9nr0w8DWaHZm0l4q+VyyI85H9oEZn0fJQZbQHQVE5i16zBhvg9z
      6mmyuQbV0mcRPXswY2+CDjANjRKazOifESR7mO17BJ3twOocWNfWLxQDqEaFcPxtMvsfQLUq
      9GT2MB9coOXEgAVCE8Vz5GoOcyd+SKVyCs8ukPMHqccTIBYl/tUvKB+7uGTJ3vFJhOPhSUWk
      QRvI3aAnLOVqxbYcwcVAMq0sTjfldZL7DTlp+Egp4mBW4S8Iei3FY50xk5HkxZrNWGQtMcId
      mZjIwMnAvWKrQkhksRvt+ATuILm+3bQ0iLiCKPRCzz6s1/81ke7E3HQfutSLcDMbtvULxQDx
      7CXmj/+A4X33kbTmmYrOsCgFpK/AZsFMEFbn6Mrsp2kkTVPGUx1kKdGkyiqxR0ssY9OwQxy7
      D6dvNwDvBBb/4pLPgGP4/aHtEQ5yvGlxd0Ejm4qX9LUPfVkLVxgezMe8Ube5q6ARQvKp7hhI
      V8Yu1xAYxVh5mQSPtq5M+CshHA959+cQtkNLG3xpCPY8giAV95Lb/3OEn0NMvIkJs/+JAQD8
      3bfR3foVAHL7HiI3+SZhUiMgZNmeI1DSIPO92GoCiKgFIxTjfgwuLS8iZQKDNoZs4lPovInS
      wY8g7BWEJQTVbWReH/Lh7ZbFq/UtMnka+ExnSKANE7FFXQke7UgIjOTrMx5ouDWjuKeUPpS5
      WPDT6uYJfiMsPW8hCFaITUIIRCZ1domhw1ds4++1FchojW5Ul8xlAJmDDyOkhVXqRzo5QNEZ
      F3CS1JoDEgQsTL9Clm4sI1HCUHGmCZzUkpMPHTpaWfKiRH7nXfR++A/whg+tu/9Nme3DAfsz
      mucqDrPJ1jBA3tLcntcczBpuzyYM2AplBA8UEmYiya1Zxd6sJtSQ6HRFqqkbb4H6e70ClF/7
      LuXxn9Gz60MU7/w0YoVcLCyLnrt/HdOoEE2cxR95mZlMA2ULYpmQuIpcqURmJkvDaaCFBmEh
      NeSjLFauBzG4m/z9n12v7BqDL+Gxju0VDNjlaOqB3JKwh7qSzEWGAV/Q6UI5NoTa0OWk9/1h
      2YUy7PTSSWEi3h5z7/boxRYh07kTX7lUzv+Miaf+JTporDpu9+2mtXCR0dmnmczXUTZgoNBy
      GYyG8a1uit4gGZUhl2TSGE8tiYiISMDyQK92bh1wY77aN8Pv99co2VcPZ7heeHLe5lIo18bx
      XTsIeLLsLq22d+cTfJl+/lJvxAE/AQGjkcVoZJEsiiyLTpQbhL83DGDiiMqbT2DiZaXT23Eb
      Xfs+TiwCqq1zzD3/NXTYYvLp/5vg0gkA/OIOPOWw6NACyFs9NHIOl2aeoarnKDRsAjtOzxGG
      hWzAvLlIc+IYJmy2O2C4NdPg0z3T9LtQcrbP4lpN4OWanY5Pbo3Y0WEpOhyNEIJQGRKtlm7l
      SfilosJZy30GQNzQQLzt85beB8KJd5g99lfUglFUUKHr/i8CYKIW5bFXgTREeb5+is7qHEFr
      ivEjX6O/+Vmy+x6id+IBZmZfwVUWxghk907q1VdxY0nTqxDmxVKkv7bSeJNC5JHdfScik2en
      k/BgocLeTBMLH0v6N9YHsAaVWKK32OxZUZKpCN5paBCCV6tZHi7G7M4YvjPrUk3gzmzCq82V
      hoIt7dKmsK0YQLIcXrZZGGMgjune9xG64wira3i5vVwH+Z2HKc4PEUTzlJtnicqjdA7cw9T4
      j6iN/Ay/Zx/+Lb+E27iQijlWBitbpDDn4yiHSNdQklUvSyKw7Bxe/00IIXi4GHNzNgN46dFt
      RPwAi7pmRmpaW+T9NQhmE8mRhk2gBY6IKNhVoEA5kcTasN+POBNKFtT2Cb7bNgzQ60g8KbgU
      bt5yYpKYygvfwN97H3MXnsXU5uh74PeWjgvLonjHJ9FhE29hhsaRr1MdO0LXzR8jM/ozbK8L
      q7MfSwiGP/5fgdEgbdTcON7wbcwd/Q7a1MgHLnU/tQBZWpJz+/C9Xpye1O5/rOmwPxthie3z
      YldipCW2lPgXESM41bL4la4FDmQaZEWW6VAyEwtiI8ha8LFiwLfnt0/+wQ3VASQw4Eo8CbGB
      aqJxN/lcjNZg2XhDB6mceppK6yzSy+D07EqPRwGNE8+mn5OIyukfMXj4N+m990s4g/vpvf03
      CIJ5xp/+VyTzE+ioRVKbB2MYff5fM378m3hOB35iIwHZnka10PTs/yRdj/0+wk1TSd9u2fxf
      Yz4jjQSjNbOhprF9LKA8Ugj4p4NN9vvJ1iucQnCkluelag8t41FWkri9fHpCczAvGHS3j3Hg
      hqwAGSmwBdSVQQpByZLMxqnwczURyEQB0dQ5gpGjWD1D5A8+irRc4pNzZHpvBaed3+x4BOMn
      cAf24XQN0fPBr65qxxnaT752CeIIq9BFeOkkU299i12f+O8p9R9mbvJFED6FpINZd4aeMEfZ
      DXFkBqtneFVbrjA0lOD75Sz5BYWQkkPZhAdL2+dFn2hIzgfL2WhbiW7b8FBBU7AlL8+mJOZK
      +H7ZZ8gxTMbbY/aH68AAeUsQaIMy0OlIyrGm00llwpoyNJWmlphNyf7GGMpH/5rp8Z9ia8mO
      /t/CRAF2xxDDH/9vEPayZ1EIQfbAwwQXjuF0Da1uR2uEgUxxD+6+OxFC4BT76d33K+ioBUZg
      MEzK8+CR5vl6gkKUp+Ouz2GVVmcVRUbQ62juLyj67IQhN2n7lbeJhCngtlwTR8D3ylsfBDce
      W1SVxpaGqba9PzKCsdhmLLp6lYvrAWMMaLW1bygrBZaALkdSTQyRTkOwKonGbT+EhWTzs2Q4
      epLp8WextURJg05iaqeeI7vj8BLxhyMncAb2IL0smd2HMbvuANpx8I0FhJ/HxCHzT/0JZSYp
      XLyJvod+D6trAKtRZvKn/w+VZBzstKyJAaQ2zFp1hCdRx/+GbtvG33vXqr5pAztcRb8ngK2P
      tdksjDGEWvKjSo5hNwQybPUqMK8svjcHn+xKCLRYfbttQvzW6NNk9JmtZQBNW+Q0EGpDwZWE
      2tBQhsa79MiohRnGj/wpCE2HGaDlKKx8N7LVwMoV0/sFDSaOf5Nh98vIwX0YrSk/9+cUD3+S
      ZOYSCycex1U2/oH7yey8g4WL41Sqp7B++u/QOiETS7xqFS9jYYmUyfKhgzYQeoKW3ULRwCr2
      ruvfnJL8yaTPh4shH+zcPqIPxvB8xeZI0+do3d8yP8BazCmLHy+wLUydK2G0Rp97gd6uN5GO
      2FoGCLSh6EoaKk0bn4neW0qgqs4x8tP/HU1AIcyQv+OjZISh+vYzBMEEnapJbv+DRLOjxLpC
      a/oUzuC+dviyoPrad9GtOo7IMCvOkpuyGHr0n9HXWiBWDZqtaeJgGkQ3HQ9+kYJtY3RMNDtC
      bv9DaJ2QzE9QGXmerjt/DXuNSLUIKWCnZ2gomIokJdtwtgm2kOzyNT03QvkTgpwtOeTHvN28
      viLZdsk11o0KYuoVcEr45hyF7gmkLajPFrdeSJ1+j0S/CmGL7vwB1Pwk9q5bCMuXcHI9NOdP
      E3iK+jvfZFfQIHvHR8m4AzRH30C3GniDB8j030zwyl+jchkiVQEb4riBUQn+8O1kciXchTFm
      j32TjF/C3X0I4aVysr//PkwSI1SClS3R07eHaPIc7sDeDbupEXxrzmfA1UxEEksYmioNrvOE
      4dFiwoOl6x8f9FAx4nRTcrK1fUSz6wU9P4Z95od07WsgnTRrL67bzNcPo4bux/rn//yf/4+2
      fe35YDJQHK9cm5ctswW83YfxBm9G2D6t+bOIOIb6LE0nwgiIypfIZXfhGJvpyhHiyiV0klA6
      /Cl0s05j4QwkishJyBgfL3LQtgVa4Q/sZ+HCs1TMDO50FekXAGideYnx1/6c8pkfEYwew+vc
      jb/z0Oqw5zVIECyotNhUbJblX4XgfCgxGvZcx+R4SNMjC3bIkaZHcj3TIG8wzNwoXcF3Ke6K
      kLYgqlss1A7S6Pgk9KbvUQRBYLaiNOKRcsR/GGld83YBdKPK5NP/BzU9SyF2acoIZel2NU5B
      JFMj/K59XyCaH6fjvs8jHJeFH/8Zk80j9OmdZIq7GK+8hO/30Hnglxk58e8RgKMtjDG4Ik8g
      ami5nMxa1EWGfvm/Q3gbJ1dsBsOO4j8bvL4J8kkc8k5g+HEtz0Jik2w3wfwawxiDqUySmfge
      HbtCjDHUJos0Bj6LzHevOneb2OneHUS2QO/9X6Zw5iVEtkiuPk9YmaBsLuL6feSMg+X5+AMH
      0UmIcDyE7eDsuJmuiRbZ/jtRYQNV0wThLK5XwNE2iUxIhMJISEQ1vZcWS1XaHJF737ndY7Hk
      YpDqBNcDabEsw9FGDgwMujGj0ftLRNn20Ar55rco3Z3WVq2NWjRv+hLSW28C/rlgAKM1Jqgj
      HB/huKndfvAmnIG9NM68zNTYE2gUg8MfoXD7pxCuDxiEtCh2Lzut8gc/SP7gB0nmxnFtl6Fm
      hXp9FKtrgN6Ou6lVT5NTeWascSwlcBILY1sIJImlyAwcQjjvl3gEfzHt8oc7WktV4rYWAikl
      d+ZrfH++i9ltkISy1TBBHS8XgbFpjCuazj1Let1abHsGaJ56gfkLP6bVnKTQeYDuQ5/BxBF2
      706klyG75y4GkxZecQhn6MBVA9FM2ER6OUS2QO6eT5N3MyAlHR/+XYpBA4yhMDuKkHb60Bwv
      tV0bjSx0rUqqea9YzFu9HjZCYzSRrlOwMgy4CRejG6AIX5+hLt9u7G0KOy2MMlTVXYgDj1z2
      3G3PAEYrauEoxob52gkaz58mtjTFwgEGH/kDhOtTOPThTbWVTI8Sz14kmRkh/8hv0Bo/ycSx
      b5LJ9uL33Ey+YzfevruROw6iavNIP9deTa4tIiN4qyG5p3jNm16C1gpjNInWPFkpcjHyKasb
      ZAW6jsSv6/Nkw5ewPJg9ARy+/4qT4rZnADfXgzA2pl0BOXQSQFCpn8F9/dv0PPjb67yLamGa
      1sTblC/8lIH7vozTu5to5iKzP/0jEiISqfFnHqZ55mckMqAajlIfu0S+5/cxccTsS39OefY4
      fYMPk915JzMn/46s30cYzOPku8gOHMLfdfi9hz0LmIot4NpHzGmdJqVEccyLdXi4o8GjnRHf
      mxu4cQxwnWCMQYy+QrYrQic2ScdhZLZwxWu2tU3MGENj/gxKxKsqMIPAMS40AuZe+o9pZGh6
      AQDB6FtE46cJwjl0o5yKG1LiWgUabkw2vwO0JiJIrTwCSv4O3B2HWDj2t8zOH8GxszhWjsnn
      /4RK4zT1qaO0aiNMTz/P6NE/JZkeeV9jG48Esb72jrEkiWm1akRaISU8US7yZ5M7uRi8d8vV
      zw1UjFAV7JxFZdRF7Hnoqpds7xXAaOqTb7FaiBQU6EYYw0z9DfyqDy8L/M6dWMJGeBmalQvM
      No7SLQZwhw8RXjpBc+w4bvduRHkSKwqJzx0lDKt4SiKEpLDzITAmzSATUOo6ROvi62hiEJqm
      VaPL3YdQc7jSp3nxCKX+Pe95aE0NF1qaA7lr6y2VUuK6GaabAbs8TUUr3mgUtkUMzpZj+i26
      h0bRMQT+nVh+7qqXbO8VoNWgFUyukiHzshu3sJOKnMVIg5SSuakXmDj5LeojRxl77d/jtAs/
      6XwO4XjYxT5qs8eZnH8ZI2FGj1GvX6A0cAe28dj92P9A9pYPEM9eItYVIE2miXxB02sXc9KC
      bGkv/Xs/RSOcIVi4SDjxznsemycMg/40Wsfv/QFtANt2kNIiZzucbvr0OdsoMWGLYUWzWJ4g
      bNjIPfde9Xxj9PZmgNbIG8QyTXIXCBzl0H/o86io3J7QDA3ZJJEJsYyZaR0jtENkkoCBVn08
      DZcu9TJ431fJ5fekDQuJlevAdzrJd+1DFjoR0kLVy5h2JYOkPIYbGWyd5kN6iUNz5BVar/41
      rpLMt85QOfr9dZUmNovZ2CFQDtqoVXWL3g+0ViRJylAdjqDP0Ty3cPn9sf4+QVcmcPRFwBCT
      25Sz0gSN7c0Amb33MLznM0iTJnJ4MoeV6yZsziCMROjFF2swQmNEKs8HwSyWkQSiRXDxGADu
      wE303/87eCZDPsjiF3ZQn3sHy3gs1goxYlnTaMZlYkei24VwAzdhNrdAJd9CSY0Bouok4dGf
      kExdxJh359gqODFZO+J43aIaRquur9ebvPzaGyRKo01agU5pk+7+YuDS+BRKG3T7t/HJaRKV
      Xp/EIUkSYVk2B7N1+tyt8cZvN8jKGfLdcxijsUwdozYRhtOY3d46gMzkKd7xKaqTx3HcLB17
      HsHq28HAwS9QO/E0gZqn7geLZy8VN5xNzoMlEAbi+jSLc4Fd7KVn10fIDB1CN2vUzz/OvBXg
      nb+DzE33YeW7yFIiVHWacgGBlTIVoKQGDC03XrqfpQzhiWeZGnmKnsOfJ3/wg5seWz2xebLc
      zZlmnn/St7rm6OtH38TPZPnh3z1NK2iliUDzZXbu3EE+l6MVBDz+5NP09faSKEW1WuU3f/1z
      eK6D4/oolTBSrdOVa3Ewa3O0oanobTbX6bR6xLVanUzPHUw+d4Su/Q38LkNt5gLWwP7L3742
      QzH8u+3NAJBmdg098FVkvmMpCK1Vn2DOngAHhEk3qVikH4NZCoMGQ5K0MFohpIXRiuJdnwKg
      evRvCe0WIAjmR8jcdB9u9w6yxb24zXkWkhHqemYFXZq2Jcq09/81LORCGm5MLnaIjj5NlOnG
      2XEzwrr6Y02QHKuXEAb+ZCrPb/cF9Lb3Ltp30x5OnDzFLTfvxxhNHCeUy2X6+vpwHYfxiUmy
      N+1lYGCAVitgfHwM27LSmjxhE9fN8HKjSB8WDxdaFOUmGWBx+dsiickYg16YJnr7RZKZi9gD
      NxHVxsjd/RmszsH3VU1DZDuQd/4qjXPfoqsH8uFPaAYDqzbEW4ULL+Lvrm7PYLjownGsnmGs
      fOeGx3WrTu31H2AsCzffT5LUmb/wE5pWnaUdHUnTGi0j6MnfQecv/TbJxbdxb06Vo+bbL3Dx
      7a+jLU2GIrs//F8j8h3U3nqK6Xd+gDCG0FEsboxnBEgNGeXRsEMQyyuOG1kUAofA0xT676Lj
      kd/Z1MssyITPds5yrpVjV8biQO79UZ5SCXEUUNUWfzGbx7bh/kKd16slZvWNi81fTD+Mzx8n
      eONxAreKkFmkUJioQatk6Oz5MLk7PvW+mGBxhximTqPKM8hdhxGugyitZy69ME1X+LWtWwHe
      OvIk0ydOUui/k6g+TWb4NpzePZcdoNGa5tlXENUFlC2IRl+m6+EvExz9Cf7dj4HRSzOr8HOQ
      LVCZeI1o8kUcmcHoCKx2+lmb+MGgBEzV36D15BgD938lHXzQIE4a7Y3uwCQt4tGTuDffT+G2
      j+G5XbQuHiVsTdJUC7ixQEqHwE3IZoeRzRlqzC/NlJGjaGjwlYOePEvz9HPkbrm6OHRnvsGF
      Vpa8kzDstTAm//5mQQRaK2KR4ctDihN1ySvVEuUbSfxRQPOJ/w+RKZHMngPRoN7RwG2FNP0A
      oQ0drU6cQg+ETYyXfc/PQAiByHdB/qF0jU5inJN/Qtx6CNN3J0hrqW0TNhCW2ToGmGuMM1N+
      lZn51K5ujz5Oz+AHyRSH8QYPYRW70I0K8egpZK5E+Z2nCebOIZwMLVNG2jb5C8cJxt8gybrM
      nf8Rvfs/Tu7mDyCEIA4qNJMZsCAhwjgrldDlWRsDPa0i2a694LiYsMXsk39Ecdd9dOlhGmIe
      y3bQs+OYwTKysw/v5ntx99/N1JP/Ei8x5EUB79AHSMbeRnYOUUhiwkt/S2RFqTgkIPAUfs0m
      thpk5mY29YxqicUnO2p8fy6PFIb7Chp478QqLYtMtkhWpDvR7/NiXqnfOCnXJBHhkadIyiNE
      LU2rJyLyFAhoZBoIITASGqZK/sSPEWMvoHd9FLHr9k3fQ7fqCC+LkOtFPGE7RLu+iHXqr3Bb
      L6BlP1H+PkTPXqiMkbhm6xJiXjr9OmcnL4BIzYhaKCqVs1TKx9FzY+R6b6F16kUm3vk2tbHX
      qKgxIjsklOnMrEhoTBwlFA0qs8cJqVKbPUHrwht4bgf5/Q/jtaDYcROthRG0WLZ3Sy0Y6HgA
      EyfEpgHKkOvZj13sp3XpTabnXiKeO0//A19G1uuUoxGa9YtkyjFhcwandw8IQWvkVeajc4RJ
      lUxhJ9m7P0EyeQ6KXWRlJ/X6eYxIlWMhJKGrKDRdEluS2XX4qrrAVORwLnA5H/kULcPNWd7z
      nmLGmKXZTWvFqTp8Yy5L+D4Y6v0gHnuH6OwRGiPPEBQT6pmQ0EmQVntvBa2xLIkwgn63wK6H
      fDJ9CfG5U4hwGh0byPVecTUwYYvCxL8lLpeh60D6WxSk4ml7c2w1fQmKPXR2nCJTWMBNTtK8
      WIbeO0iiLU2JXKyqsCiWLHWb+frbNJ/5n8jrArGlSayNE0RCJwYWrS4CJRTVaJT6G39MhhJS
      GboPfAxX5FFqAReHbGE3+Y6bqddHKXXeQl/xUeKohpXtQ1VnsPwiWbuLkDLJ3CWksjFoIhvC
      5gxTZ59nT64Tb+ftWAmAJLYSTNJCWA5WoRv3wH00Zi/SJ/YyZc61zae6bZqF/O4HlusTXfER
      CSYSF19q+twAePeBd4uxP0qp1A9g4Hhd8lQ9h7pBG/QlM2OEz/w5+FlauZigEBNFKrXKxTqt
      vyoBDF7gMHxnASHTubLjNomUZ1HxORYujaKGP74UgWuMRpenENniUnhzSw1heu+CoAHTb6Hn
      LiEOfhzdmMeaP0bGmiBxDiwVnHIyhr7ht6hPnKXZ+xtbyQApUawl/kUENAhE4wpmMLHBtYvV
      2RQN5rGkRX78JEP3fQXdrGHnOzHGMPfsv0NbhgXrLAMdnyN/60cRtoOJQ3R1Drse7QEAACAA
      SURBVCeGorsfZ89hFmrnoa2r1/VMKkdX54nOHGG+eQZhC3Jxhuy+h1MZUlqQxMS+jdu9m955
      mNXn0dKghWG21EK/+j2KtoOz+9al6nGXQ14m/O7gWTxTAN59vI4xmnIEiZG82XQ41rBpYN+w
      agy6USE+8xqm1INujBNJhdYG25YIAUppHKdtuQOQhpUulMVoc8s1dBaPUh0NCHsfQ2aLCCER
      1UsUaz+h4fwSevBh1L4vwOwpctVvQDOkGXXhjX+DbMc8sh+0JRG8ilxBZ0IKCsMhYuwvt9oM
      atb8XfNZrCXyq2G1s8nBxu4YwtTLJCqkfPQZsqKIV9jBVHSMRCgunv4LirNHKAzeR7AwiqsE
      VeaIohaVZ/6Impxoix2SmpjH0hK3/yYWXv0OiZXer+VEGBUipMQ9cA/Nc0eYuPQ4PfZ+/O7d
      ZKstGvEURmiUZZgr1LBe+BbW2b0UHvvyFUOqD2Rq+FIhTB1DAfEuagoZYxhpGr69UCC8ys6K
      1wu6Oo9/7yepffd/Za7UQGU0lrXcN912Xi7utBl6Ce+cmOXQvX1Ie/UYpC0odZ+iNXmees8/
      RBQHwC9iozGVceiJ4PyP6ex5E6dLQ5ckt3OhfXXalrwCfeWHm9eLAdb+Jq5w/ErXwsqVIZAB
      o1NPwNTy0Woi6asXMQWdVgCwEuYqbzJXebN9tcTYBldrMtKllm570T5moSXMHf8OEdUl+T6R
      ioXTP6Ln4d8FwMl1UPJ3U7r903hDt5C8+m3q45NLq5m2DJMdNXKVk9jP/hXe/Z/EKq7ORV3E
      7fkqBpV6skl4N0W1IqX5bjlLuI1yfEtDu2ieeIlI1ImzCstKa34vRnukovmivpJ67i0pERbo
      yCBsgZDLDgkhBJm+iLB8lKQ4gBVO0dR9mAO/BmOv0zPwxjrGeTfYZo6wy68IygiaKu1uwV4b
      QLZ8XWxpIitBaomy1geCLeokDdGgaZobSmDzzfMYFAKBF9kI16e0dzmryO7bw9DH/kuElOhW
      jfL4ywRG4JLacGwlSCxDy0uoTxwh/OEZip/5Z1iFrnX3uhRk6HUXvdmbf5HGGM7UFXVjvWtn
      6qJjcCsgj/2E0bM/ZKHYQIcGEaVEH4QRnuuCgDiKyRf8VA8w0FXKIIQgiaAxViA/WMX2Vw/K
      6FRPVN13kF94EXXhL3HkHNKGK0+kV344N4ABNurQ2py55QGF2iLQFrGx0IAvNNXEJW/FSGHW
      XytgPrs2QG2DtjfshsGI1J7cY+9DugWceI7cnZ/B6l+uBSTaLnwTR0y8+G8JqBFrmwhBSRoG
      9S4qeo6IFvPFgL5WHnGZd6RxcE0nCXUM6qo8EMcRApiODE/Vruw3MFFA88Xv4N/5UWS2hG6m
      if7VEz8k07Ef75Zf2tB8+F5hjKE2fYmGbhImEcYYpCXR7TilKIpTW72UaJ1G8iIMM+UmvSaP
      kwcr8pgLfxWvdgLPGsPJhjSrfcSle8lc+DphUMLpM3R1nmdz4vPqPJK1uM4MsBmRZ03ii9A4
      lqauINA2MQJP6jbxb9yustbeZzF8IW3TYJa8uKm1SmDQ5CMfvDw1M4cWmkxsEF431tDNGxOa
      lMi2CTRvGYQwuLGF6Oind8/HmH3168hE4HXfhChs7NVeiNMtRC1TwrIvX7jWGEOSxDTjhONB
      hucbPuFVavyEx56hOf8G0ZsVSCyawRmEUrSKId74CQZ6dmH37rpiG+8GujrHXOsMdElKzgYV
      GCJJVg+jbEPTutRejQWtJCaqKbyiRb5zlnDyAvH+LxKFLXRjAVkMKAXfwOuJyatLLG/D8G51
      yPXYJiLQshyeDmhZ2ZUCIi0JjUVGxjjS4Mu1os27y7oWG54rqLshXe4gnZWQ3OBBFiZfpWPv
      h8BaLZdXj/wdUTCNigMa5RGwITECV0Bkaxq1EXp3/QaFC3eQBBWyj/7mZWfqo80se/0a+7I1
      bOMhxPpXYoxhPjJ8bTpP02xOdDFGI3t2UHQ/Te2dH1DpbWIKoj0RSAK/Sfnkt+jp+cNrsqNN
      GuczQ2LqqVl4hV+ifQKd9r0UH/gSABMv/C80nVkAHC1xC8vMbJwiam4cYTtYnQM4o3+Fv7jJ
      9qrH826IfyWzLPfrBjKAWPOXpSAzs9TZtMOO0HTZIWCwhNnw2o3bX35AqUl2rfK9GDKXMpQR
      MBedI1/ox9iSKtPUz32H/sY0nff8GsLx0LUyExcex8gEP7AQdtqfmhJ0CoMUsMA01uN/RMfD
      XwJjrlJKRTARO+xDo4mRG7wSYwwvLEia2to0nwshEY5PWLtErbuFsRbLhqW+GaEFmY6Dm2ts
      E9DVOWqv/gea/REkZp1DT2hBZt/DCC9D6/RzxGphSd/XliFpaZxsqs84eoyk0U0h+huaEwdJ
      QhvTaRCrysi825l/Y4nhBjLAepEnJX27LaQs+xCEMFjrBrx2+ROX+bzRPVfeMSVggcBVNpbw
      6L/912lMpdle0kjmx1/ENVly934KkSsxMPwhbNvH6dmDunCCsbmf0GWn24AaJMqCueQ8/pGn
      yH70d676JOrKIVWhN84pSJKYyGTetW3fGT6AzOTxXz5Gw66n/TMGR/t0dj1C7uAnrtnsXz/9
      BI1CFaXXjiF95jYeTiaPrs4wO/04sZ8sHQ/8hNp0RNee1A+SzY2TNLqpWx+iu+NHSFesIf73
      i2Xa2VJPsDFiKXNrY6z/fdH6crk2r3TtRsfSGS81w2nAukzT+cClOHgvxft+DZIYzr6Iq116
      hx/FL+1k/p0n8RfuQWYK+KWd2IM3YRW7MDsPMvBUjanqG0ROQkl3ESZVAlcRTpzCL09hdQ1c
      oa/wVrPIhwoh3Rv4C4wxGKNx3qPRxqiYrlv/IXLkCcJgnFzpdgp7HsPt3Xv1izcBXSsTvPQD
      dOUEJp+u2tYas6QVWgxxMztnz/L6yNPUnVm0AssWSCEwyiCMpNWKyWQc3FxMl/M6Yd3D8gRb
      6dDeUk/w8uSyWWUllf9TEWjx/9UyrZbFGmVEm8ANiwkyizledW3jC40l1rcnDMSOJnfgEWQ7
      kbrzQ18h887LuEO3kCxMMvixP0S4fhp8lc8jc8VUvBGC3Id+k/xT0yzEF2mZKn3522m0xrEH
      hpD5jk2MG35SzfG57vUb7cVxyFwseLP13irS2b27sNlF387DEIfgeNdsF0vdrBI8+y3mOUHc
      pYgslVp5xPI78Roe/Qf/EaXaHEeO/JBLuVl0qHEclzBSxFGM67ocvzDO4cwgmUwqF0kXMl3h
      5W/+vnDdRKCVSscK9/cSNmKMtTL+5ZlHG0FiLByREBlJoG1KdrTUzsqr8lJdtp1ikKf/wa9i
      9+1e7pm0yNzyMOXXvkdYHaF/8J8Qz41hF7qpn3+FTHMBO99HPHuRzG0foueB36I0e5HJ8z9k
      JjzF8J2/DeVZ2GQpxXcCn7k4otddrTwqbfiP5RLqfTq7hBCwmSJfV0mKyUlDfvocQhjOPPM9
      Gu4EUYdGW6adorpi9VWSzp5HcXbehrNwida0Iiv8NH9JCJJE4PsuliVxm5JM/vrXLdpyHcCY
      1MOaijXLgW0rldwNrlrz9/JnVZSNKyS+0BRXBdWt1g8uN+nZiUXvbZ/H3nVow5mxdOtHwbIR
      tkPl+FN0HnqMuZnXiedfwFYSZRkGKxcpPfgl/N4d7Np7J9HEO0ST58jsuXvT0Z2xkTxe9vmt
      vgBLLMcP2Za9fof1LcWVOcAVmtmXnyaMFpgNR5nzGsiGTG3+UtJqBWRzGaSEnOPhDd2BEIKF
      0jCWyGE7wVJbVjtaViaC/Xu7cdolYiqJhyeTDax91x5bJl3ZysJSDkJIDAqNAmOBke1A/Y1W
      hJVYG0jHqu/aQCVx2xZ+gyvVBkRu1vxn3T1Lnbfg3vrwZcUCmckj2zNn10O/gdW3k2ymDyM0
      sZ1ghGF69mVap19CV+cRXhZ/713kH/hVdKt6hfGtx8XI43hdoZKYIKpijGE2Mtc3oeUqebrK
      CPb90mMsVOeJHUXRZPEzLo5jYTsWnueilcbzHBydwSr2LbW7krGXYGBnoYTp76SuHIyBnBUt
      ef23GlvGAPuH7qFX7cSPXSQ2Ejs1zWEjrhqjfnkn1yIxCyBnJXRYIXkrRqxwjKX7kl1dYRZG
      UNr1yKZlYull0NV5dLwom6bXJZbh4tlvMvvsv0HX5jBxmIZOd15Z+V0LjeCJagd/NJXhZw0H
      pUNmtXtFgtxqGKOJ3nx+qXRLVUtOlfZhexn8DherQ+I4gkzWwfMkubxLLp+GOSRWSDj+FkYl
      mOo8otZaquQhNLhBhu5qN3270oSglnGIjcQWhg57q+T/RZ9TOgFvGZvVa1VKH/wtCpUZauOv
      oy2bxtRp4qBJaCcIT4BpS/yXixO4AuJYkcQRtm0RaIPRGtu2McYQBCG+7yEkuO4isy3qFsv3
      co2HN3Bgczc0Bh00kMUuMj37qc5Mts2eqX9BCQ220652IDEqofbSX1L6yFcuW5p7IwTaIsDi
      5XoHPU6Fk60bvM9WkmCS1cQohMAtDOOEVcJsKqbIRJC0g9hk+6+yEiYv/QUDQYBoBnQOP4Y3
      8hJ6qI9cz13Y3buhVWfh3F+T3RvgeBqnbaTYusrxq2ltyxhgz10P8NJoiOndSdf+exBC0N1q
      EI28xeiJbxCqFiJOmQCf1BSzoW3/Msxh0lUgaEUkicLPeLRaIWGU4Lo2QRAhLYHrLnI769pS
      JJg4BK5cQHXpSq0wKqE1d3ZNe2nfg2AWmSkgbIdk8gIzzZO4J54ne/fHr9r+WsRG8r35jcMn
      thpLhbqiADU3gXv40XWrpMiV0HWdTuUG8tUMC7kGuBaJAbs9qdmhxM734Nx2G8YYivvvQlx6
      Ft+8ii6fhWia0qFmWzG+XltHLRtatkwEku0gq5VmMZnJ4R98gL2P/hfkk056wixF7aMVLBPp
      Sv1gJfGuhutZ+BmHQtGnqytPNuvgF3L09BYpFn0KRZ98/srJKFpoFk4+TjI3ftXxCCGQuRLh
      O69Q0xNsFN0mgxbzL/wZullj4dj3iW3F3Nkn0a36VdvfVohD9NwEwVs/bYtz61chuedQmt8L
      ZJMBuu79A7wkT13ZqLb4mW0U6Bv+PPauW0EI9PwE0U//nO7ekxQHKnTKS3T4QZoNtsFr1kYQ
      brH+c0M2yZPZIoWhO+D0MXKxRCtD6G6kxALt8IiNsKivLf63ZRqQtvK3RQZSZv2yaoSh3hzB
      jS0yw5tLxLa6d+BUGtTqI+t4M3Ri6uEE4cnnmGcchMBR4DU09vDN7znf93rBJDFqepTwreep
      nPsh2k7IHvjQ0ibkK2EVuvAiD4cc3bf/DlbXIHJ0FGWPYbdFoIJ7C/m7PouaGUXmOzGzo9hD
      uwlnAtxCBS0UrfkIt3NjItcINGJpNbk81hpVNiM/bfEKcDXIUi/W7tsxEkqyG7NhjdjVgXHv
      HukgYy2vOJO05s8QTpwlKU9esU6nrs1D2KR06yfx1Eqb+gork4Ca32zf2tBwY8oXn8M0a+9j
      HNcJ0kKNn8VMXSSUCzRrZxl/7n/DROvrOwnLJnvoo3Te8xVMq0n1p1/D3XEHUq8gPuHQOvfy
      Uiy/E53CSqYQhRKWJUgsjbfDZmOCTZ2anlyM4dr4nNVBlJuNE1sx5E2dtQUQQuDf9VESvwMZ
      hRRCF603ygt4/zZwS+gr2pTrwRhnX/oXnHv2f2byx/8KVV/Y8Dw1N4Gan0Jk8jjW1Utvg8EI
      QyxjktFT77H31w9CytQf4mWRiSDItsh37EO4l8lVFgI1c4nGj/4YhMIdPkTO2ZMeM2nBMH/4
      duzBA+jKDIXiWTryRygWTgLgeXb77W72HV8tROZqwZHrze83dE2WhU5y9/wyws3Sk+TJhA4i
      Eu1ZeKOHsvEgNj6PpTakuLJVIZEKY2liETBfP8HEi/8v8eQ5WLMaqPkpkotvoyuzxKZ1mT6u
      hSF2FNH425jk2pZC3wrI7gFEtohfc/CaNhb+8gYkG0C3qswNNVDNBaJTLyNmy/iqxFDX58nc
      +cvIXCn1BWmNUQpsg7A1SWJQKi3wG4YKpa6cuLI+qmClfrjatLkalwuSTM+94RtlW139qMos
      emEGJxFoqUncK4k979Y+ttnzl19AmJQpX/oZYmGBaPYSIk6wij3YA7uxil1MHPk6jXhi000r
      aQgbU2SqCVZH//vaZ3groesLBG8+gzYh2rFperM01Ag5uQO7dBmfhlaEF17GrQiC5gXy/feT
      6TmMN3QHVkdfOxRAoMbO4Man8YoWliWRUqCVwfXS70pppBSr9LZlrHViLic3iVVz+MrJce3k
      tHauFySJ3h4JMd5dH8Xq2YE1N8Hs1BPtXzc2XV5+Zbjc8asEt1wGWhqmZp4DoDi5gx1D/y1q
      boyLz/2ftOzGpprTbWuIFIbAiRiZfpzi4y/R++BXcHbe8q76s9VQtXmCt3/GaPlvyAiPvuLH
      kEGOOV5nYezH9PbtXwoUXAnhZpDKQ3b0k7HzYHl4/QcRro8YfQandZJmfIiCfhFnSFKrBWQz
      XrvUe7oKLFblMCZdKVanKy8aQTZ672aFCHUViaDtc9I6Lc1iSYkUG2Vf3ADEtVkaJ58lf9uH
      KY54BFrQ8jYrLmxk5zcb/AbGCGIjUEaQWZcwv3LWWP0wtWqBUVjdgzi5blrR5jbFCLSFLTRu
      e98CZWmqYoHMqR9RzBawuoc2OcatR+v1v2HGvAweZO39uAcfxAkaVN48Rt2cofDOC2Tv+NjS
      +SaJ0PUFkvI40naZ997G1QWC+it0P3eMwdsdst0xdEIhfgXhWESRIo4SFqIY13EBQyNJsG17
      KXfYslJvcorlmb59V1Yrvcsi0GIIvdlg5jcagiDBcdLVxnLkkml+WzCA27uL0MtjD++n89KD
      VMZfInQUekPFdT1hr8zvXV+JTrAYV9TUNgZBoGVai2eJzhcf5sayp4qa1F/4DtlDH0RkuiG6
      uKlxZa2VImDbOyo0E8034ESWzg/+3qbauR5wh2/FPvMaqqDBAlWdY/6tr6M9jbGgMX8Ea2ov
      uYF9FJpzXHr+e8zp4yROjM6nY0tEajxQ+RmyPb1L4oxo07PjWGSzHtJarmShlY3j2CRKYSyr
      XToRlkvVLBL24jexjshX5o+sP758zLblCofryrvcYAjbIfvgPyCZOI//gV8l7++kq5pdE8+z
      iMuLNGbFscX0v5WEnZUJGRkjSCuprW93JfMsf25ZLVTGQeQ7yLldV9B9Nwq+Wxpl+09qGVob
      XnCjEU6cQDkKNy6Q67gV4TqEmQDlagSCqjXKwunvUqiM03jx+5TLb7Gg6lTDgEYjolptEgaK
      Rj1ittKgWY0Jw9W6nJQCx7VxHIltCxxH4mdsLBscR7a9wYARLP7bCOkRCy5zjlilKKcij+9b
      K5yXZunftlgBAOzuQUxHL8Ky8e79BPMv/RsWs7kuT3HLgzcr5ojVZwhMW45MUyuh0w7b4XSX
      w5r7CcPk+FPYboHq1LENeO9qYd2LXwU+eTJOD7ZVxGh9TcuSvB84mV66C4+RPfBhZLZEePJZ
      8qqHRjJO5CvsSFLsvZuwWWN8/BTj+VmksvB9N63ybDRBEAEG7diopsZIjeet9r8IAUmssB1J
      kqglQ5sx4HsO2qQWImdNasDlCD2tlqFTud6WSLFYd1SkbbfrtmqTBuUvox2qca0e4LXAYjVl
      bRIKUY5MYFPPRjT9CK4aJ7JSHbqc0yQ9KsXy+cvHVv623oqgRMLohW+n+wqvu259VwRiuUQ7
      AgNkrW52PvRPKZ96EiEdLuP6viHw7/vkUmleYwxaaKKkSia7hyJ56OkgSZq8eeKPSXbEdMhC
      u85nysCeb4EReKHNYDGPk7WwfWtddQgpBUZKpLRIYkOiNI4tsay0VpDWaayvUmllCdveeIIw
      pBWmVZISvt3OGU0STRylBYOlFGht2gwqFg1Sy23obbQCrIQzuA+9YxfV+WN0NzsxokLLXyky
      rFZyzdL3td7AtZDrrl0NQVNZaS0iuX5W///be88fybL0zO93zDXh0mdWZXnT1dXd1d3VZlxz
      OTMiZ6ghh9yhmV1yZ0lhDSBS2IWkBQRBn/Q/SIBWBAQtCJBaA464K5JLLodulxyanuke03a6
      uryvSh8Z9ppzjj6cGxEZmVnVZbK6s3riARIRGXHj2vOe89rntduG5Ld+Vglm2Xfqa4gsp332
      W4THP4GIy4QzBz1n/vU3Kc+9jF28hpzZ98hY2h4UrrlGUJph7tP/AhGEuLSLSRosn/06RAab
      WVzem5AGA1TkcGzvJBNFcbsfjMbPzFIULNa9mmFBnhuyLKfTzgmCoF9QUyqVyPMMay21WhWl
      REGxWJxfb/Abi5B+oPegtdxGaATLS3UqlTLWWazxmcNZlu3OFkngvQzr3/4PNG5+h0pa43p4
      DSPNNuPtbr7fu/mTHdbZwifNIGHPCqIsJtXJttSKW/e/4ZhOMBEdoTZ2gk6+TBhNUJ5/jnTh
      EtUXvwRCsP7qv+fa4p8QZZooD5h9+b8hfuKDe9p+2HDWYFZv49oNlt75LfJSTqIHSX3WOkxu
      QRT6e3Gvx03MsSemSFZz4okAVRVFYb//nRDeGBYoOp0EVSTaSSkxxhSzvp+X0zSlVIpJkow4
      HuhEjmLwi+HBf2cI1labCCGw1iKlr2CzdpfEAbaD0CFjr/wi/Ocu2a1z1GxMM/RN7bbXuTe6
      x7bd44Z3hafACYz1OqdzEIqAveI443/n75E0bnL93X9Hou4mxMPHKpsy1lquL/wJVVNG1A4R
      vvTzRAefAcDUF6nf+BYEkOocKxzZO68SHb/30skPC+mlt7l9/jdJjCPXXbSSxeX6+y+EQAcK
      YyxYAdKrTku2RevdFBNaxm7EnPzUHA5bkOL6bYyxfsoSshjw3j25eebWOu6rMD24Dblh/jv4
      4IImx8REZduRsWsFAPyFyb2HaSy+vvmb4nXjJT1AzpDAL69SUA3mmH/ul3FCYfKUeOY4ew9+
      mcvXf2fTQrK9AGojUZll2V1EK0lbpUyMHfYJZks3EJVxEJK5l3+FmaRFfv4NnMpJ1m9QaTf8
      99tcZeBjOGQfcHlK+DLRh8+c8ggPn2I++lXW3/p/ueGu0m2m5FmOkAKtfOFRbgxBoJjIyzSD
      xDM7C8hLfqWuxN7/6XsDeKNXip4r0hGEvjy2FwXG0ef/cc6RdwSdpZzK/FYVsRc9ttaTkWUN
      i4wEKpLbm1Zie8V4VwsAQGnqKEhoR8kGI2a7QbjZPbpdYh1svQ3F/92ExTf/A530BnF5H/HY
      Qczty9hMYQK3wSbYPhJtBawFbXRhzOUyo7V4BvU3v4fad4zOW39M9dkvEh85DYCZP4nQIel1
      3yNtO4QSDkaa9dyykFlqSmActK1jOpA0cst0oFjKDOPF7LmU7UxRiVCaYP9JnhQ/S+u9/4d2
      2CARoLRGKUmWZsRJjCtDO0ixBkIlEAYmuiXGajET+0r9qK4pbAb//yDFPc+9FydZn6R9scXk
      Eyl519GJP0ViZylnf4rU26uiSknayymdzlOkYy/hlm8xN/3NLczSd8OuFwBZGSMvMmY3LoR3
      muu812HjdtvZAb2ASvEghKOp62DqoMC1bzIx+SxZNM3BaJYkjji//BYl3SYcCs4NbI/UmsLX
      A86CJsSldRqLb2LXfkAlicAOAmO9fgHxiU/c8dpLUrBuLKH0EY1Iev9WUnSITx3kzpG5Itlv
      p6b/DViaP8Xk5WdJzavoDQVGQRCShRYKNohSKJBWMB4/zXxlhdJBjdaSLLMY49BKogMxlG4u
      EJjcYJqK9uwv4GZD1t/7LWwrwRybRyY3qcznm9TDwYU2b0W0wy8hnnwO2VgiX+6wchGmjjpU
      5FUknEQrhRObn9sudINuB5d2yPsnf6enPDzTDwyuO6c3+E96Q7YXLfYYZw5RnWLp6p8ggOOf
      +l/J3rFcX/4uYRGXEEaS2QGduZQghSTKAsZrT1Lec4rVy3+OCCKq+09TOfFZZOkOTZvvgNxB
      PbWMadEX5fXcogQ0epTjxcW2zCMY/fh7mDPcw80PYu/VUVKgXYDFIJxm/PiXaV18A7XwLmre
      IaWfEIJAkaRZ4dEpAlhCEGrNunsOKtN+OjnyGXTjJrkFrXIcgl7d9Ub3tkkcrfIXkPOnyC+/
      Q7z+TabnGrSuGQSaPLMEgUYgyXOL1GyaGD12vQCY9vpdUyIGqdN34P5xg20pooyODTfDCYbr
      kQVq7zGaq2dJg5SqGad14dvkK2cZk5YpeYw4nqLbuM2ivrJhPzBTOcXUEz+BPvgU9W9/ndr+
      TzD2wlfuqXP8dmgWg7qe+9fFbdSb3nc7IQC20yC5dRapAlRpHKFDRFwhMYvFLfSjWZsIKz3X
      /1j0ApPHv8TK+1+nwXlWL/wBMy/+YzpnQa3/gNKkH4AOHzPIUkuPkthh6S4HuP2f6xuy+fhp
      xORLaCFw7ilW609TXfsd4rHE2w+F4MgAxK2zMH8KtfcoofsmqgxjJ7U/VaOQQuEwaA2Zcf2j
      yg2u010vAJ2VCwynJ2yK9N7BA9C/obn3OqRphtYK53xHda01Sim63YSxsXKxW6/SBKUplM0A
      QVOtk1z5U6SAcTFLmqzQzBdIRWdI4EpunNlX/imy7Avsxz/51aHGzLsdzlqW//bXWQ+ugnBI
      U3C7WkUifSBS5ZJQljnw4v9M3lrGmYTo4GnM1R8wVn2Odv0K6+Y9ype+ReXUV1h5LaBSP0N5
      ryHLDFpLvwLonqoo6MgXh9LDhyYLIRATB2nqXyFd+H0qk7eKyUugtSSoGHJARGVa8Y8i1/6M
      0lRKj3fKWIu1Pg6hVcGKLURhPPug3O7yvW2DoLpnw38fPJiGuSm9V6GbJEUb0Z5LTdBud2m1
      2hu29Z8LBGnjGs1Vz/ygrWJS7ufAkZ8BrViP1ujKRrEqDY4T2gCzeG1wXKUfePDHUhAVPw2L
      18pd/N0S35pJ4r1GDwIhJaIyR73RptM1NNOUhJw2XdLUtzlFAzZElseJu1voFgAAIABJREFU
      9j9NfOgFsJb1M/+J+OnPM3/gaygbsLDwhzTf+n2C0/8V2ZP/jFb9GAAmdzjrSJsGkzrqZzvk
      7UHWr11fgIt/BOf/ELM2KE8V1RmS8uewHR9zUEqQpoZq+Rzu9tt+m73P0khmaaSiiCj7gJcQ
      giw1vYUD8GqZMV6V3fUrgFTe8BoYt9s94aKvQNFvszfwnPNuzrFauTCkXKHpDIq8XWEEe/jf
      Lax8r9hWYIRjzV5l6eolrMgZYoNwMNUepzJ2nNLpzyPHZnbkmse0ILN+ppoNFdcTQ1kJ2tYx
      E0gahbozoQWruaOqBF3rP0usY1x7l2L9PtUiHVeI4pBuJ8E5R5LQpzwMhebQ/I+jD31uqPWr
      bSxDWAFniY98in2laVbP/A6L639G8r2rjJ/4CjI4ANlFFi83WV3pQFahLGtUZyxhepPON34d
      fbhGpXwdVUsxucWtv0G6fBDUDM7lhNlZuiIhbSjUlI8ZiMBRXf8zGo15ZG0aExykyxIlUoTw
      8QWExeHIM1v87xDCIqWj2zW7XwBEXEY6jRH5llyOAe7k+nM4J2g2O2gdEAS+y0CW5YSBLnJF
      LDoYzjF3Gwe5gFSnbE6zUEaijWLq5V8kfOITO6bq1JRAC4GUjraFRm6JpSCxjjEtKSlBwzhK
      0g96AQiT0zYwHWpaxhFJwcp9ukOdcyStayglqNbKZGlGFIV+Fhawp/wyE8//AusL13A3L6D2
      HvWrbRjTTN5nvL2Ompgj2vsEeyb/B1be+Dc4k5BcfgM5e5CFs02umTqz0YvER57Hri8j8m8h
      w1sE+9YJawGZdXQaOVmWoXWC5R2kFdRq5YIiXdO9niM7AmogrCSMU6jfgto0woaMtVOCCbGB
      B1+ilO8YagxoJXDCR56DYJekQ98N4dwRYjnBB6k/w2wOwzOfw4fVs8zQaraxxtJotmk02nS7
      2dBvBtmnFk/V3vt/gx3iBDPtKlOVpwiPvbijen7XOm4khuXMklr/f2IdXetoGstKZulaR8NY
      msZ/vpp5J0E9zTH1Jeqt9j0oi8Nw7XWS9g2ccygJcSlASIdU3sMVjD9Jc3kBrEHNHhzs3znG
      ay8gKwMaeBGVmHjyK9BuUTn9k8h9p0jESRBgGrcRYQl96GlMHhHvSYimdZEMZwnDgDiO0VpR
      LsVQZPGCV1CDvYq0nVG/2KV+ucXalRJi75MAyH3Pk3Y9F2nvuXmlViOERklJZnoZqMLbJQ/6
      oD4sCCnZ++wvsfLab7EaN7b2nhreeluaxTDUhEFAnhvK5RJCeEaCATYO8O3iBsP7jHKFchXi
      oy8/sIfnTuhFfHuv6abXnmco33BKpuhhlnbbCCHpqhC7cA01e+CejyvKNSrl47TTN7e4GoIk
      Jpo5gRybQW1K35aVccaL/snOGlrvfANLhl1cpPr0zyC0P7eodozaxXfRtk169jXCp17BZCWc
      S4tnIQiCiF6Kc2+1DYJK30HXS6kIpiTxrE+jaN0qQ5FPJKISuRqjcf0KeZKjlCKeCglqRTRO
      ghY+CQ8hUPIx8AIBxIefQ188hmj6h9M3jvq6vhsyZodZJRxx7C8z7DOciaHvh/FB/wtSZdBx
      ifj47kpiE3EZEXse0u1SK+76WyGJJ08y25mg036HxKyjTYAWZfY890+R47O4bgvXWYX2AgQV
      ZHIbh0ZkK5hUIPZ9hnj/adbP/xHxvieI5gc9yMJnPkPYvYpbrxMcPI1dvgljJ2mdf53yEYtp
      B8gwR0WOrOkHtyp4R7H+mRpr+ikTvUdZnrlGevb/Ip3+MjhLurJGOG+JphU2d7TrHXRDU5oN
      kIHwvcgaMWEY0E67uzcbdDM6197l0nf/JRaLdfmwp+cOK8LGgM02327z2XYF2NusDA72rE8x
      9bP/C7J2bx1gHgTjWlCWkpXMkDh/dj2aqN5Z9T7b/P5h0Dn715CnRIde9g3+sg4s/C2RewMV
      ZsjIH0go72qUQpKtVUgO/zPfRaexiihV+7N/D5557gpyfAaXp9DtYBsrqCjFlecRLkGsvI2d
      /iRq4Q8oz9xCColAkRuDUgKEzwR1zucY9SZD2/UGogp93hECfPNDh0kcdkUQTwcE7ZCjz80j
      ivTsx2IFACgdeIa5G5/l1q3/0ucdHcbWgXpvuvnG320/+Dcb31GqKe89NZiGHhFiKWgaixSC
      aS3InaOeOw7HirZ1LKaW+UjRMY6WtcwEiqZx1PMHFwPnHCV5g7B0lfzmWayJCcNbBLXuhnsg
      QIr+BONwiKCNrd9GzR5G3qEnstABamYfyVt/ickz4pOfJpg73b+5+eptGpdvMnFoEqRCCokU
      GmMsnU7ivThsyADVg2ecYZAI8sSilMJYSxxprzYpR01XqYUl5k5MDs1lj40AAEw8+QViPcHK
      7depp1cLl9Z2Ojtsn/Rm7/Dd5t9u/M3GqDGU5CT7Xv4HPqntEQe5JIKqEtxMDTUtSHz6PcZB
      M3eUlacPTJwjEoL13GIfIiDsrMHdeINSeA5dzglcE+hVVQ2KiXq11lIIrM3Rgabd2IfcO/uB
      xxBhifjlL237nZ7cw8QXfhWXdJByAYEqCl8MaZoSBhUazSZBEKC0IIwGrBHGWHLnibbStEm5
      XPHnKiTpguWpl+YI4uEJy7nHTADUxCzlZ3+M6OBziFf/b7JsiRxDqk0xGO/29DfP7GLT6wfA
      QS2YZ99n/jvUxJ5HPvgBbqWmf2aLqe2/v5YMPu8Yc19qj0s62G4bNT49/LmzyMu/S6n8LlL7
      lbBfXO4cA4IBhnJywCed1fZcp3nxX+PiQ9hgGjF7aijC69YXkSvfwZSPIWdP3PH+Camwt99G
      lboYE2CMIww1U1MT3gsUToBwJN3Ut2IokiRLpQghPLVKpVxCqgEhgpACrYO+Id0/1rZdmXc5
      RBihZ/cz88wXaDd/D7lcodtt0ul2SIuG1zEBUguaLilqeO9nWty47eAh1fReDnz+f+qnOnwY
      uJNjd+P7+1Z2wrjf8mnoWKvXicMfFIMfcAJrBNa5fg7OdrXWWqu+V6Uys4iQizjjaF0+iz3y
      cxDE4Czh9d8knk3JO2+SnhkniV9EVGaRkwdASuzt84i4iqhOIZM3BvXEUpAb7/1R0pdWOixx
      rMlzh9ZeBZOqWJt6XTbFQFBVSbJypcnM0XEERXCsKKZ/7ASgh3D/C3Tf/s+Uj/0kunmV0P0t
      dPxFu9CBFkSLmqV6C6c+SACKG2Ulymi0kVjp6AZJXwbG5k5/qIP/UeGOdlH7BjLKff4PEpzE
      OdtfBfLMEASD4dJLN9BaFUXnG3pCKKhOXCK98n+QiSOklRdRsW+hGpQtMlqmJP4Ml0F2qYx1
      MdHYEq4tMcsxrtok0AF5nhMU+7e2GLDa2wVOWISwmJZDlouMUZEjhKdLcc6325VCEoxpFhdX
      mDlaeMacwuSZr0J7pHf7EcF2W8i4SuXQ10gv/z5R6UWyVgi1DL90e+hZyXReJu9Y4omAlZUW
      aa/O18G42MPUsZ9AhhHZ6lXS5iJjT36B4IBvm5TduIAINJdf+5d0b53B5dkWz8bjBmfyfuzC
      rN5GTsyCyQnSMxCpfsmCUhAEmrW1dRCQZz6B0DrP1hCGoc+vMobJyfGC2dvr1XnuvXSi0qUa
      ngfOwza3TUUCFXWADqDI25YgT+muOfJpg9qQT+UzOFXhAbJY58iXHcn0ryCsoZL9G2TsQBg/
      yxepMQ5BfbXBTDDNymrdryJFgb1zj0Eu0Hbo6ZYqnsQFh+m2X6cy/3O0l38fFw1cr0IIwn2a
      wPqldCwrsdRsIp1kX/Vlqp/5KqrqPRaR++SW4wT7fBJXrXSYlfpbTN26QHhgd3F63g+cc5jb
      V3DdJnJ8Fru+jFtfImx+m6h2E9sV6NKANtAB1aqvpc3znHa7Q7VaAecIgoAszz23kRCeYKD4
      VZpmICDLMlrttndlCs/sUKmUyfIcayxxKSpSrgqPUtmRr0HWrVKaS/rlkbnx7BFxFKGUxAHK
      QT7WRbQvII7+ON2zJyjrc7Ch6KanAoWlkE7eZenSGvuenMM5zwphzGMQCd4OvQohUZtElcZI
      0joua1Ce+yrtxa9jg57LrjDaihsZzCmq9QiXQ+3TX0VWJzfs885GbWnqGHb9TdpLZx5rAQBQ
      s/tBh2BzqtNz/GJwBc1nAfjbt7/DJXMeXesZuxSuRwi0ohQPx4ui0E/rzm2kGfPCoJX23hql
      SNMUpVSfASJLM7TW1OsNwKGU8iwTxqCiWcSz/5zOpd+kNLmMEGByQ54b6kkDawxhFOGsJctz
      Qvst8qVD2GNfpXnzdeLGX4HJSZpVqodbCCEol2IfNb7cpRxFyEDiyMHp3Z8LdDcIISmd/CK1
      p/5Hkluvo2v70PLFTeH0jT9wVPdFlKIQ3L2bj9WnPs9Y6Qjy8b5dXi0JIv8qA35+qsNYKeL8
      7UtcWr5KbbbM8wefRSzru3bK2YyNzA1CQK1aoRRHVMolojCgVq1QKZeII5+FG4aBzwvKcwLt
      +YCctVSrFcJSC1e/STr1X2OKxVxKiRReGIMw9Dn+ShGFIdG4RVz6BubSa3DgFTrzv0Zr/JfI
      4tO0F2skDYuzjnzZcuLUIV8PkFrSlk+RfixXgM2QtWmEC0gv/iXlp36Kzjsd1vLvEESaPMvQ
      gfKJUJlFlxXRTI1J06bB9D15UURUYu8n/3Ffd46FpbuFW/Txwv4w50hsuLXQxs5klCcDIsYA
      eLl2mnPvXWKJRXTlg69TKUmWmSLNeHj77VbWIAhwzhHPTPVXDlcuPKMhsPpN8uO/QmflELXy
      FaSUlMvlvufUs0h4I11KSXW2QWPpPVzneVyWEDX+mFSPY5785+StNdrNNWS4xJsr47CmcVIT
      1i9y6ujVxycV4oPg0g6dd/4jauoo4f7nyb/zG1xN38Ra2196vR6qmGpPcXTqE7Rf/ima5h78
      +Zs9o1sL0x4rKBy/OtdgQlneO3+etYklSrWBazTPDUpJFm+scObqOZgwfTXyTnDOka1ahBWo
      SYFt+dwNXd0qQNZ6Q3oj29vQ95mjLr6GqE0S3vwdMnnerwJSYnKDdc57pBwYaxirVUlbjqyt
      CKRFjBmEk3RbhzBTP4qYOrz1fPMM3v7jj8cKAD7CWHr2K76tpw45+NzP03p7jSxawpoBG5iQ
      Ask47tAzdOz2D3Vjct18kBBKx7FonYnA8L3GJNfSkPwxVodOxhmT2tHpJNxw15mubcNJJARz
      +6eZmB7j3XfOUg9WUfH212wSS6VT46Wnn0CHmhtXbjN5eALnLOcuXqIVNVGl4ZysbN2Qb8v3
      6oVDtP4aMflVsuglyM6TZRmVSoVOp+u9UUXFV268Vy+sCFScF4xvjiAUVIIrZOv/nnbwj5C1
      qeHr0wHu9Jc/PgIAeP028KvZDVEhHH8Bl/8p6EFU0DlHoldYqOzZ0uo3u3WGdPE1bLZO+cjP
      oqb2czOLwDkuJ3NI53iy3OEfzF3lL9fmuJKUHruVwCUd9JW/4FvjIdZagvHth0BvEgjjgBde
      foZrF25xbuk8emJYCOyq4NjMMQ48u7c/wI+ePEiWedKsT8w+z+L1Fc5fuURa7aJiiUksx8vH
      mNx7l4xV5/j2jfdI43FqsoyMJAJBNH3n5uG9FSXPvVAIIcjzCUR5bNvtH6tkuPuFLFVwprsl
      kU0IgQ3bJFf+kvjEICfFOUfnxh9homuofBJ0vPFHAFgheK9T5lqyj5cqdaoy5a0Fg1m8gJMW
      PX0MtUNlkY8KIoy5FlTZf9QHjUrbOei3EeoDx/YShJpzly9ipjKEgLhV5vnnniEqb+0j7KkQ
      /Qwzu3+KuQPT3Li4wKVbV6DjmHx2jInZuwcWa0sJKzOHaV79USp8ExXenWSgN/v30FmZI6l+
      DnWXmo2PrQAAlI5/EXG2Qzf7Dk71ith9bki78U3k5Sn07Ens+m2ypfPk6gbCgGZ+y5LZgzM5
      a8sL/EU6BzjMwps0L/0edrJDeLlCNP8F9IHncWkXNTG3+1ghhCAlAu7SwPAODqA9B2YolWPO
      n7vC5NgYB57fiw7uPIT6/v0C+47OsffQDGmSEZc/2O4cD1qsGAMHP0f7/ALV8P0iyFWcZkFw
      61yRx2t9HbCUkrytSMKnUfPH73qMj7UAyKhC6dQvEtx+iWTpddL8+1AkermgS7P+deRiiAsy
      X2eA5XR0lFsn/j72TgPXWrKbbyLyp5EzBxBxmdrJX8ImdYInn8KZHLO2gGmsoGpFN5nN3R4+
      YiSignMNeABC3rGpKs+9dBKl5D0J9+ZthJSoQFNfb/qkNSkx1pJlGWEQ4HBopRECDk516Sy8
      x+2553B7f4zurcvIUgsdBEjRq0UQfer13BmEg6RepVv6LPLg6Q88v4+1AICPFQR7n0TveYJ4
      8RWShddJm29ApQttgVE5QllMbhAIyqVZjA5w9SUQElGdGOriIoKQ0rM/1f8/OPDMlmOqibkP
      5doeFDVWyEyGMKLPlDCAH1DGFgUowEYuzwGTTq8rw1YhuKcYgnM0W+2+QZvnOd2up6+ZnBhH
      AGPNCl84WeVfrwJBhaTzJIhXse0OPUpGqRRZlqKkQixPIg98Cbv30FCQ82742AtAD0JI9NxR
      9NxRyulXyBcvoU4cBJvTOPMbGHkFpQTfuv46wc3v4aTDCofKj1N76R8htsmgfBzh2uscnGz0
      ffFp5gnAehO151Uq1BdfVoW1pkg9FghhEdL127e5fi+2wjfsvBHaiyAPmhZ6PSXLLUoqgkCj
      tS56B8iCgcIiJAhlWbvR4Ln5IzizxlNqiTPhNKK6h1IUYZ0FCs5PB7YZU45PMn7kWZb2PH1f
      9+OHRgA2QoQRwf5BSkPtmf+Wzrk/IG2dJ1NLOJ1jpa88ctlFXJqADndNP6+HgpC0Vlrc6hrG
      56qEpQDfaKK/QX9TYwpi26K7opD0uT7zvNfY2vTTi31LUk+j4oTZYEr4d8b2BjiU+jbAxl6/
      g/sblANeu/Q+UTmgll/gZXGcN8b2IxqasJpju4qsMUMWnECe/BGSsMTCA9yOH0oB2AwZlamc
      +vuUTY5ZuUp67Q064m+QGmReQVTG7po64bIEl3YQpdqua3e0BXGFG1dTDkymtJY7HHphL9Z6
      xjXXLzYX2IJ7Pyh66kohSNO8yKT0QSxnKXp62WIF8e7H3FiEVFu6t1g7CH45tvK9OusJrIJQ
      E9dCqpOxXzicI+sscOxik/dXp8Huw0x8Ajk/N8TK4dIu+fX30YefvefJaiQAGyCURs8eRU0f
      RpyPabX+nKC213+3zcC2rTpm6QLtG39BVH0O07hKePST6L1PQ5b6aKMUyLiK67b7jA0fJQRg
      Xvo5xuRFXP0dtO41p3MFC5xCCEduXF8oel1d2ODaFEIg1MAm6Kk6zjlvoBqLlD4tuQetC6bm
      O0wSK9cbJEspc89NbrA/fOhdx5I4ug4HfwZmDnhfkHPUhOGJUoeLScyqc+gDJ+9rpR4JwDYQ
      UhLt/xG6r/81aXyZcnMJUZvF2YJsSSpsp8naO/87Lq7jZIBu5iRjt8lunkHdOoRQFaSrkNXf
      IejMImeO3bEW9kOFECS6zLdXJnk+LPWTBj0xFaRpj4FPFPyZ9KlIpPTU5sYMEg3dpmwqV6Se
      b05G7FVgCSHIkpzG5SaVA2VUoGgutX0SHTF7D47Tdt4u2ZhlKqSjXI74u5MJzWCF2dBwNJJI
      51vp/m83K4jo/ofzSADuAFGqMfbCv6D9/u+x+r3/k+q+z5MsnYUkoXTk02StK4i4iUOCshjt
      9WAb5jhx0e/EAdOQ2CZBR+CSzlCd7EcJObWPd9cs4/XvUR4LyXPrefsFRJHCFuO6l3iWYwsD
      d3PrUtcXGM/d41eAoVZHuSu4OiXGOlau1Pns8ye5em2JbpLx1OweoiggjkIuX17EJDlBEPZ2
      D/j9j++rsHr1bfaUJ9i7Zy/SzSGQrGSa7rZN1T8YIwG4A4QQqLFpKs/9EtHNMyRX/pxo5lnk
      2FHqF/4Vqgou9DOU0YZULvgHPxR2Ll4l4C7zWfEa35Gv0LG7Iy5ganu5dNnw9ClX5OPbYnB7
      o3hjTlSPunAz+zb0Br8tdHxvKKep7RetKyX6WaJaCcqTEZeuLHDsyJ4t+1qsr1OZrQwi+P2v
      vVOieqjMaqfF1Utvo9YUr3zyRf5gbd8D34OPgVvj0UJGZcIjL1J75b9n/9GXmd13iNL0J/oz
      fs+DYi3kOZh8QL298e9IZQ/PHYr48vRlYtPBdprY1vpHem1Caa7t+RLfOjNBnnj+fj9Qe7M3
      fUNWCMHK7Q4XzyecOWdJuoNIsjGWLPNZmr3m1L6kUhb7HB7ktZkyS7LN9esrwyfk4PQzR2hd
      bfeP37MrNsYWglgTBZrTzx3hTLvEtezBJ5TRCnCPCBWk73yXvfv2kSdd3k1SPD+U6IfjhQCt
      A4zJiUsBWg8efNN0WVpuMDvlcN/9OmtujUoe89M/8TVe7Ryjabfm03wYEGGJxvxn+Nvl65xq
      fo/JCcH6qmGtHeCEZCzq0EhKXOnsJ5s6ipipALB89m/41FPrpJ0cJJSrGyjnHZ6TPxT9bo7e
      ZdqrGbaUJ0qcv7rE+HgVSUiaZkzPVIiDkJKIMblDB4N6YL9fR/12E5HCcwcPEJYivn3r/igg
      N2MkAPcIITWRliQrC6TtBKF6fm1FEASkadbvTZZlOUHY60bjZ8Wrcolvv3uOF584wi29gggh
      6ApOVOuYpT/hTxtPoebunrfyKJGP7ef7yQTy8i3sxH6YLPz0WQJxiJiUQzHf9dmX+NO3zuBU
      RDm5xaefbRGX/UyslKSdO5I0wRpfjzFQp1w/Nb06V+HVc+dJuxlj+QT11TrzR8aRe1VBYmv7
      tkXSSgnq8PyhA8RxCELxh0v7WcwfrpZlJAD3iARJ4/kvsr52g/Xu96noqP9QhYC4NHD5KR0T
      htIzKGAJAwUOJmtVDh2a4dn3D/P9zkU6ScbFSwv8yQ9eIys54tljH2nynIgquLnjw8kNd4qA
      BzEcPo0A2u5Jrl/4bQ4cr6FDhZCyn5hmgCAsqMmzvN9ww5dlwsS+GlLg26zacUpjMbkpmlnQ
      C7AJ1Jrj9NPHECiMc3y3Mce5Tu2h09FHAnAfaLeaNH7w/2EqN33YXgw35ktTH9zxBqWf/fv+
      bAFv3L7I6n9pcqF+CxFBWkn5t+/9JUQg1/+a4NbT6A/IXtyVsI5xUWXp0hpzT0zjjKFUCVBS
      4mxAL1YVRgNdvWcgh6HqG81BMCiy9/d34F0KRIAkoJEH/N7Sfm5l0Y7UYowEoEB+/SyiMoGa
      2J7f0jlH59zvYquXvH4L3rUXqKHn0DP6jHEEwbDHZEWvs9JdhwqoTf4HuewwvIOsTflmE7st
      jfoukNfeJD5qmBqfQcqi8YTyr+v1NqVyjJKS3ORo5XOAms0WWuvCiSAJI03uJEnuKOtey6uN
      wTBYzzW/vXiAer5z9tJIAAq4PMOt3kLoAFndSnlu1xdJs/dwIYWrT5Llliw1g3QBOVgRBpHM
      e0M+Z8jVXxG89hZufIywcorgwMt37CK/W+CcYyZYoTIRb8j/71XfUdCi5MjCVep7dRmE9Max
      Up5aUWlF20FuBCXpEEXKRM9wblrH1xcOUDc76ywYCUCB4PAzsMHVtgUO5Kokn/MM/blxBNqn
      CmSZ7acMaP2At7QEWEc2swZyjbx7leg776P2PIEaP4oIY2Rt1vP17yIIIVipnKK1/jpRWRcU
      Kf47pSQTkxV6wTJrHKrvGRswCySJZ3sLdUCo/eRijOvHEDrNjO+39tGuhju+MI4EYCPucneF
      1pg4xNomQkCgBzNUGCqMdX3V6IGxUStSjrR8AZddwN0EHGg3Q/nw30PPHOtv5qzxRGEfocpk
      x/fy2vKzvJC9yeSMN5r9ABYk3YxON6VaLZEkGZHzRS8mNwShxhpPiBWGikhlULBQKwUmtxjg
      zM1xOntfeCTl16NA2D2ie+u7mOrqtnQeaWZwRebkzkCAELhS8TYEEYGJl2he+1d0z3yD7PZZ
      v6VUu8JeSMaP8MbiUVrNjCTxeRR5ZkhT018VlZIkSUannZDlllYzodvNyHJHnvUCawU1uwAd
      SOrLXW62ty9P3QmMBOAeEY4dIzSVDUUcRY67sWgliy7oO3E7P4B/J8joZH9G+8q/w6XdHTje
      zqFTO8qN8/UiAOiQSlAqB1QqEVr77u6lckilGlOpRMSliCBQqDAkKm3vz6+vZrj40bFyjwTg
      HqHnjlHe98uQyb6p0GMh2LkJ+B53JMDKFrbT3KkD7whEXGE9OoRSPgIsJUglMMYMOP4VaO1V
      nCgSlMqaUiRoZ2LIBOtNMvsOlhDdR5cyMhKA+4Dec4JQn0aIQXM2KcVdbecPxlDG16bP4U4U
      DcpVkaXqwxx45yEEq2KePBtOo1ZK9G2mzbDW4YwhFIY8t/2B38/9ESD0ozP8RwJwHxBCUDrw
      49AVWCv6dbJ5bkkz0y8q6SWHmXto2NVqdVldbdHtWpKuIUkMnXZGs5EMJZwNIZOU9//8rqxT
      zmVElvjz9lSUYigZbnPBvO/2KAgDryJ1U0tadLwSAsJYM8u1ohbj3uHy7O5evQIjAbhPqMk9
      hOHTdNopjfUurWZKllmy1JEmjix3fS58dy8d64qE0TzLyTJDp5P2Z8JtYaA09jOovVvZKHYD
      3Pg8i8vbq3JCCvLc0e3m5LntTxi91U4Iny6d5N6L1Ps7PrMK3RbOGmyrfm8nco+lqSM36AMg
      PvATqHffoVQVrDeaBGi0VqRZSjmIij5W4IzbUGiyeVB4Q7FciSiVxRCJVC9fZov6k0HoThId
      /ZHdR7hVQLUWmJjYfraWvTJKUfT6Kgpoem5QKCZtIVGqIF0RoEOJ6yQIUcW1GzipEKWq71Rz
      7fuY8X3YsT1DxxrVBD9C6Kn9jI09TyreZGrK805aa4jwHDcUDeV6NbW9+oABmdRgYPeW+p7r
      r/iU7XR/mVYpv/DLiAcgtPow4EzOCfEGY5Mx251/L7jl2x1520eoYFg/AAANBElEQVRKR1bY
      DD5YZvuN7jZStVAkHqrZA4PjLV7mxNhlFtMWi+zZfLh7wu68k48BSvs/h8rKvg+Vs/1CEl8b
      MKiH9TUCEiHYwFu5Mcfl3mdyQQDBzlPZ7xREu87MeHbn7/vVYWLDZ4IgUH21LwwlsTLk+UCA
      4kqI6LaG9uW6bebWv8/BIyWqbvWBz3kkAA8IPX2Y2tFfI8ifwiX0jbTe7LxZh+8v+eZ+G5tu
      ZNfJfd7wLkXcvEJ1omeYiy1/Pl1k+DfWehoV6H3nK8oGRTBw9koAs4f8/3nG5K2/4fn0G7zw
      UoxzcGPpwb1EIxXoIaAm91Gd+CfkC+dpXv1tMrXcLxj3K8Mw05rWom/8bS4TvDuKnPhwZogH
      Z7fBqSr2+i3apjtEn2JLEJYDTGapL7YQBiYPjhGW/LXoQjX0E4Trs08s3M64sDrL6tiA50ev
      XublE+vo0LuA242U7vSpB06T2L138zGBEIJgzxOMhf+Etfd/HSvbhRAMODQ3qjlKeU/I/QmA
      AAvB+As7eOY7D7fnCQ7PlaiFK0OaXb3e5trVJS4sL1ObLKMihVCDYvuhfTjPHnHzRsYb+Ssw
      OzU0uG3BPFdsTbORwfiDc7GOVKAdghzfQyBq2xLImcIblGWWJDFDtcLDuHNATOQKPX7ogc7t
      XrnqHtavlDrBX9fnvK2yAePjZSYmKhw6tYc9x6eYOTxOGOl+Bu3GMxACLl40fJ8fg8rWHCBb
      naNVTwCvHi00aohoe8Ix2xi2DZzJcWY4tjISgB2CkBIhIzYOo41uTaW8V0gpeWcf/53gIIw+
      iZy8f/qPihJMBpJYeh7nUrHyaAFK+LOdDiQKmNSSyn3WMWzG2W5AJ51BuLsrFz1PkDGDqK+1
      vng+MRrC7fmTaq0L1Cbj/vaLZhvvTz9oNnyfhdJbVMiRAOwQ/EM0aKXJMz/j55khLx7woOP5
      YEUYxlbXp3MOLMi0TDT/ygP5/hPr6C04k4FkXEu0gAktGVe+8av2GhaBhPE7pCzcK3IE31wf
      R9ux/uVY63j3wnXUpn33CoiyzBZeIF8LMFdt4ppbPTsuzzhavtrv9L6+ktKtHtx6EoW9cKcm
      JxsxsgF2CK61hhV1z6JmBDpQ/Zpgaymqn2Tx5xnWBu2btg5+0dHE6gVkdT9q/iBqcv6Bzqus
      BNaBcQ7jBFY48qKjSigFBjDF/z6L+X69VFvRMBLpBmkazjnCmRAVDCtjPY9YGKq+AQxQqYXQ
      2JrpKpRmNa2yvyDWvb0Ww+T2/b/uFSMB2CE4a3Hknk5cKZzL+8EepQTWObLcIgVIJb0xnFmC
      cGPE14ERhOoTxMc+h5yce+ig13ruWC/2X9+w6ixng/dLxfu1LavSg+F2JrGb2Z+3uD9dkQc0
      fH15Zrh63SJqW8tSEYJ2XgKaWGO5nT58C6oPTQB6pCG95Ta/TzV4t8PlCQiHw6GkxDiHELIf
      zZRCILX3cVtTkNE6W6wMA593pD9N+emf37XR3ntB10mW05CxkuzlNmCMHSLIhY2D37tA89Tw
      /cszrE69iNDbs72tjJ/m1R+8RdtWSWaefGjD/ZEKQFUJTLH8jmtJwzgqShAIWEjtDiy2uwe2
      tQS64NWXdkjv9/BqTq/hhGdLGw4MCQdB9fCODP5A4FUfBgpWJHtqzp0hASkefoJayCOmbA0j
      2wgyEPSvXQyRfvpXW7BKN035joMfgKjM2tynN/zy4fBIp5mSFFQKIRBA1zokkH3MZn8A07mJ
      ExYpHdblbJ/uIPo05N7oE2ilB987EDsU6J0JFFUt0AL2RZ66pao8u9ts4A3hUMBc8X46kNSU
      IC7qG8pSPJRB/Foz4ubtBnmiuXi2Ds73I/PCLclzR5b6vKlenlTazcnK29PSPCo80hWgnlvi
      wtBaN55JuaeHfpxmf4Bs/S1MkCPEgNZ4eKaDHi1gr1OKZz8b5AdpdwS9/9mHPpeyFAQSIgRd
      42gaSyQhtY6yEoRSEAhBWQlSB0GxUjWNYyaQtK2jpgW30wd/SrdyxX+6scgTS3UazTYTh2vU
      11o+E1RJTJ5jrSOKQsLId4U8szALUx8jAUgdpIVl3y0SwdKP4ezvO8F4v7RS3MUwK3guk5yo
      38zB35CsG1I79nM7VuRypWsoF5NPZr1KI/ETT2IdXesnJMtgZRZ4IaD4rCQFnXupabgDVuNj
      lPe9S1n6Vke5Mb6zoxD99Afw88WFy47FiU986LbPyAu0A1A2p91YQo3LTRO+H1ZZZnwqb2EE
      R1GAtdYTx2qJsZKo8iOoiQdzdW5Guxi0vdfcDb92N30P0Cre9wZ8fQe8FGbiIOevneOp4wbn
      PBdoGOrCPey3cRZajYyLvPiR5Dl9KEcsSUHuHBUlaeQWJT5eK8FUrLnezlgXHZRWSCF8hmPB
      b6+ULhiRvXGcZTlT0zXAd0+Jg09RO/mTu7bI5UEhpOR6Z44jnSuF3ZPT7WRorfrR36RjeaPx
      HHZ8Z4T/fvHIBCDqG8AOJbwB1jaOMS1Zzy0zgSR3jrWPgT80b6xRmiphMIRhwPp6k0q1hGCw
      zDvXS4Qz/YioEAKdVaie+MIjW/orSlBVgqV0i2f+Q0EcOFxBhBvFYdFPwdFudGmvOlY4STJ3
      5CM4M49HJgDOQWYdZSVpGG8Mt6wjVl4vDYSgbR7/wQ9we3UBW8oJjEYHMDVdK/z/cqiTusMR
      rdegXMMkiwg0tcO//Ej5PytK0DGOQApq0teqreaW+VDRtY7V3LInlHSMtwvmQsVabvu2wMOi
      UTrAxas3KZVhJZ1kNRtDYsiDGnJmHqGCOxFffCh4ZAKQOUfqfGdwxyDyuJJ51eB2aj7K695R
      ZOs/AOmQhdNkoMkMp0ILBHayTSn+OwT7XgLEIye/1YW3p5EaJrRiNTMofEygaRzVwvXZNo5Y
      CtZ3KBrcg6xNcbXyRV/SWPPDrXcECx/p4IdHuQLc7VV8fNygttsib7yFiS1ySyblNk9XQNp4
      mzD+3Idi9C0WE42fhPx7A9xKLUlh8Fpn6RSeINj5Z7Obm4ePvEAPieTiX+EqbVze6xYzLAS+
      j27h7iteZTB1z7QdD4uNQceN77sbPEA9b9DuLbZ8dHikTtewiDaC9wT10nIravD+sYZzCBn3
      W0Zv78VxkIBIBKJdIeQ0pSd+9mPn8Xlc8chWAAHMR4rEen1/Qnuvz2puqSlJSbp+FuJjCyFQ
      pVnI7hb8gqCzl9Kpf4gs1XZNo+wRPB6pCtS1jnruCIqMgI5xBGLnDa2PEt3V17FiG4JcByIV
      uNAR1PajJh68bnWER4dHagRvzCW5mXz8NEznHLadIDIFk5uEWkAcfAFR20swe/SjOcERPhCP
      b9L5boDJkatdRGd7luZ85V1kmiDLj47ffoSHw0gAHgKuvY6anMdWWlsL3S3oyUOog6c+mpMb
      4Z4wEoCHgMtS3NUrKGE30B4WMBDMv4SMt6fsGGF3YBQHeAjY1QVkexmn3HBlVxoQR68gpw7c
      +ccj7AqMBOAhYJbPkQcGVwa1oaorLv0I0ckvj3z9jwFGKtADwiUdnJLYY72eYYPBnqdnMQvn
      758Aa4QPHSMBeFAEEaJtEcu2T+gKgIBM3aB99Xc/2vMb4Z4wEoAHhGs3yM59D0q+0qmv7TgQ
      2TjlI78wUoEeA4wE4EEhBARg3IDXp4fK+JfQM6Pg1+OAkQA8IEQQooIKzm5IgnMQ2qdR+3Zn
      A7sRtmIkAA8KHcLYHlRHkaZFmocRxPNfRN6Brhv4yAtARhjGSAAeEEIIRFRCLUvCW4ossxhn
      yZff33b7kjD85OQtXq4+eD+rEXYeozjAg0II9IkXyRffJ+w4wlWBSRVmcnnbzTtW8Ucre9ia
      NjrCR4nRCvAQ0HuPIPU4qisQ3RB0mcS9h+00tm4sGA3+XYiRADwERBgTf+6rWBGjl3Jko40J
      GiTnfhuXbuW33ylMSIMYGRM7gpEAPCTk7AHin/o18ol5RCsnuKxIrp+j9epvkJ79LrZV3/Fj
      rhnJQzAWjrABIxvgISGEQE3OUf7yr5Jfegdz4zwoTfTJLyEeVVNrIRgpUzuDkQDsEITSBMdP
      o489j+u2vJt0hF2PkQDsMIQQiNL2FWIj7D6MbIARfqgxEoARfqgxEoARfqgxEoARfqgxEoAR
      fqgxEoARfqgxEoARfqgxEoAPG6MUhl2FkQB8mBhuGDPCLsBIAD5UOOa0pYLjRGRGtCm7ACMB
      +BAgccTC8ZlazhcnM2LtOJuoEWvELsBIAB4lHDxbyqlJx09PpYQKvrEa+H4JI+wKjJLhHiUE
      1I3ga3MprzY032+Nbvduw2gFeFRwXvX5mamMthG80dq9nRJ/mDGakh4RAun42amUmdAxg+On
      pzL+43I48gI9CjjHvtBxuppTlY6lXPIXdY29h5utsyx7JOcUmpxD4cevLdK9oqocJ0qGXju0
      o6Hx92MkADuOKW35qanBOH4Cw5y2vNrQHxh2+f8B+Mg5Sm3LDlsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='2019 National Happiness Score' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Average Income and Happiness' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy915Nc153n+TnnuvSmfKGq4C0BkAQhkhIpkhIpyraVeltSm9l209OzE7Hz
      tLF/wD7sxsbsw27E9I4mdqZb3WqJbdSSqKZEkRRFBxJ0IOG9qyqUQbn0mdedsw83y2ShABSA
      QgFq4YsoVGbWzXPPvff3O+fnf0JrrbmHe/gVhbzTE7iHe7iTuMcA9/ArjXsMcA+/0rjHAPfw
      K417DHAPv9JoYQCtNRfPnuD0+SG01qjQ58ihg5Rr3tzfR0dHo9dKcfTQAT788ENGJwoAhEGD
      jz74gI8OHqbhh9c9+cjIpRuarF8vcW4oOj8q4PLENABurTg3x+VibGyUQN2aAaxcmOSjjz6m
      2rixc9/D3YMWBrh04TRObg0Jd5T9Rwd5+ac/YWDTVl558QVCFfIv//wc3/nHHwPg1ye5NBWw
      d+9eejtzCz5T7Nq2gZ+88FMgYhqlFFrPv559L4RYdIye+1FKoRf9LaiXuDA8Hk02rPHmOx8C
      MD10gjMjxauPM/deoZRGs/S5o/fNY/SV81p4HG6Bl978mN27dzA+OgZao5vXNv9az51jqWu7
      hzsPc+Gb/g1b0Vrx6lvn6N+7kQltkk3GWZs3GakIfv1r38T7/vcBcMslyrUS77yzn10P7iUd
      t+YHdRIYQhO4ZV5+dR/ZlEOycwNGdYQZ12Bq6BSP//ofcuDAx3z+6SQvvfo2ne0ZiLcTjJ8g
      yK6jOnqO3U9+CW/yAjOlKlNljyceWNcyea0VYRhGhGbA2PAFRi5Pc2lsii88fh9/98K77NrU
      Q10nSLpjlOx2VHGMjQ8+weCRj3jkqS/wg+f+mvt27+H80ChffOJBXn//JHHqDOx+jLMHXqO9
      Z4Ce/vWcP/oBTraDfHsPm9f3gWFSL05Qris2rB9g6tIZ3j85Sltbng3tFgfOTBLXFfp3fpIj
      77zIzHSZx575IqePHiGfjRNvX8eDOzaswiO+h2uhZQcIvSrPfedvWf+Jz7F1Tb7lwOaCOYd0
      z2a+9pXP8cie+3j1F6/PfT587iT/9b98i4c+9QQzg6eYciVOLMHE+BgXx2Z44rFH6etqmzv+
      8vlT9N33CR755ONMDJ9Dmha77t/DjvVrKNbqTExMohGMjY5cMfnJ0WEOHTrE8VNn0cDU5ASh
      0kyNjRMAA+u38MgnH6c6PQLSYuf9D/DMZz7FieOn58bItfewZ88e4qbmxMHDiEScdDbNyNAw
      uVwO1/OwbIe2fA634WLZdrR6myl+75u/w4XjH/OzX7zFe4dO8ewzT/LInt18cOQszz79aT79
      mac4efAAlUqDb/7Rn5EPxpjyTKxYgsnLozf90O5h5dDCAD//6U946td+h/U9ebSQxE3FTKnC
      cFGzJiUIwxCtNWEYcvnSBQbHJpkcHyWdnSfo/o3b+PpXv8y+N94i3tFLyrbYtWsX27duwBEh
      k8UK4xOTc8fne/sYOXea4uQIdqqNFiiXkakqm9f3Lzn5zjVr2bNnDzu3b0YA5y6OcN/2zYim
      gNFo1JkZH8RI5EGHNBouRw4dYd3G9UuO17euD9NIsOO+XWzZ0EfnmrXs3bOb/W+/TSrfxcMP
      7+WjD94BIKwVOXlhlJ3376ZWKrF9bScHTw4yOTXFlr42Dp0a5uLJI3Sv3UK2vRPbEGS6Bkja
      Jrt37WT7lk03+qzu4TZALAyFGBu+wOjEDAD96zfRkU1w4vhxBjZtJ2Frjh48SgBIM87uXdsY
      HTxHTdls3jCAAFToUih5tOXTlGYmwUmj6wUGx6bZtm0bUvucPnWaoQvnePTZ3yCsTNPW1kZx
      +jIjk2W2bdlIpThDPN1GWC8RWnEahcsUGpBPx8mlk5TqPrlMClTA5EyZjvY8Xq2MJ2IIr8zg
      2AxdHXlSRo3vv3KQhx64j62b13PgjZfxUl2s6x+gr7udwsw06WyeYmGGtrY2pqenybe1MTk6
      xETJZduWTdRLU5wbGmf7jh3gVzlx+jwbtmwnHbcBmBgdYnSyzPb7tmNLwejwBeraYeNALyND
      5/GNJOv6upmejq4ToDg1zsXRKbZv345t3jPC3WmI1YwFunThDKOTBeKZdnZuvb3yb9gocXGi
      zsaBbgBGBs+T7YlW4Hu4h1msKgPcwz3cbbi3B9/DrzTm5AGtNWdnajTUgr+GAWFthoYbOZxs
      ZRBzHKpeg1CoxWMtgm7+zJqPot+xWAdGqh1TwIAdgBAIBNO+pqYMbKnptCJb+rBn4jTfCwQa
      jUBc7YRz8JTmkmfcs7Xfw3XRIhC/MOpyyTdAKazRo5z54O/IxPqxKjOMGBPY2kRqQYeVYUhN
      oa7YP3ST6BQaRcQAEoFEILC0zdpP/c8kuzL8eXcD1aRlpUK+P+rwZNblezMJ/qirTtYIGK85
      vFx0+JPuBh329S9Ga03N93mpmOBUw2R7zCdvKqZ9ydGGRa8Vss4O2F916DZCRgPjSvvuPfxK
      4QqNUNXKlN76Fo3SODW7gds4jdH8W930AajoSYQEWlbjyHsKGsTsSh39SC1wSND38J8x0NvP
      J9MNTtYMPmXPh0sYUhM3BN22ZlqZtDmSPRnNsWrA2bpBh33t0AqlQoqe4juTaR7PBjyda5C1
      QIUBWivOjJrsjPl8Iu1xoObgIjAEhBp6bcVlXxBqwTI2mF9uDL+HsjPIru1zXm3xK7wIXMEA
      Mx/9CD/UFM06IAilIly0+s7fMN0MaZj9HECgkdi+AUJhKIvu3sext30Ks30NvU7A7pTibEUx
      p4JozUMpRV9c8g27jmEYzY81n29z2VeKAdeJLdIa25D8dqdHvzMfghCqkDdLMdY7ih0Jvzlr
      mAkkaHCk5n/sdikGgjN1yc+LFupfKRdordBWDlKRZUyXp+D8K3DfbyMs5w7P7s7gCiEms+4R
      7Hg7nc46sq5DqyA9u6o3ocEOZfOlnhOABILAVGR0io7Oh6noIn5xDIBLDQkINibnBxbSYFcq
      0imknJ+SEIIOW/CbHdcPNpOGSdIyWojfC0K+PZEmZUl+p8snYWjKocQQ8FTGpS+meCwbYEno
      sDWPZnw+lXKXc99+6aCVQh/7GUbp1NwzlZkO2Pprv7LED4sYoHjkRYyOfjL3PUulPkkhVkej
      SKs0UokoyEs3lVutaVftKKmb8v6szB/9SgUOgTAZnXmXwKvg9O0ADR22QgiBlMbceYUQc7vK
      4u1YCHlTW7QQAts0+LM1Ho9kIg+2AN6p2DyQDHgir/njHo9PZ4NoylqjwpB/rUZhdeo1ZPkM
      nupAVyfmmSCeiphjhS9cu3W0mjeUhKOnV/wcK4EWBqjMnKJy+k3c4hABASnZRaezmZhIknNj
      pNxIFtJANmynpEsEMmChsgsglcCXIQVjhkSil94n/oKNGYuvtTe46Eoq14+UXhEsZBytFeVQ
      MOqafKZJ9PN/iyJFj9ZM3qn+8q+GWmvEAmLTUxfQdh63lkSqGrJzI1w+jCqMorXGPvM9KAzf
      0PjXImatQszjf4MeORQdO3qIbOMn6JmhW7qu24EWHcA3QkojB+h79n+lrTjG1NAbaLeKFoJa
      rIbUAolGaYURy5EQSezqOFW7VWxQBjQISBhZej7xh8Qti6931LCkQKk6gTLAWN3VQKuQEd/m
      d7s9roxA0BypSH5WjKN/ieV/XS+DacHMIMHUJeT2zwCgpkeIVz9A50BPHcYv7EROn0RnTJzK
      IVKZCaa82rKvXJ16AfI7MbqW9uYLaRDc/28RQmAM76M9/QEyI/Cn9tPI9SPk3eN+ukIJLrvD
      NIaPkt76JKWp48QDh4nwHHZo0S7aKakCqTUPI5VgevxdPGt2NZ2PrweNgUH3rq9j5np5LO1h
      G9FF78oIWGULvdYaIST3peY/UyqkHijGQgehFK+XHBr6l5P4tVLoqQs4l1+nMa1x2hSOWaM8
      vQHRtg6RSBGMGVgZ8Hp3Yoy/SyY5iFudJMSinNiJWLN52eeLrfsMnpO85jFCSrRWyOmjiGZg
      cTY3gjvyAfQ/ciuXu6JYxAAChWLq2A/Jr3uKNY/8KTrwsC98gIylsVIdpKwEjcnzFM++jjTE
      knb0uGcQ79xGfO397IoHPJYNuZP2Ra2vlHGFkBypW5RDwcFanNqVTo3bhphQaASuau6ot2qG
      9BuI8UO48c0Y2TFMOUEtuRfRtg5dLxOc+Rh9/9cI/AbCL2Mxg4wbuMZD6L6IGG9kBn4stazj
      db2CkzPmRNHatED3P3hX7bFXMIAQkqJ/CeP8O4QnX6Fj79cJTYl0UjQmLzAx/BqBEYK9yCIE
      oCNNwJYJOh74GrbQfKXdv+N2ZiEkwmidgwb2ZhRlX3GwunoBclprMqZmm+PxdsXhwZhHSUuG
      fYO6ki231EDTb4Vc9K89P+EkYOdvoo+9iFU5R63/i8i++6EyhTX0E/S2JxBuEfvSz4l1WBRj
      TzFlP45oa7utxKjP7ifWXUJrSehqgnpkSLmbsMSdlYCmHI6TE+00ho8wPvE6GuhOPQhGZN9f
      as0QQHs9QWzDJzFzXXgKfjZjsdFR7EiGyDvEBxEDzp+87CvO1aMd4ELDuPUVeDloWqHaTcVX
      2xt02IJ18TqOgA5HYeLzWsHgg6qN2xTFus0Qd7n0IgQMPEItNLC6NmMCfiyNn3sY2bUWPXme
      INFHMexFGCVEahPCMK477M1CuzWEqShfMNHxGEFD4LRJGHyLMDGA7NlyxxdGWMIPEEXmGPjU
      meISenqCeOCghWayfJics6EZ5rPgyWhIu2ms0KRoN4itf3B2MD6umvzztM2H5dt3s28UZxsm
      bbbk19q82xcJoTUGmqRUkfnXVPxZT4O4hJwlCbSgzZKsiQtsGTGpIeQc8QOMBCZjwfJ3J5lp
      x7r/8xBLEjc0wnKQa3YgpIHs2gw7fhO54WF0vOv2K6LCICXOE1uj8EQXnTuqJNNFzMuHaRc/
      QVdmbu/5l4kl7u6sHSSyzRuxFElzEzX3GKEI8cqj5ElRsCtNuTpSastWic7MHhLrHsDsHLhi
      1HJ457l9FpsTiuNVyQ/KMcLbJATkTc2f9zT4sCSZCQ3qWtDjgAH8H0Mx1jqKz+UDsk2DwJAr
      eaNkrpiqVL6KTiOEwGhfe8PjqWoRqlOIzg3LW7lNi6J+AFFs0J47hBDgV0LyWwVhXSGs2A3P
      4Xag5S7lRQ9pz24StgEIxssHQHnEjCwIKNgzTNsltAA7MOit5Oi0N9Pf/wXyD3+VxMa9V9wg
      R2geSq2S8X8ZSBlwvmFSDG/fKuhIsA3BjpTm8axPWkTOuN/r9jCBHktTVzDjCyohvFe6uwPz
      ZDKLDgNQy3uOQkqsHY8heu+jVsoBgni3jRGTqFCDYaKKE+jS2B3VC1p2ADPVQdw3cUWAZykU
      CiSEsRiZeicNXYxEJBHF0cR8g9CwwHKI9+/CSOVaBpdoUiLkiZwiZ91dyk/W1HMB1rcD475g
      0lV0OBKtoceOPOVSCNbHFO9XDd6rmmQMhdKCirp7iX8WRu/WG/9OWw+huxMV7EOa0TV6jTho
      jXPmH1CpXnz5WWQqf52Rbg9alsCJ0iHGk1U8K5JbUw2bTrUeJ7CxEh3k5RoyXnrueKEFDVkn
      5nRCrNUu3GWG/E89E/z7NZPsSbV6Xu809hVM3q8YWLeR5rSG/aX5UjG7ktE9kAK+0eXxRNoH
      NKVQthC/iAoS3b6J3QGEnQ8wXn6a6YkNqFBjp13UpWPkNvvYtdM4E2/esTCJlh3AUTZCz1pM
      NHEzh+dAsfYRhjboVDkum/Xm0YJyzEdJj8rUG2wYXw/ZTkCz3nF5NjdDwgiwZNtdoe0vxAcV
      A0dwWx1feUNhGgKtNZUgIupUc7kJiXSEGNBY9D19l92rlYAwbUT//XhqF5enLqBjMWLhIQCS
      62yEcY7Lo0dhza5Vn1vLDpDObMMJDJKBRcaLkWjbTsUbwlQGQglGzSmUbCq+ApShsUNJe2Ir
      1rr7sND8fnuR3+2Yps0ES2Qjcekug6fF8s2LN4malgw2JBMuvF+2+O5EkjO1iCGem7A5XjN4
      Ju/f3kncZRBSIjo3IvO9WOEQ0hQYTuT7EFK3BM+tFlqoM7HlUZL5bSScfjKZ7ZjdG0iECbJu
      eu7wxXRjEcPM9CCcOOtjIRsSNo6RxzZySGlxt6ESQNA0S95OuFow7hu8UrQ4UjfZmqiwNlYA
      NK6CyUDSZXj0mHeXeLga0MXLOE6F0mQnxck1TNSeRbdvxTvwU1S1sKpzaRGBZCJN92f+Ipok
      oMpTdGb+hPqZd/GL75J2bcpOMzZfQ8Zag5FMk9iwF4CzdYPTNcnmeNgS1383oRpqBpyQQdeY
      D0m6XVKHgHOuyZ90XSZj+pikmPQlo2606tlS8Lmsy48L8rZapO46+CUK5jOont3zYfCAtf1x
      hLmM3NcVRGt1aLeG8hp44+cAGH//77jwwV8iDQvHNzAxMGcVNgFOopOep/8Ddtd6AJQQ/MOU
      w48nDVQY4IeKYyV1V+l0HWbAN9prfCIR4MjbPzGtBT+Yauf9UidSWBRCiRZRwqglNANxQeKX
      lPavFxZ9NYjOLejO+xFCoEqXERdeQdWKiGQ2CutYRbTceuEkUMUJBvf/P6jiJJk1D4EKqE+e
      oc3oo2K7pH0HR5nYoUWs68ryflrD4YbDfx9z+KuxGO9UHOrhXcQBwIQveLdq4qpVyAEWcF8s
      5LFsgBaSl6cjsVBr+PblBC9Pm4x6v5wcoBvVJf0COgyWxRiqPEmu9j06Ow6ROPf/EY6eQ3ur
      m5F3hSdYptvo2/pVhBNHeRUsZTBpXZorS4Jpk/Qd7L4HSW799BUDSgGfzgTkTc3OeBW0Rhom
      d0u2uUDQaXn8QXuZ1ysJhrzbHwh30rXYHWpyUjM1m0IqBGUt+KBm3y23JiJarRByeWErMp66
      4jPtuwRnP8Tc9qnWz0vjqCDEaFszd67E1I9xOny8kqLqbkLGEujARdirl5TUKgKpEBFLYLQN
      MPne3zFy4QXqdoAQBiAxlGTaqDFtVyiNHWV6/3NXDKgBWyi2xEMMw8Iw7bvKEqQR/LyQZCIk
      cvStAiYCyY+mLI5X7554qMXQXgN78AckLvwVulG5+YEME3PTomgArQkmxhB2Ah1EOqSaHiWR
      ngChsbKCzv6zpCa/C0KgqkVUtRB5nm8zWpa/0uEXuTx0BiswMcoTJIRFaGoCQxP3TbTSCGlR
      dur4soq5uJozEYG9UrA5Xgv5jXaPDnthosydLcGhteZkTfJe1cGRDv4qSmYjvmRfcfXOdyPQ
      gQdnf0Z+YJDQhWq9iIhdubovB0IasGgH0b6LrpUjkUkIdL2CCGqw4DAjJWlMrsEZ/iHx1CgI
      QX1sA96G3172jnQzaGGARnWMcu0iKdlBZsfTJJMpQFKdPEW2exfKsjCSecTr/y+ZzU+S2vHk
      0qMKQc7UtFmCcU+gNYQIjlcFa2OwPqaw78CmIIQgacIjSZ+jDZNgVTPABBPh3bEDaK3RxTGM
      0hm0ESeljpPsnwIN5XI/Yl3vCp5LoaoljLhBOHYKa+NeOPb3tG0qY8RhtnqgQNDWPxzlbYgo
      JF/VTlF9/4fYj35t5eajQnSjikxk0IHfygDpNZ+AoWPEgxixLZ9AJiL7f2zzXrRSGESKT+8X
      /xdqh99AGFeXn4/WTCrjklIokEIzFUQP/50K9FiKr7Z7tNurrxwPOCFtRsiHNeu2RYLezdBa
      oS6dIDbyE/I75qNP3bJDWe8l7N+zbJE1nBiGwMPo3Xi1k+F/8BNS8ghmHKq1DuIjh3D66xix
      heeIJiHNqGSOboqmsS6TbOMM1XoZGU9fOf4NQDeVdevij7HEONX0VzAHX2xlgPi6+7HejzEi
      B+l9959I7/kKIp7Gnxxk5tTPCfwS2q3TvvO3iG99+NpnFIKL3tIr3pgv+d6Ezdc7PTrvABMk
      ZECf4zLo3h0huasFrTVy6F06Evsxd1porWnMmFTZQdDxCCKevqElQWbawb7yHmoVoifPY1ZO
      ku88RbxdokNN0pqe/Wbz94KqHXNOmQU1ZZUmnPbQ3WW4RQYIz72PSHaQjJ/CSgn8i8+TWee2
      MkA4PUJdVAGYKRxi+tXDxOIduPUJGlYwN2H34N+y9tF/j5HtuOkJzYSSiw1J53VKHq40wjBg
      2ldYaJIypKruDrHkdkNrjRg7Qob3MOMRQRam+nB7v4RYZo7vYqgz7yK3fxoWSAK6UcEZ/B7p
      7hlkEmZpRlwzHXCxMWL+O86ATWMJa9ONQsSSENQx01HUedv6BoEyWq1AMpHF1JEnrmEEuKZP
      MRiNiH+WMQFb2tcUf5aLo3UDd7XTBLTmcC3OkOewM1Gfa6f0rx1q6Dip2mvE2kGHmunxAdz+
      37hpZRdAbnhojg601viHXycx9G0ya6aR83XHrztOQxmLnKWaqMCypsF6xC2u/gBG/25kfg2B
      66B8jfIhmFGLGCCeIpfeTEIlyfpZ7DAKF7B8idCQ8mKgwTBStyyTAQy6Bi8XzFUNhTVMi09l
      SpgC3iunfqnrAN0Qwjqm7aGVpjKs8LIP3HRJRO3WABCJTPReK4IPX8QZf4Nkb2VZlj5PGbgq
      ypWIVN5F51CawkgvXu9vrZjlUKTaKYrPURzv5nL9ixTy/+ZKR1j7Z/8d+WoBrRSN4SNILTDs
      BMoQWLk1+IVR7K6NGOmVSWBoBKtH/FprXL+EYQg+narzUvHatW1u30RYVeeXVgqrfBR7o0Hj
      sqaS+wqi8+ab9GmvEYUsNBcuNTUaMYVQV7m2+WLKs/C0xFMSy3SxZasYELqK6cInUCisoX8m
      3PiNW86W00pFedBdO/E770N4DbBjrQxQPPoydaML00li9W0ltfMzcyGqs0nUZvuaW5rIYpxx
      LaphQOo2OmTn6gJpzRulNFOhxVkvduc8sKt93sunSMYvE9YlpWIXYv2tVWSQ6cj/owOPcHI4
      Ep0feIbYJRfE4hKLSxdCSxk+SnJFpRCtoTzdRxhfA7JKINIrsgOEl04j23uQiWx0+0//iLDv
      s60MMFM8ysXRF1gz8CxW31bqFw8yefJFHCtLx+N/RO3ce5GG7zWws70IO4G95tZupq+hFoSk
      zJXngFnRKgh8TtdhU6LGk+0u+0uZiAF+BaBqRWKjLxLfbOAVFarv8WVF6kbV9BZYacIQ5Hyh
      Yh346NJlpHYxpj/EMmew0sNL8PbVd/iFxK+Vxp1UuEE3jcReEpM/RbetwysoVHEjsjKIstog
      2RFZq5rXoOtVGHkPlduKzHWDNJakR6Nvy3zckhCo7kfJlv/mShHI0Q6ZbZ/BHz/L4MG/RhOS
      79rD1Mv/mangArY2sUhSkUUEkoHq10lufey6N/SqEILTdYuu2MqLQkqFeG4djWYkSHBhJgEy
      wcn6HRJ97gCEkGDYhG6Dcq0P0bfuut9RtTL2yI/wur+ETLejtSa4eBSjd8OcQmqc/xG59rPI
      jFiZXH4FVX8bQedjODNvEh9QWM456h6IyTM43QY6gNqgptr3byGdRwiJmhmmq/193NIB3JEY
      yu4i2PgbV+g3QkqYZZrAR09eIIxnFkWDakG6czfE08yc/gVKBMTNDkRpmkZ5CCVDGtIjbncC
      YGmLqVM/Q/vXr99/LRyrGczchuQopRSGaVFXgq3xCn2xgEPVDBV19yXq3A5orTFHXiK30aV+
      OcDvemZZTi41MUhQM8FvRE1GTu3H7N8KSqEDDzV4ABlLI+2VK2Thj2scPUxm5m/IdZ3DavZ5
      iHVpYj1mVFLfEiTWSJIzz2Gce57w3FsYM0cBTbw9JLexRn7NecS5F655LmFayC2PU+v749Yd
      oHv95xGxXvBdajPnQUAs3UvRH6Man6VQjU4mWN//x5SH3kdXy/hTw9g9V/EGLgN7swWSMkDr
      7IrGCpmmBVqTRrN/Js4zHQXeKQdMBKubdHGnoGtFUrGLIAR+bAMi237973guGfUKTm+DsH6J
      gvgGIteNHjuM6NmFmrqIdGKEKyxCiqQmmW3MdRma+3yRkiBNSHVUSXEKONXsULRAyRZgyPCa
      /YR0GKCnhogVfta6A8T6dmBk2gmLk3gqigh0C0NkRAdGMxHGVBJzbALv/RcIxk5T8Ae59M63
      UOWbr/R1th4nFHW0XjmnwJxpVUSxSDlb8lqhnZngV2P1B8CrR4K2Vnixjcta/XV1BiftYiYk
      djoErxzJ3O4UauQY8fEfEvOOE8bXUZjcjFYrI7paOeOmdpOlviP0taNZ9cW3SZf/kWx/Zek+
      wSrw0M1sqSCsU3YvzZVMDKWgaF6mYE2hUCip8WSD0oEfo73GzWUIIVDKYcrVqCW6lXh+sGRW
      mdaaMGz1IgbN91or6vUyYRhgWQ4Pp+v0OrVVDoC7c9Beg/TMc9jpEI1C6OXJmMKdwGhukG5F
      gpUmWfwJOpTEgw8RyRyZtrOk6j/FTX6C8oi9qn6c60E1NNXJLBCt9MH5g9FrPUsXGvKbsKND
      WkUgVS+DmUOaFkJLNApXNkhJEyltNC5CCGp2ACiwBAiN7RmEF49Tmvi/URu3kttzY86Lcih4
      uxxjqB7n9ztqOPa8iHLuwhDHT56mt7eHMAiIx2KUKxUSiQSe5+E3P6vVauRyWc6cPc9v/toX
      EEJiWzG0Cqn5LoEosDkWp9cOGL1OteV/FTAsqt46gtPHyWyxsf2zuPrRaz4X3aiSCD5AGAAa
      N1yLVT9BMjdONdyEISXJ3BQgSObLWOXnKBXj0EtLaPOdhIxBPN+IGnZNnidj7qM67mB7BxFa
      E1RdkDFUthmAt/DLjaEjABgd/fT1PENXbAdSCSYbZ2nIOvP9fyM3tRZRp0fPVJTidQpqDO/M
      +3iDx25oVRj2EuwvtVEKBedd2fJdKQWFQoEL5y/QcF2OHDvO4SNHmZ4pUC5XGB+/zPETp1BK
      c+DjQ9hN5hFCEKoQIQ0+rljsr7Uhpceu+N1VikRrhT90ksaBVwgmhqkdf3NFEkGEYaAHPkv5
      coqgrkgkx6A0co15aMzB50nlJ+Y+c6wRfN2O8iFrfUTgxZg+mWS2JKzyDVSsc7nusSAAACAA
      SURBVIkSy3cOQggyHWPoqQuY3kWSbRU64z8i13aRbPsg7WvHae+/iJ1uivQLv1wvXEQ1HkI4
      cTzTZ6J+HC3VIsdNlAgttWjWCNIoQ9MwQhzPQLs+lXf/CYbWk3/oq3Mh1dfDOsdlg+PzwnSc
      Xscl20ykWb+2n7UD/chZ+zM60nWkBN2MIdQaIQWffuyROYeX1gqlAqRhUtUmJ2sJPpEprGoS
      zPUQTo1SP/hzVH0KnzrW+HGCcJLaxEdkN38eq3fbLZlZRDKP+clvUJ56C1EZQVeeh0f+FAxz
      SX0gkF3ocHCul4KT8qFoUC+3k+qYIparo9rnXb1OmyJRPY8ODcRdtKlaiYDs9N8jnMgUurg3
      xEK0MoA7jnd8H87OJ8jf/2sYXog/fp5pLhHKECuQkUVBBuTCNgLDoKyn5r7v2iGOa1Cyp0iN
      1qmf2Ediz+eXpXzFZIiJy7/pahCXFjBvx40MAbMtWJv/NWW6+fdRVM8svaim02O64YGZJRPC
      X41upLEaifDXgFYh/qkD4MTwLx5GjJ1mpqdI3E1TccZQhJh+CXHuZ7R1bkRYt2axktluguzX
      IseW30DPXMKsHCFc9+WWTCshBDqea1nNg4ZGOxkMXZ8fz15goRGQWnsXUf4COG0CuL55vrU4
      rrDxYxkwbYSUZB75GuHEEImzB6hOnkZaFk6qG61DPFUlm12HP/oaDVGDZm/4ctLD9g2MMKRw
      4VWctfdjdlwnfELDp7NlXM/hhWKc3+ucYSED3AwMw8K2Bd2GyReIqhS8PePxi0rijgXAaa0J
      xy7ifvgjlB2j4VTxOxsEdkjZKOATRd3GqnGSmS2Ep/djdPYjOm/exDwLIQTYcUh3ImemCY89
      j8qtQ2TXQSoqXylro5ChJXRHV6awc1Xu6KpxG9GyNLuiweSJH+O98yNUo4owDMye9TQslwlx
      kXJ9ECPTRWzzo2S2P4NMt5GLbcIUNrP6gZIa3wwJtSLhx/BrU1c59QIIeHE6z2WlmPQthtyV
      sSwYzVDdUGl+OsEdJX7l1vGHT1B9+zs07AbVxDTFfJlGwkcLhU+AaUoMU9Cw6ySt92jP7kOf
      /gVq4gLaW1xF9CooDmFcegkdXkXXMW287i8TT4zRlXuZfO2/YQ69iPbqePRSmViU522nCF1J
      UOMmTJ53P9O0MIASioIxQ700xsjL/yfexEUAkqn1GFpSiwXMjL6PObAVf3IIe2AHse7N5I1+
      ooC+6AaFRpRIb9ht2Nnl5Zde8h1eKrZT1waOvDUlMAwDwjBAa4Xnezw/rviwfgeJv1am/tr3
      CI7tpxYrUOppMOVUUSpsNuieTbbQGIFkU3cbbVvi2DlJrn+cdv0c6cvfQk+cuGJhWPzeKBzG
      CU9GSehaoyYHCccvRnqRCtFTZ9DlMVxjO0IIrBRkkweJX/gWRsKikf4kfq2ZkCJAxuMU3CeZ
      vLyDqQt9hDfk9L+dYa96wc/NY8kOMYGuU1GTxE6+Snv+D5gZ3IcSAksJ7GxP1IW9ZxMYJs7a
      XQgk6lyVKT3a7B8m8ayQQNVRM5eRmfZlmUXz0uXBzAw507wpj3AYhmgdlWOpeR5HKlGRrpHA
      uWO9J7TW+GcOEE6fxRRQz/r4SmFZUSy874dIKZBNj6cRCjI98+Kf0x41KjGTLpb7PDNjT6N7
      HprTq9TlQazaScLUWkTHNvyOxwnkkwh3Gn30bRLyKNX2r2Nd+iG4NdL5Yao4xJ15p6MRk6T7
      PGKVl5ipPYlIRERlxgXxqdfxydK57hjlqQEapTjJjnmdYBl34Jbv4UpjYaDfFV0iETDpnUVJ
      Tap9G/X3/oWaNwECQqHJrH80OjKWQBgm4wf/iaA0Tjq7kTY/ybQXlVX0zJCJcBT9zt+TGN6D
      s/dZZPzaQWj3pQrsSc9g6jRaJ26YCTTwetGhqg1O1ONz/bbuZMVx/8zHYNoY6T6K/ln8WLNs
      OpFc7gcKwxDNa9UElmJisMqaHZkFo0QrqelAm3iV6uBFGj1fQjgJZNdaYoM/weZjpme+iUh3
      w8wpsuIl7LU+QVkjS/9Iols1rSGCjLP0Mm6lFHn9KkY8Og4gFHmU2QH6GGY4gjDvtFizsgzV
      GgyHBCTKEICkXhvBN0IaVNFolFBMX3gNrTVGrguAauEsoQhI7nyK3JbPIuccs5F5dDpWYHro
      TQrvPHdN+7aJYleqgEYRiAr6mtEcS+PFKcnbFYeDNaul2dydhLVhF0ZHPzX/IuW8i2FHi8ws
      c8+HukQPVhuaS+USfnXx9Ud/N2xIt5/BHvrn6OPAg8Blpv44xPPICy/RbryAkwgQhsDKSZJr
      9DVNgS3zTc+HPIeeJnDWIlU9qgUbD5HFYMXCH+4GLNoBdNOWAwiYGH4DCweanQ4BgtqC8tWm
      Tf8Df4iR6cBqH0CNnUUiUQu2mMBUlBMe1shJ6i/+FfaepzHXXJmNZAqNtSA5TtyAd0XrqN/v
      kUbyruuzlQsqDH70QxpxrxmXAwiN7yss04hCepVmYcfSNjuOmTSi3roVA6e9NdxDCEEsMYHn
      1UFptGEhTBPtu6QTJzBit3YPlK8RBpQmO1B968gUXoqa62XAyFz/+6uLG7/WhZLFlSLQAoRS
      YyhFTKeINRRBKk3PJ/90vqS1EMQ27AFAeXUmjn6fGiHV0CRnKBKugQDqTsBMuoFXPk7yoyq5
      3v94hXjT0AbDbpJN8aZzTfgY1zGFhuF8pYqPywL/OkyjamWEE29J6Fe1ElqHyFhmxfvmaq0p
      fvgqQ8FRPOGjSiqyt+voGoU05jLucvkkc0pd85e0BbWCQz1oI5UdwXB08/vg+l3gN8CMERhd
      5J03UJVfYGVvhCCWSF/RUHzfg1wWt/sRklPPY+eDJY9d4oqvOu6tY2V3nVk94AolWKORTWeR
      FmAYcXo2fpngzAGc3c9i5nuWHGzm0L9QrJ3HFBJLRCZRW8TJDzxJ6eLbVM0qWkCi/4GlZXsN
      7YaJrbvQeIhluBbDMEAh+HnB5qP6tVMcVaNG9c3vorMJEpuewiuNIGoVGrULNBojdGz9faze
      m8+TXRKNGsWRY1hJCbYZbU5NBgiCAMs0QQlapTXBtF9noBxiZwyy6+tMVzYzJT+LUTyHE5zG
      Fz34sU1kCt9F4IMIMWMaYkull18LV1pphIDswzZuOcTW+0jkisvQxRYS/oK6Prcdt+AlX1oJ
      jmAqSVt2N9OlI8Sy/VTOvEaydy9yUQkNHfioehnpJEmk+jCVJJSClKERSGQosNfeR0ZKahdf
      ImP1Y667Sh8oAR9XEzydKyEA8xqrudaKw8WQYdfhUugwFhjXvRfe6Q/w3UmCiUozwvUYaPCd
      AAyBefbHtLf9OXIF69OHk5coZqYgDrHFZWS0QayWoK33iyhTMD31Mp4oN69PE7gKGwNpgF09
      RKPnEXS+jwZPoIvDtHnPYeVm9YSVJTZpCeJtPuAvY2x9lddXh+sGaAVObDY0XaM1KBUlbS2/
      t8qtM9qSZlDPDJiqHiOmbDK5zYwUnqc++T7d67a2BP1VT+9n7OQPMM04jaCIktBQYCKwJBTi
      NZKn95Pa8yU6iuM4mx/GyHVedTIfVpI8mJ4kb4ZAbsljwjDgo5LkZ6UU6gaqTtubH0I6cWbO
      /DNF7wihoxEYCEw0imrjHPnSJLLzxptILwVVKdAYPIAyZ8O7Fz6oSMzJ932JxH1PE5ansUf2
      4cUiBjBDiZ2ev9PaThIOn8RgCjp2g9JIFooltyIe3O42OYvnJvDcANUMZff9AMMw8H2feDze
      jOpNYZjiGmOsHBZRkGJ2C/NpoBNpRDqPa/iUgxEG3/tLquc+iKakNZXLRwhFgBkI2moZrNCI
      uogJHQWtCRib2k/p1b8m/dTvY6/dce3ZCEHBt5vjX91iNO6JGyL+uYtNZVGWTWhFO5SY/ack
      2dQejLa+Gx7zagimBilPv4fvLG3NEVpg5nrQQGX4XarW5bkjfFvRmJ735Np6DNnWgxOcwzn7
      X4kX9hHWbwdR3OiY1zr+ak4qTTxhk0g4SEMQjzvYtkE84WA1f0dZYAtLJa7knFtx5Q6gwQkt
      krlt5Lc/izd5AYFAKkHSzDNz9F8wzRjO2l10bP0Cbd5TWD0bokTqD35AWDuEErrZbhVCU1Ns
      DJM4dxB723XqiQIn6xk2xr2rLkhhGOLKG48TkvEU2s3jWJ3U9EwUyq3BCGy6Bn6b+MBDK6IE
      axWiayWmTn8fNxEQhupKw5QGJ0yT7FhLbegw05Mvo+SsnzoyHxcLLsneyIEX6wjQk9+m7DxL
      ynqdZNtFbl8M8nLEioUEeuMwm6u7ZS0mPx2lsbaMvZxzLfX35e1oLTPQaBKeSa7vMXKf/N1I
      Fi1OkHXWEs9vILf7K1TOvIUSGh2GeNPDGLEMwoljOHHSe38L/WaFUX0OS5m008+UvoQSiuDc
      4WUxwJlGHD9M4SxRJkUphdKKaf/mHr5M5cg9+kfEx09Svfw+0s6T3fg5jMz1c2WXA601wZF9
      VE+/jmPUKWfDBU4umBV9EmoNm9d8huDV7zIiTlCWFbQGyzKiPAulcUVIveaTSFoIAYlOl5j/
      L81klduBaxHRUgS5Gr6AlRDtZrE0Q7RQmaEkmHES6x8CET24xLZP4XStRyayVE6+Qax7axQG
      Adi9WzDyPVGciVvHaOsm+ehvkX3zW1Rtl5Kepqf7SRpTZ7Ae/Oyypt1QBvvKDp/PhS2WIK0V
      rlvjSCMWZXTdhMgqTAthWsTX7yW+fu+ND3ANaK0ITr5H4/CrTK6NPOcq1JgtnVIEqWobXY/9
      B2y/xMlj/0QpWUepSB6elYnjcYezxUky4w6JjfM5zKvbdXbWorSYCX5ZnWBL72yt/QH8LP2P
      fR2jY14WFkJgtq3BHTpBdeY0qe1PEcyMETbK1IYO0qiNkunejV8cJ7b2QZzerXR/9j/SKAwx
      deLHzBSO0bP3mwi9/HZEBytJ9iQrdNkLizMJfEx+UU6ubpDhdSSCvCUQJ97FK1zm4sk3KPd4
      IAxma9wrxVyYgxEKcuu/jEznqboWKmcQtyxmH4PW8/kNtmeQ6YoqLyg96zVeXeITyEiXYzY0
      YvHKvxJK+GriyofZwgCZPb9OLdG9pDfV7t9KT/82hBC4I6dAClRQY6Z8nJnSMQCs8XcYuO/3
      iW15mFRHH8n1e/GGjxOOncPe+ollT9ND8lFF8GzewxDOnNPCkAJ5a+LnisOSMHXyYy5NnmAq
      VaXRCJCewPc9TDOqwR+qkHw+hQwNrK4ott+zEphGDl+MzY01e9tlINg40IGRNABNTZn4SpIz
      3VV0dOsFxL9w9V/IEHMz5656KDeAVhEo1wn+0nd4YVZXfMODUZTjzCX0pJpbtnzhMXn+FToN
      E6tzPTKdx1l/P2FH4Yq+UdfDh9UUPVaBAbuBI1wSVpphz6SuVzkBdSmfnVZz96MeQtsDn2J0
      32mSvo2dtQmMYM7GrZQmDEKEAEPHkHM9FfTSNKNgbS6H6MxQCAQ50yUpfYraQSEwVo3QlhJ5
      btzmf7fj5qlJa8QSPV3L7ggXDv13gplR/NEoMlQ6cVT1xjrEKQQ/LWT5y/Ecb1ZiBGGDifDO
      p9+F02MEpw7MvS8HmrF4F0JpjJyBiGksS2LbEssSWJYkmYpMu4FZp3biVbTXQE2PYRUCpCej
      sAdfkvS6aPc20daWwJKKEImrono5OdPFuG0iUBT82Lqy6yV+YHXlz9uB1nt4UxSlKgVkKkes
      bxfG6EuEYnboqFqE1BIt5VwHGe/SMerDx8l1fPOGgtUCJAg4UM2SMsocq915BtC+h2xrDQeR
      uQ7iXoKqPc/kpidxjaAljCA0Q8YnnqdXWUhtkX/wG8RPvI5u6ybeuRsj14WuVyhffIGknCGT
      UdhiNTqIXIuxFos3i3WCX27cFEUJO4bWmvLQB4RLrEqhoVBTl5B926LjLh6gPH2c9PRnMdpv
      vAOhQvBa6c6FIc7WlvcvHsfo7LuiY4mQBiKVRzMDaEQIyUoGNz1NYBgIpbFkJPLEKjb2jk0Y
      XQNoFZJs68Ic/Tlx98eEl1Nov056a725Tqxm+5ylLD5XI/KrWQZuJ1Os1Njz81bBIhEoLC0j
      f5cmA9TKFMcPwBUMoDFCyfSpF2mceZf6ybcoTB+iIWtUDr14V1URWw6UW0M3KrjnP8S78HHU
      T2uJXUxv2Io2IiJvSz1B/pN/geVbVEMzCjHXkKl30rXrT5DNIgFqegT/re+QSZ8j0eWTtoq0
      2/oam6SgHppLVsm7fbjaZK7GGLdrDis1djSOCqFY2tnKALXhj5c9jExm6H/0L7DFlVlegRlQ
      iJUYOfQdLp78Lq7pogXULp8guHTqFi9gdaC1Rgc+9X0/pHH0DcZP/S3m+h1wlWTz5O5n6Wz7
      Eh3Zz5O7/2sY2U6y9JO3PMxmlpCT34bs2Uh4eTA6R6OCtffLFArb8f0QlQyZKZavOa9ID1hs
      hVkMscQxNyO7r5bD63pY+VDo8nQvft8XWxmgOnUab/QM3vi5ub6qSw7gu6h6BSPXQy6zOL5n
      frIN20c1H74WmkKsTO34myt3JbcRQghQISIIaFzYj5aa0XPfpnDkRyy1BAvTJr3rK2Tv+wre
      hYOUPnqe+MAjLc9OhILauf1gRabdmH8Is3YCmbAxTUmgFbF1JlcXL8CWS4RWtBwz+0iXUlyX
      ywR3q6Ib5UJEt38pBr/ewhB9t1Zsx+3+TYRc1CXSE1XOvvefOPvuf+LSK/873sSFpQfxXfwz
      BxGGhZ3u4fpewuhhKKHxJs6jGtXrXOhdAq2wtjyE4WqCWAhakep7+JqKvHfiXSoH/wEpDWID
      e3BU0+ypwcAmMbAHs30NujxBMjVINnuMTDoqSWlZs90Sl7viLX7gi+30N7JTLD5u8d+WO+ZK
      QSwg9KVw9WC7a6FRSFLN/w+IeKRTtuoAUqOkRomAojvE0PvfonHxUNQeZ+EpGjX8swchDGiU
      Li3rxLMTbph1gqET1zn27oBwEsh8F1LGcSoW8VoMdZ0qy74qUuxsoCsF6sffxCrXSKge+jq/
      Rnzn08hUM8xbg/ZDhAHS1IRh9APgeeHc6+ZMFp1lsWlSLviZJdCFrxcqt0sR+sLXyyX25TDW
      co9vhdLiKrpi5BBdev1ZiiFaD/SqJuX4FxCJ7NxnS+YDzP5uhFOcO/iX5C7uIpYewIq3k9r0
      MDLfTeLZP6B8dh/ThY+X700QUIrVsA4/TxsSa8MuhHn31uv3zh/EmxrEGNiB9j+galbwj/01
      fZ3/W0tZwYWw493EBx2UP4VXvkBm4BlIpHDWPhhFpGoFCMKJEUJDYWfMuTRJzwtxbAONIAx1
      s/nDtWa4WLSJwryjV0sR+2KmWkT8OiovP5cuaF7Z0b11rOuNfz1r0tIohxZZ82oLzY3oAwvE
      8YpNKXwWLZ3Ih3WtjLCWIYRmpngYiocxlMGWnq3ITDsTr/8XpoJzc30ErgelRRTLImDaHKd8
      5L/RdmoT+Wf+HTK2cllYKwGtQlRhgstHnqOWKdHJLtranqR0+S1qsRKVM2+R2vLkktYgGUuD
      r7HSPViyH6lN7HV7ojV5+BeYtVPU1C7SwRs4/SbViocTiyI+hRAoHXndBRrdXAlbM6RmV/eF
      sVWtz0Bfk0ha9YLZTCyto4IIhpQIKQgCRRhoDEPOMahSGmnMEvNi0Wt2zMVi2I0p0koLwuZ1
      z8ZQrQQ8N4sqXkQZKYxkGzQz/5ZggMWcOw9NZBkR0sDu2Yy+dHZ5J1cGgRYkjCjJRQuNZ/rM
      eOeJn3ib+H2fRth3T9dGNT3O+Dv/F42si/AhufUpjHQnSrlUa68wffFHJHt3I9LzZQR14KMq
      MyjloWyYkR8jSeEV36Xz9ZN07QiI513IQdrfh7Cigle+79NouJimgWmalIoNbNvGMKJqEUEY
      kp9LmI84QSDQc0zQqvQuJP7ouKWepYHvh4SBjsoxGhIhaWFoQ0qCIMTzfUxDImUkk0spEGI2
      SO7qTDg/3+v5MlqJvBRY2HJ5gZMq0ISuwojJJmNeHem2y+hKkWp1I6mh/4ybfpwgv+dqO8DS
      W5sWivrhV4nt+DSm0351f8gi2DJkvsbx/MW6hsvghX9ifSJDbOsj1x9olSDTeWJmDzV5EWEL
      kAb1k29QKn8IMQjiAbUz+0jc9zSGk8QqjDL+4T9S9i8SxD1UuhnWKaYB0M4wifbZxuICsaDg
      cywWFSIWgJQyygG2LEKlonBqa1bUmif+eYhFRM4Vx8y+XswIUggwwLRaw55njxNSY9lyrjWW
      lAK0IAwVpmksYEK4OrEvPwIYmgslkrS8dtCf1prySAO34YKhEYGB7dik+2NX/Z4QgsyAS8o9
      jowJrNI+CsfOX0sHgMXcqdFU9DTJdBuO72JoSSiudpFXU+IWjCk0WggIbr0hxEpC1Ur4qoAI
      BbEgj5HugLhF3S/NCeWXKy/TfSHJmt4dTOz/HvXqCMVsFe1qlA4RCCzbQoUhM36Nfi+HEGBa
      rU/Itk3E/8/dewVZmlx3fr/M/Nz1t2xXdVV3tZ/u8cAMMPDAcAAQxC4J7IIgl+RSNLuKkGIV
      G6GQ9KIn6kERCsW+SAopdhWiQpRIcVfgGoIkyCUJM8TADDADYDCD6Wnvq7q8ufYzmamH/K4p
      09VmBkSDJ6K7qu79/Hcy85z/+Z9zpMhNIPDzBh/KKtLUQZ7WuP4HYtdsI/L/RU9t99hm5/aO
      e2SMU/Cd73enyOEmdcIF6Ywxu5rX7Za9TRdrIWsbvKJCiIF51NEKjWRkF+dp78k43dJ4U73v
      DWmnS3fVozDub9tuWIQUqIL73StCoDZ2F8ba928B682zFC6+hFi9vYfy7weD7vxIEIoKJa/u
      BsFDJFanBMEkU7Ofpjj3XmynQdpapdgq0il2sdJSaBYJH3+U1vItFjducCtaJUgDAt9Dp2Cs
      wcYpSZJS9APaW12Ktd1mnpCCNNX4nkTndnZPfM9DSMhSi7fDZ92p6MN/W2tJUzcbSylQSubz
      Ts9BdpwtY+yQgt+brS2VIMs0SkjncIvevsO6IPqhksGrdR80b8V0kxipFYVaQGHCp2M8jBWU
      VLpjBt/bxDAp2HBHsbAI4s1kaAAMHWVH02+ArOuTFY7sVRhrf+/dCsPC1S+67+T2ZXVP2fO5
      CmrFU0y/9zdZeOlfIh8yJMgbn2Xk4/988PaKVYyNkbJAMSkTlEYRE3WaF77M5a3vIA8aqrqM
      50mEsITR4LGOpiXG/SJKKZQSu5AdIUApiVQSnWqkkFjAU9JRri0IYfrKeqe5otc5xxi3redL
      t3pYSzdO3CCA/nHkHQ7US8qx3BmBEsI5yQJAmP49DB/Dakt7McZoiOo+QdV9nyYpqm4RQtNc
      aRHWa0Qqw6TWVc7bdU4HBgwcYkFrIUbWd1fLS03q+D3e3Z3nTnIIXTt9Zx8gNQKDIJS7nZhe
      a6Thi9xTLIyPPkvl4LvJbp5HFCvoqEAQVYnmniK++SNkt4EIi9huG/EwoUG9lkxpQjZ/gfLU
      e/AnjzsIrVQlWTjL0uV/g4wM3TjNldsghyAbrys5c2SC4lSQF8NyifhOOd3xjbYo6SaeJE4R
      QtLtxvi+jxASrXW/d26SJFRrZZSUO3KNnWRaO9MmV353G4Iw9Pq/w2BGbDS6BL4zwYx2Zo3O
      DJ7nkSQJYRiQZdrNdUIg8oHj+XKolKMkTXVuzrhzdNcyWuttZM0p6eZSTLAWoDyZD7AcghwT
      rF3LzUrPIrWiWA0pTPj5dUK8oWmtdVBC4Rc9vKIiSRPUNoTIPXNZtnSWUopTAXsXDRnsY4QC
      ndwZBvWERWUKKwz2rjz0nSNOIKxktPwo5dFHiDdvUjr6NM0br1GsHyQ68QxWZ2xe+BpbcgP7
      8u8hVciBn/2vkKXanU7yExHhB/hzj2GtwXZatM9+la5eoNE+i/ad7xJFnoMNtetN1sPPs9Cw
      ttomGvdJGhl+WWGEdUoF/TKHKjdDfN/HGEupVOx/b/J8ACklnifxPUWmDdIOKfRQYCwIdscn
      dg6U3t9JkoB1lTaUUrnplOJ5HlJKOp0YhCvd3okTwjBECIvnD1flEPi+h9aGznJKtxFjfY0a
      7X0r8UYtRiRobRHFwfmFEHjjw7Cppt1s07mskCgynUHBokZBG02axIhNgRrb2xeSPrQ7LTqX
      OlSniv3aSu58O3TU+kiy7QMgywxZZpBCMJKOcOD0z5P5gutv/QGZzPaxdHYMEGsZC47TTlbZ
      PP+vUcLH8yuMfuBX+pskV16j0bqE9iwbaoNyJyK59BrRkx+500l+orL1rd+nqa9gYkMnXEHu
      cGad0u/oWyzganud9e926IqMMb/I0XeP9XshWwNC5k5lLzDjKWcS7eFkBoHqNwHsZaT1lN9a
      e98s0dHRat/n6MUBhCz0Lr1f5NhaSxT5KOVSNPeS7nJKt9vG1gd+hWBg0ljr/J09XNN8A7BW
      IMsWcL2Nh4eyMRYVCmzADtdADpAuAV7NYK1mc77F+KkqadMNzOqRqL8q6BTSwkls0t7RI8wT
      BCpgau7TVCYfxWYpheo4c/Evc+XqH2LEdkenf+U7pJxGbGRXSFSCJyQVW6UwddqdfGUeOTZN
      ZmJGZz7siHW3LqBEROfa9wif+PADNcf4cUvp5MewlyzX1l5CGIGUkjQdJLwoT5HEMYViRLSl
      aJXiHDGxNAsxWFBWum4wAjzPzZpOcS3WagdJWucU98yWYbHWknS0owMEu2d1mQewPE8OSpiL
      3SvAYB9Qffx89zZqW6R5D3/QWkxqkb4gbqbIUbetMTaPGfTMHUG3G2MNxHFCEPgO8pW5Q52v
      PkmSUiwWsFYT7Lh/IXAriIDM2Ly20A5kYGhbWbasnm9CYMEIej3nrLVsNp9GzJ7Gzr+xwwSy
      gpocR26ts7D0h/iixMiJj9LduEaYRXSC9vDGez5ULHRJiaVr+GaUpaHXqZ17BXSK8EOar/45
      5Wd+jpL4gLvxa28g/Yhk9fqdXxYwGUha2tLRe3cPKEhB11gqStDU9j5R6fF9vAAAIABJREFU
      6P3FmzhMbezXOf2NLS5233R2szVEQUicJEgj8VKF73t0i2keZBL4UhF1PIoqYPx4yZX8syKf
      8YZfpBOduZccN6A9D9UjrrFFp1GmbY6j568xfmR9+wPPRSlnj8ebhq3ue9FJSjG8TnVyePv7
      l66W+NKwK9ZkYOXcFqooIDBuwAhn0mVa0x801g2DNNP4vk+mNdJYpJTEcYLv+/07SZIUa82u
      AdALDLrBNewYu1WwV+XP5ueURQFFt1rKhtef/bubAdnYB92SlDZ2DAAB63aB9Y2F/rMVZ7t4
      QZVSOIOUsJHcxIqEYJdz7F6kxdIRKb6SZJnBWoERhq2b3yRaOY8sjSNa69jHPoIouOSS8MgT
      APgzJ+/4EgIJJSWRGJraMuFLDLCWGmZCxWKiGfUlt2NNUUmKCm4n72xGlZCS6Olfpfrt/4E4
      7BDk4fQwKrgXIxVZmoIUBJ5ECUmxXefEIwX8mjNtssyhNFjwgx0mRY7PowVbfBh94hhLZ7+I
      114ge/wfIaIiJX0FrzLs4Q05dtrSmS+SjP0c9ugJZNIlvvofiNubhIW8ubkFKZxfMZgi7oya
      pEaQWkm4x3TSWUvxxi0yBIEPPVxfDApP9uyyQiEiinIILP+shzQVittbwe5C/nNz0VibO//D
      978ziDewTKwF04LSSJA/H2iJ9yEKFUd38cZ20ti2LyuVtMLooz9P2tliXV9l5tQnOXTs79HQ
      /rbL1LrnP2i01nnUEHzhMRE+zsEDL2BI2RQr6EqR8s/+Z8jC9krTd5NQCBZiTSDdbOLlvJlA
      wnpmSC2k1q0MqbWkP6a0KVOooJKB09mzv6V0zQE9X+F7Hkp6eFmRA8/+M7YulFyAzLiqb0Zb
      fN8jTbO+ueAu19ESmislzPi7EJUxxNSTFOdKMP897IUvU6ht5YSHQeirJ82VCt1j/xQzdgR9
      +fuUb/0rvI1rtG44vo8xzik1GoweVrM7h/Q9YSmpbBskqhPLytktGqtNehmBVuh8QDn9cQgW
      6Ays6a16Ti8EyplsQlAqFZDCQb5SqP7vWNH3SXXfbJT3YB67d2K6INd9AhMSVBXWWLa2HsVM
      vc9tlqXYpe/s1yBDIqIKcWeVVXMZn4CkuYxqLTPiJfg2IhJVgkyxJhaw3uAY0khGvePUT7+A
      qk1x7cX/kQOP/X2KJz7wwMS3hnav/HpXY4HFRPfnpDhXhuXEfbKWvjPGj4nbCOmB1eDnRapa
      W3RLCcMzTe83JaDAYSqjT+T1PmPS1irBc/8JrQv/D9UTXWfnpwYhHQ8nTS1B3jDPWINJIJn8
      7CA2cvBJGtkjqKNlLJbVlYvUmn9BUOo6D7oP2FuM9p05IBVecpNoOiEsS1TJoDV4Kj+mtBht
      XDly0aNSmD2VS+yA5q21SM9ilcEfcxv0GK695wEglUTm86vRTok9T/VpzoLtaNXQvJ3/7d7h
      gJF6JxmOfg/B88IS1QKicZdj0dyYJDn4c4geTO2HeEW7fQCIof9BENQOIvMXn4mMhct/ShjU
      8K1klBl0tYZOtrDDLWwtTE59lNFnP49QHtYa5j70X6ImDr8t59bu+LmXiu/c5u1IsniJlXN/
      gCVBmwzfq4NSCCNJZYYwLihVFNPUp56ntfYG4egs1ZOfxLYbZI1brGc/YP7K73L4sf+a7Mxv
      s/zy7zF6xjlmaWZRUiJl/tIFKAXNtYOI2UEJeeEH/W7xAgETp9hs1AiX/z3F+rqbSZVCCiiW
      14mzBBGVsHMfpbN0leJYt/9QBM5vAY1QAqvziHVuLii1PVbQW0R7MYKeSCmQKBw1Yjuy09tP
      CIsQZiiy5nhEPYSoPxD20glryYwLCu4vg33tkPJbDboJjYaP8DWpmaIz+pl+ZyBrLfrayyhx
      fX82qMlit4blUJi2UKwdYyQ5xmrjTZqNS0PX0dtPEEXj/UJYQki8ybm73Mj+spP8u/PvveTO
      GNW9ntOjlS7RMTFhGBDTAu2WZIdaGEQMfu0AxeMfoHTigwCYTpPN7/9/1M98muzSJg11hdUr
      f8L4ic8i3/fbbGxcpdj4S4JKx1WbGErw6K5ldNODSL9XIt5iG8uQdBDVA33GrKgcII5+E//2
      /0FYa6KzjAzwihJv83VM+SOIYo1G6TOYxr+hULJIJNoY0jR1WL7nbWNQDifgWGuJY0fPMNat
      VNZC10gCKUiaCUZqVO7I96LQ7l48FzTrR+JwK4QSGDtwYnvwqhCDKK8xbrBYshzVuts7Frkx
      mKfdGguxYIoDdMtPsHzyGTbSBFGuI9SAbWDWF9E3vgWzH7pzJFgg2No6T7N5hZ6lWVF1kmSN
      peYFjMr62wJ4mSQ0BYrFQ4h2Bwdyv/1SxjUlCKVgOTUcCCS3E8OYL1lODdUc7RFASQka2lL3
      JB3jPouNJcjpKt37tIpkoYKSPjrp0kq7DsM2Fq01QRAgkUyUj1E/+onts5i1+NEB1ORhJuv/
      BfKHf0Cj9TrJ9/8FE8d/nfDQE8Q314nkS2QNzcZSl7iTUfACJBYVvUZ2sQDFMl58ntB7E6kg
      vlYnLTyHrcw5NC1eobu6he5qgjHPoWlGU/a+xebaIcToUUSxTmutiCcSPJ0hLYRhgDEZmdYo
      K/sF+6Ts9SyW/cbdaWb6gTUhwO9mtFYTEt1F1gVCOCe+N/+JPAttd+DNabLaq5pG3ijDcZaE
      K1t/1wwr50/YDPABLCazPCKOEVUCjp9+F19Yf+KOdA9ZHcNmdfCnd5dHH8yZgkxkYLN+QGNd
      LUJ7Ib++wcGFFZS9g0w++Tm86eOI4P7r99/hNqn6kjRXaG1BAZmFQEDFkxgMvhB4AhILvoAN
      Yxnz3UCoKclqdv8+gc0SUO7FGOOIadYa/MDx9g/Wn6f61OfAGGzS7c/O8e0LrLdeoWQ+gwgi
      xp/5bcqXX2Hxxr9m4/qfUbp9gerBAzRvxVxcXKWYjVMKT5PWZvFXXsR6I/jrX0fbTYJygDaG
      bqrxi6sE5s9g3XGKvEAgDlmSZYPMBNZzzFIbQLDwFeLwc4iwRNgVeHVyRc6NXCnwpXSQq/Wx
      QiOEU/YkMXl8whHfjIbuckzcyNAyxauLAU9pWAfuHCXd/x0Lgee5QWbtALXbi8DWFwNp5xhG
      zBCqF5GJx4enn+aJR+ZY6yq+unEXc9tooombmPj8nakQ22yqPkowPEAABIUkIEoDyo89iz/3
      6L3d9T1KJAVLiSbIbybOgzuZdWXHM+tiAihIjPu+Y1JMqumqCKs1xpd43H+Jqc7ym2iZEYY+
      yutxa9wz8OKAypm/j407tN/6JsUT7+kPAKVCPEJ6do0QgujYs0wrn8bt71B89ONoLEtnv0ZW
      1ATBQaIzP4PZWEJFhtLR6xgDcVfRanVyRbNkaYaUEm1i6qWSS2BBEowKtpY7+CWP2GQQC9Li
      CWSpjrWWTnOOujmXZ+712kIpLNrBslojlc1pF+75er7MZ2VIG9qxN8fBFz0URt6Twg9aQ/VM
      HtNHinpM0uF8BTtEj96+qvZ+kZiuJDNnEEc/Cz/434nL76F66BlGDytghS+uPcKW2X8CtkYj
      VIrt7hoAOxV8+Ox7fGeh1i2QFItUHv3EXR/I/UonfyE9lGcrt1Mb+c924n42h+zXBh7C92jE
      CXrxGkv1CWSx2lfIexUvlUgr0AwXqnLnUX7RxdOzjNJTL2zDpf3pY0yO//NBGuHWMljQzTXC
      4iyqMgLWUhn/AOnil6BziVh+m/DUcyTXRymxiZRQKAQuWWbouq1lEH22OV6iIBgTmKZGhIJ0
      y6AnT6LIo8OPfIR04xyojLSlKU5Gzu7OFdBTgsxk2Bxjx7qEF7sh8WoeXlHQvh1ji2neJf7u
      yj/cE20I9u/HCdxA0AgroUerxuRFh8WuY4kcVrUWkvS9yKMfdTbb3GeQE7M0EQRimc31NiO3
      vsLm2PN3zDA03SZm8S28QKN59m4JMXeXTAhGT35iW+/dh0GE5+PNnABAL99Cjk0PILB7EP/g
      I8hFj1AotE36eLdvKkzMfd4NqlxsloJS2LiD8AJEZ9HxaKIyW2/+KY32m4xNfoLyY58cHP/w
      GUTrFcgyZKGKaaxjysfItr6HquRouqA/kGwOU/ZscmuF4xThqkmEI661kAoFev3b2MILrvqB
      tTTmO/gTGuHDxtUGfuQ5xqQQ7r60JV0xpBIIwbZhcnyUxbV1R8LDJ0syesilZR/zZPBUBu+i
      fw8DkJOe82ptbvfvPuagMsRgMIWFbxNfsQixBv6k62MXlfnicp34lW9hp5Ywtzzk7EfAc/c4
      ufgWUW2U1bU1TGedRvfLGOExNrUrH4ChE+6MDtod37sfXb+7TRl+XOILqHuSjTzodT8iRybv
      +3yyOs6hZ/9bMIbbr/0vlEaeQnolipOP4Y3PYZbPIZvn8VgCswUU8bwN0lgSllNaN8fg9K9T
      f99vUpw/hyzUBpOEEKjxGcaOfha9cg3/8GOY1XnUgROsn1+hfDRFpxEEZSLvDWLzODTXCcZv
      DCEsTqlUTsJzhDpAQqn+BsnSVTIzi58tEkxbVOS0VxUtuqvZuNCidqwIAswqnH5iDhB0GzFh
      OUB5ik4rZWy2hpk1XL9wm5ZtgHAzeG9W7qE/PXGQbu5z2UFiTKvdyfMIMoLAOeJKKYwxRIXh
      fJCB0ruVbsd78SHkZbJ2CRs+ggiLCD+gaTRGZYRCIOPriJyxqtqbZMvzJNfPMn/7W/gzGhsY
      4pWQg/LSnWDQ/YDG7aM0yHz01io/7pSWuifZygxFJdC5s7ueWcZ9SWIsDe0c31YeMBvxJKup
      JrE8UOkV4fl4tUmszpipzmAPPOmmIOXjXf49wtJNZHWISmCbzqaNDNKT+JUuqechhMSvzyBL
      uyeJYPY0ZvQg6eUfQqGE8kOC5z5DViiTBwhYPz+OP3oYJc7he7dy5EWQpRrfCxwW70GaGjxv
      gMAE5Ra+eSuPsHo5ZOiYkioU6DJ0bmUUw4gjJydQvlsdiyMur9Yaw4ETNRACT/kce+wg1y8s
      sdHZhIpr7q2GEnQG6ZRm8LuwfQW21g7YmNoR+lqtDhYII2+g7IMD9n3PnWuNzcrY2d9C1oYm
      NmsRYYRNwRpH47M6Q8x/g0bzTbIsJjpiCUo+2ZpEFY5iT+5pArmbuBcpUKX+xM8Tnn7/PW3/
      dkTmqM9mZqjnPxVQlILYWIpKUFSCtrZEUtAx71A0ePEstdk1rP2CS2ppGoKaHPIp8tA/cmDr
      WkmipxH5Neyl/D0RhQr+kcfJWuuo8UPbTEmbJWQkRKNTcPNNjBUOSrTQjWNM2/RhCiklfnng
      /FkLzYarMJGkHZSS+L5PGLq+yJ5WnHnXHMpTO/J7bR65NSjlYXH5C0HR4+RTh5m/uMzN5jxe
      3pV+MEEPKf7wtJ0fulgK3MeR31fpqODnm9pBYMzmuHW/0+huWNUaBQzyyK21mPVFsvkMPfk8
      YuQQbK5gLn0R27lI1vTxRgxy6xA6Og21UcShMyyo0t1ygre9qm2b1cunmHz8F/HfZpDrXmU1
      dWzE1MJGDmtqYDk1fXRoxRo6xpLkDqLe73ZysVqD3M0xsUbD/Lcp2W9CaMFaJAIlXAW2wbyU
      V2voeXvWDQY/XiJtrQOj4Ad72sw26YIfIMt1gvLuxuDCC6iceQGbxIjua8iy6EOUvu8jA0Gc
      JO5ZaL09IIVLolFKYZMYpXqEM4GwglCEeIHXp2P37kH0SAg5vdpage4pt7WMTdW4dXYBUeih
      N3oHfL639HNS8r3o/SnskNPsUKL+s92+U1+80iZ68atQ+7X+Z7J+AHXm06iZU2TnX8Xc/hLZ
      msArVVBzpzDBBN7Msy77MOlCbhXs47nuYfPnH09Un2bsPb+K+lvM3sqs+wds8wF6SBFAuw+T
      3vtxzeYycuTA7i8Wvks5/CqiDx86ZXAFohw9d1diep42aK2lMLWFt/l72HUfbUZIR19AjrrJ
      wlqLvPEVguwHZPoQ2ej7EfXpOwIJZuUiUbmLNtJBmMYSBn7uFPsYNNYYdGZcMAnXwqlSLSKQ
      hOGO9yQUVuaQaC9SS89ccXCo5w1gSoFEZxqloLHehlT0lf7tkc7z9StvObV7khhApDuftUou
      kC1fRU0ccfsphZo55ZgLfohtbOEfPQPjH0KN7WiAPmQS70OG21uKosb4+38DGT5E+btvQ9SO
      bi/gFNTvvIyIbK4XAmGVMwV8x4S905PylNvOAmEFLDGwSHfjS8Sd9yFGT0BQIEi+RziisfYS
      pnuR9sVx8McwhZPYwiRq/btYMkzhEbzuN/GKg4is5yuXeSZcASshZN++NtaihBwopt1JCnEm
      RUzC6o0txg/V+1hlpntw6CDI1aMqeJ6PRVOoeGirkdbN2D0i3v2LHaw+Vvajyv3BCIihVNxh
      pimA8DLMua8hx38jR7PcO7HKw5s9STp/BEae3a38sK2s5XYynJVIKwkyRbl6giAawyrFxtL3
      sSKjK9oElJFB4QFu+KdIrCNyObRDIaxLxgh8j2bL2dNB4HLzbJ7YkWYZnlKOSmAtnuoVsnI/
      C7VNIvMXpEshqTmCVx7kBRNYSqMrSLmGNefRTVAV3PGTt9BFjZSq7xRKIZA5s9LZ6g5Pxwri
      FY2wdcLRDfAtiAyBx8DOdiuXURYvTzrRmfMl3DkcHQLrrn1QjUKAVRTqPo8/dpSr5xfRVpOW
      uoi7YAw7C91uj20YlAz6pLrtq0DuW/VNLEvfP9Ue1gux3RZiiFovhMAqDzH7XuTo4bu+6m0D
      4NAz/ylsNOguX6MwcgjvgFuy693PgIWNN/+M5RsvEl9/k3Dusbse/GEX09xw9rnyMe0tZ+eX
      68j5vyKsdNCZcmF60UsdFGRZStzV/dyHJEkoFCKkkLTbHcIgIIrCbS+yGydIIUjSlCgyFOQ5
      lzdhB7x4bYxj0kiBl88v1oBc8Im9DH/KOorx0HGFEP1MKYvjw2TmJOLM5zHX/iNF/xWnfELn
      DiV5EErSTtqsLm1gvAxjDYEfOEjUGOc4JwlCCPzAI4q8PvYvhUepXuTUuw4hpaCx2ubapQWS
      UowKe+fIzSkBtgNlUyHwfJYba6gREJ7tb9eLdLtPBrN/T9zMPzz756tDNUOmBrGHJWK7bbzD
      p+8p7rO9TWpUwR+r448d2raRjFwXmDCaJJOa9tLfjQFgTYaev4EICoiwQJS2KVz5S6LyCiYu
      0im0Ef7wbGWp12oOGUk1xhpq1XL/JRZtASHYVtwKXC2cnnJtNZoo6ZiZhUJIIYpIM03cjYkK
      kRuE0pVDMdZiCppu+wyqexOv3M2vAzqd7rbcWosgswl+eJW0uYqZ/jDtm4sUa7cQSvT3k7nJ
      Uh4p0kiaBEs+k8dGscY5oFL6ZHnqomOM7pi9EQip8H1JpjNKowXO1I6weGmdRrNFlhgwgnI5
      ohV3mJwcYfxwDWsg+bamsdbAjmnoA2liu+O7/Q3d8e90vYw4/PwuJbc6czGVmRPsR6pzg9Qg
      bL4+WWv5n99c51Z6Zwanbqxx7Sv/PcovM/fp/+6O2/20yDDhSmH5tfEWs4EzTdrtDn/4jX9L
      s7KJKt1fN1mX6D1w6uI4QSnlZnkx4MV7nurnxbbbHWRedUFrjac8Mq2Jwgg99k8xm8tU5JeQ
      OTW51WpjrCXLUgI/IE4Sl4nmKUR3kmT61xDFClz7Bn58lnhN4NU9ygcW+8qWtQ2lTokTz8z2
      YwQg0Dpf8cQgzjFcg3RYWXv0Zm00WFeRzhqLH7pEFBebkFx+Y57Ec6zara0GqtzjCO18tnuB
      L9sHgm5AWvxFvLlntu+ZdEmvvIF/8l13LF/f39YaSLr31yVSlUeYevwf0bjyzfvZ7aGVYTPl
      I+Uus4HmG69/hySKsdbyxHseYWuzybnrFzHV9B7qYfaOS54U4v4OQwdBejmXwN9hM3u+RxRF
      mJwLEwYBWhtK5SLGGPTSD+Dwp+hceZ1S3TUkUUriCYnve1hjKJWKWGNcQS1vi+73fh/52M8j
      j3yYNH0vli+TFmZorr+OZzeQqkshDpk4OsnyQkqWCio1TanmI5Uh01nO0tyZcbX9Gci8qJdS
      Mp9Q3EBXavD91nIbXUyIyj6bVzvI0u7nPzj+fn+755ptVVHHHsW0NhDFah6RtiAl/twZhHT5
      Gmi9TxBUQBDdZ5tUISgcfYbooGN9CmsfurqeDyIVaXi06BoyqIJg5NCgDepIUOPZ2lOcP3eZ
      NbGKKtx9NZB5aXFr5baSgXfcXrjiUj1a8LAoKRHqTVrNZ0hLz5B151Ghq0AXhoGLd2Q5j98Y
      twIApakNWmu3sEmK2HidqPg6iZrEHP7HJNZRuDtZwjoBBAoihTz/Eo8eu0FY9TDGEeUcfUHn
      zrBE64wsM4Sh75xj2RsUgxEf+M7pjpMMaTRriw28cYlJLa2NLmFxKI4I3CuKZC0kSyNw8h9j
      Fl+F1hXEiV8mW51H1ScQUQm8QbyDu/HTtL4/EygSmkgaUitpmbef7PKwyC+NtDhRyFhaXeWt
      zbeozgw6X/YaQyglWbixzMWFS1DbO392WHRiKHRKZDojCbv4SYgmQ9TsrpWkh+bsNQB63281
      3wdzH4P5HxCYL9LqtPD9ACFcKRGlFL7vk8QxlUoZz1OkHXedKnCpkEIr4tYY6dRnEJXd/Cib
      JnDlZR47eo2oIAkKToGSJKXVinPujs6hUoWUUCoPU48l1kBPodudmNVrG3TCFn4pr/2zrtlY
      auJPuoFjNdgETAdUxSJ31DuyefK+zSBtH0Uc+ZwbCdf+Jab6POrw+9nblLoHsXaffABrIUtA
      +QgpOeAnaCs4ELQ5XWhyo1vmRhKykD48jS0eRCY9zZHIhdWvrdygemR721cXAHO28PShCUbG
      qrz11kU2/Q1UuPuhW2uxG4JjE8eYfXQKBKzd3qQ6VsZqy6UL11jsLKLqQyF+C2ZVYP09XqJ1
      ebvF+Ae0l4/C+GmyK1+iUi1hcYxQV49U9JN2RA5b+gWZY+05JSOwFIIVzO0vocu/sTtzyw+w
      Jz7AxbMrPPp4h9ZqjFAQVQMqFRc0y3Tm4NIddVDzm2ftapM0tTQbHl4poN1oE44oQCKEIRz1
      8Jd8TDdBrwmiSogfSaI5n9WLDRjJ8489i00lye0yJnoSdfhx5NxBhOc7Sop8F2ryyT4x8IFE
      iL1XgHThDboLX8aYDaL6JwhPfKD/MnqrnS8Mnxq9TWp9Xm1UWE6jB76On6RULrzIYxMNhx97
      htHDu3k7Waa3zc7WWq6eu8m17jVUQfWXcx0b6tkoj5w6RlQKt23fx+uBTrPLpUvXWc1W8KoS
      k1lOFU4yeXhs32t9/Zzm5vjHUFf/T4q1JRcAu4cGbW4Vc7nMWdvQ8j+DmLoziidbS8ymX2et
      UWVmbIn6gQGZbgBF7jZbrl4usuA9B37kzJEb36Mq/5pwzMsDXQ5gsMayeT1GSYimXUTbU4rG
      DUlDfhBhEmhfQBz5JLIyeUdu/3Am3oPKrhXAWkuy8gpZeBPRCvEnHxl8OcT/SpH8ydo0p8Im
      E17MRurRfONr2BCEX8SfeqoPnz7MsjlynOL0WaIdxZmGZae1I4TgyCOzRNdDLi9cQ9dSTMtw
      qHKI40/s5kbtnGkL5Ygnnn6ExsYsly5dpduNKU4VkXfxFypRjFAe2eQ/oLvy74gqK/vm+fQi
      rT0TzmaWRvJR5NSJfc9jSpNc05+FsiHrfGFwH/2gFAxHlq2F2/MBy+G7kdVBZN3OvYe171xn
      sngRr5gjT3nQrTDtEwTufuNEo9sR7enP49Vm0Je/gm2CGj10R1PTWuvyL97JAZDdPkvn1gUS
      69qYBvHEtj5YOy8gW7rI2bCMqk+T3PgRevEa7eo5l0Bx7VWip3+ZZH0Bf+QgXm1iOzTysEhU
      ptvR7FeuyO7howkhmJ6bRHmKVqPD2NE61bH9i331EkN6UqmXeOrdj5ImGUF4d8r2SE0gm0tQ
      mSSJP0mQ/AEi2J5I0usPAKCNcdCocnGK1tYsYup0nyu/77UqhbWSbvducKLlxo0a85VPILwd
      Fd6kRD36Au2FJarFZh6wwzUDkY5TBc7R78QFxOQBbLeFbHwdO/HRff0su3YNs3gFcfojd4U8
      95NtA6DTeZE2V7EYjtkpSh/9LW6bfRRWCLL126j6NGr0IOrZX8DfXECNH0Eof5DO1nvp71Cl
      iHdSRBCRpGZoeb8/mZwZI9MaT+1/X8MlwXd+LpWk0WwRBkE/SSRNM7wcTfGUh5SCKBA8k/6I
      79oJxNgcnatP4ZlXEVL2z++IbL2ssbwSXdfS7D6FOPoz90VjEULQpQZsDj5j0I5Jp4ZLN6ZY
      q39ol/L3RFZHSRtPYu23sLEFP59QbG8+dM+jOLJO9+ZLiMMfg9P/jWNtZukdYcyo+U2iyk02
      0+f6HR8fRHZVheg5TIFfYr0Ro9NlbNxE1ia3mTRCCPzJwVKqyq4JnKoNFXUCoiNPDj2Nh0v5
      AcTmIqVDkGYpUgzKhAwgb5kHicAKu8Pm7jmxFleUce98WbNPboK1A6Oi2WyhPKf0WhtMu00Y
      hsiCK0EiVuCDj85wdTFmWYek3imS9e8QVDWddgchZY7SOCjWNKFU+zm6o2cQ5dH7SgntSdNO
      Yu1GX1F7V9vZNFy+PUNj6sN3nYHj+RU2byvi6vupBF9Hjgx3lBE57wqqhZdp3AqxMy6/xLa3
      oFjZNbhMewsZr6MLhb2X5/uQ7eXR9RTWXsHzJOfaV1Bv/QsQrrituFymeuq38HbQJH6axRrN
      jLxGVHSOWJpqtBmarSEP0w9IlcZm5EHPQRRZ9RzEXk2bIWfJ7piV+zRix5fRmUV5ijAIKBQi
      V4VNCLerMUhPIIQlSWJGyyXWNzY4YxJi+Qgb4zMEnTJBISHzPJTn+P1pS5AkB6mPPY6ceZrk
      bmy1faRbPcX68jlGJweU5CzOeH3pGcz0I/eQGwzek58isY63k116hYIclJbsReONsfgRVHmR
      jbWDyLEjcAfzW/gh0jZptp6Ag++gD1A49gtUztVJNl8nzW5hvawJmDlFAAAgAElEQVTXVw1V
      aGCam9iRmQeaSR5KEYJmV7F0dQPlCcZma3l9/e2MRHDIhc5ta6VcKyGpHAJktMHYHmvSdYg0
      1iKFzCvJCUx/SRmsBsZaZxGKXsfGPKI65GD2RCnJpc15IuPaLT3Wvc3FwntZtVMIeQ0lJLoV
      kspT6In3IisHaL0D/paIyiwsHWZ04kbff5NKYIW6J+W3aYwIB2ZXYmYx5hK2DapkybTLZdb5
      Ty+SeBsXMGNH7nx8L6CxdRyRXMVufAF74HG8o48/0P1tp0NLReHEx4nMz1DevE22eJlm+8+Q
      oYaWRFX3Ty631qI3l1CVMZD39oB+kiKEpBmHtLttTGYo1iO80OtnXTk+j9s2006Re9i3VC7a
      26t1qZTIO66TY+QCbTRSCZI0Iwh2Pw+jTR/5uVNiSdxKCIshBsPk8ZE+J0dYyckb32ErKdFp
      nCIrP4MYm0WEhUH33jTpl2VR47t58fcqTX+OpHOFoOgqTxhttyWV3EmstWQXf4B/5rnB/WQz
      pK0LrC29i3L1GqWRdZQn8Lyhxhrp2v5pNtYiRqfRywZDALfeRI1NIKp7JDbdRfYMhAkpUSMH
      kfVpKgtVmrf/EGEUsjKy5+xvs4Rs5Qrp5iWylRv45YPgK8KjH0b4kaue1m32ESXbbd13efQf
      l5i5pxDhYcbmX8xfRI/TQs6KdP16e4NBa9fozpLj63kza0dN3s1tsfnK4Kojb08e6fULkHv0
      9QLoNBIWvr/CkQ9Ou24rQjhbzFoQhnAyI1waIz76PBIIhKGkUkrSMOUnfHczdInjb3MisrWD
      zK+MMXfIFeNtrIOtTt8dMkhiRHlHNlqm6a74eI9+jK4x6Av/N/Ujm2RZfplakEVH9j2sWbkJ
      tSOIboqnm2S3V7CX/wbx9Ofv+972JUsIIfCnHkddGSeLFkmX3iI4+ISD8ox2KXzW0nrrT0j0
      y6Qmo8IRunwdayzpm2cRIsArnSJbPgc2xkum8J/+mYdmAKB8znbqTMQ1nlK6P3s7VqQliXXf
      vOm1H0JAmui8Zxf9AbOXaG3z8orbg0eu2LDN+wBrWjfahJMBXujR2Yohs6hU8J53n2A+3iQs
      5gSvoTRB5Qk+MOPjj65igSkfJpSr6PGDVnhHZOZ+RUjJcnaC2fQ7eL5kY92DsRTuBqcKUAeO
      bP9MSRJ5wlkIfkhy8BdYvfyX1A4ssrU4Qjr9M4ipI7sGl9XaQbNpTHb9LMFTH8PoDuLVf4c1
      EclGhXAf1OhOclcynJCSylP/hO6t77J5+fepbLxAZprY9UW8sRm80ZNkyWv9Xkw6Mn2sW0eL
      AGTpDRjBOX3pKmr9FIwefGhiAsIPWJ55gctX/5JTJwVZZlHKKemgEFW+rcihSzkoJTjcbHp4
      uzzGnptTA6evV4nZmU2WjVsN3nfmOLfm1+huJUxU69QminjKrSyLqxv9Y9KHId3K0wrWqC9+
      n9kDE9S8KYSNAMmFzjtTn7UnunaIzbVXMXgstA8xlv4F64c/u29BNBFE2DTe9plflhS6N2l3
      GojyCHJ0mky/QGvja6SHP4ms38HMlgKbJeizLxE89THnCE8cQ08/iipNEnZeI22sofbK795H
      7okNKst1CieexwsnSRdfxSSblJ/+TTbf+FeIrW9iyr2u5JB4twC7vbb7MCjiaypbX+VUNMvr
      8YPbpe+0CKm41TnAXHsB6UuybNC1vVfCfNjE6XdCFNux/T69x/baj+YNolOT1/PM6+vn+0sJ
      fkFxc2GVI4d3v/yzZ2+ixyzK9gZVr84mgKU0XqCbaX64dBm7dZkzM8fZKhzkUvLOVuoTQcTl
      5HlnoxdXODrXoXHzLHr6iX33M5sryPpkf2Y2wSRCC8zCm8iTrqS8HJ0mGfvVfU0qISTZyjzq
      0Y8MjrWxgOrcIAyuUDncZqW7ANzfALhnOEcoj2DuSYrv/jXqz/4TyuUKlUOfwhQHaWxKueoB
      Wrul3/XNHc7ntJAJnj16jI9MLHK6sA5Zium2HRPxJyzx9FN8/cYpVpacqeO6kwxnhA2U3VpY
      Xexy43rK/K20P/Nb6xxmR4ceKK1SAk85H2O4BaoQgupkiRVa3Ly5uv2CLJw5fQhvs0drEDlk
      uD11UHmSQi1iYrRKbazIS40K9u4W+n2LKR/AVg5gS2N0WwbfS++6j6yMYON23ypQ08dp2PdT
      0N9B3vqaG9BKIaTcF120RqMWXsSsuXwI097CrNyCZ34DWxxj41oZ6+0uLXM3ue98AOGHRLcv
      MOkZyp0GtzcTvKJy7X2046Uniet0rpREKte5vP9AEDS7McJq3s1rfO+7L9H1Ew4XZph99vOc
      79Qx9z4u31ERSqEnTvLDZJbNay9z/GCbuGPY3NC0Y4WvMqplwY21MrfTaZLaHJR8sIbk6l8z
      dySvoSm397MaxAHyZkQ51i/zEipaW8JqyJVbq1Q2I2q1shs8WAQeY6U68811CpUQR/0dDMSk
      m9LejBmTRY7NTXC1XeR2EvxYiYmifoA3Wz8P4/W7nkaERQgs9s0/RtQPYkdOoo6+C3vpe9RK
      32LzZoqe/fhgYjFmd5qj0chLf87Y8QWaN/+IZvuT4BVQM640YnLwM5jwJmriyH3fy4Otk9Yt
      HdnaIiYxpIHLe/V9H2tdECdNUzLtunx4XuBMAAFg+Nr8Gxy5NcGb12/QrWwiBExULD87cYXk
      u8tcrH34J0ukCwpcVR/m1pXLWOmRVQ9CJXD08GYX6lV6xad6cpGnuPjyJUx0gCmu8MRTgwCN
      lIKtra5rAiEFQkqyvIqEY5q6BNnyZJHXbsyTnM+oiyqhLynXFGuiSzgS5Fi5M8d0pmkvdpgq
      VTk5NUGhELAUF/nztbeP+txNhBBQ3jtIdaftxdRpavpP6C79iO7UL2HCYyhvjVC/RZuP97c1
      a/PIsZnBgOi2CM7/vwTlRbJM0d4aRR45iohK/YEiwhJy/AjZwhW86aP3dS8PNACSucdZ0V06
      jXkqhYJroJ1HUx3Q51LpBj2hbN/ulVIgNNRKJZ579BSvv3iNpt9hdbPJtesr/PDGi0TmCHL6
      9INc2jsmQimyCde2ta9OfnhH5COrzkDV+TS3Nqc5svoSpZFCX2EFLpjW7iYozyMIPLrdZGDX
      S1fxIRjxKYyHdNodTBhA0eKLXpf2AdGtvdrlidlDlIoFLJau8fnTlTm69p21/d8p0XKUdfMP
      qYd/hLf8u2wFn6az/AZekGC3VrHKA89H1iYg7mDDCHH1byh65ygdWyfLFDIDpp9CFiu7jm+7
      TdTUHKa95Yoc3CMa9EBPKzWW5atv0Gp/BTzHanIvemAIp6nu/Zrniw72N4Hh1XOXMBjSWGM9
      uJ4s8Xvf+wqmYLBX/pjSyOEH7ij5kxZVKFNueay2t6geqCAlRIUAzxNoHfQd40LBH4JQHWOz
      gAs2RYWg73inaa92/sD5zrqacrGCsfBms85LW2O0zMOp/ACyNo5earKRvsBo+NeMZP+ejdsj
      BFWBXXsV+fgnqSZbBFHE+vm/QpqU0sg5pA9ZlpuUPhQbbzHSOcyKCInjLqJUxzZWXPnIUg39
      yn9APfMZhHdvVQt3PTHTWAchkHvUquxJtnCB9uYfkQmNTU1egxJ6c6XJ+TQuugc6b23f59hI
      eGn9R27zGnhIrDfgx7DWxCxdR8yefFtU15+UiOvfZ+twwshYBZUjSr7vYgutZocwCvJ6Pi7A
      JoWk1e6gpER5HkLYvNyJJDYS2evFOwSxukwx+PLqAX7Yrj00kPKdREiJGj+EXsxobkxQn1lh
      /JEVVl7JSItjhEBn/irVxi0K4Xni0ibdRCFSSLMM3/Mw2hLOt/G3vk3nxusU5o4T2xJWKeQj
      H8d22xA3sN02Jk0QlZG7MhJ2DQC9eBWTdPFmTqJq47t2sNbQXfkbCAxSW6RUZJkhTZ2z2+vu
      10NMlAK1l6u0j5+rR2Ka8/8X/vxxRO0AwegTuyonP6xijebwyDr1abdM94tE4SaGNM3y7DA3
      sLMsI4zC3DyKiQrOSS4WI1qpoK0ldV/0TaXeJCM8wXfXaz8Vyt8T4fmIqEwSfJzO+h9THO1Q
      O6VYWw9AZxRHxqmPFOkudsjEj/B95fIH/JzktxXiV4+S0qBQqhIIRacVo577BwghMVurmNIs
      qlAm+cFXKY408EsZnfDdmI5ATs4hwsI2PVK/8zu/8zu9P15e7tKsTaPGDyKi4t4jxxqSS3+N
      lh2s7EFz5E2fTZ8PM7xc399TAiJAWrS/iuY6ycqrsKodJTgouI3E7rLZD4cIaG8xM9buQ8Hg
      6MnWWorFkDDy8QMPEFQqkYNIfUWpFOL7DhK01mI9HysUBaVz5Ej2J5fFFcv301N3j8Y+ZCKi
      ImZ1Hs0oxegaflmiaJG8/kO6k6dZLozTKs9RbL1GoSbxfYnnO0i6oV+gfeKDJOl5StO36MRl
      svF3uePdOIeqH0CWRxCFEsL3QYV4W2dJV9owdgLe+lPK9hvoRgOdhRCVd68Ajoq7j9khJKpw
      mlR8o1/JoEcQ68GdjjvzNpVz2IcpGuLNF+kuvIi8GmGlh186ReHop5GFgUO0b/PlvyURQrA+
      +i7evPINTsw0+90ZeyuiMZYkyQgDP09YASkkZgjXdxXccLwelbn9hczjKtDYzDjrfQgR7XYG
      H3YRUqEOnUYv32RrfY7q6HUKoy1IJJtba7B+G3X0aTY3f5b24i2kSvHsPD4b6KCGtBbRmmdj
      cYLK+C3i0sfxZk9h4w7m3F+RtQxKdqE0hj36HrKNVyiVbqBb36T66DJCQZFXSdde4f0HP3V/
      ZVEAsrVbrF3+n8DTOTtyOB3PzXjGWIJgr3LXD/zYdn9kQeoDlA5+DlkeRxbKD8UA6InVGXON
      v+HYbIzMiXJCSBqNDjrT1OplkjjBGMi0HjBDc9u+XA7yCWV7IE5rw6s/Clifff4nd3PvkNg0
      Jlj4Y2r1qzRXi3SO/LNt766fK9DadM3CK2MO3bn5MsI6Ok68BuFHf8VNH726/1JC0sVmGXSb
      YDOC9ut45jKFWsNZFw347OkP3X/ESRZq+CbqB3qGc1yNcX5AGL5TVGjBHSM6Aoy3SGP+f6Px
      xv+KzRLEQ2QWCeVxPTtBc7k1xAMyhKFHtVZCKUepDgJFoRBQqRRcPU5foQJ/zxpBQkDSyVhe
      f/h9oXsSnZHMfo7Vtedorx+Ahdewm0tuZUwch8jGHYf51w/0oU0bjpG2I/Thj6NmTmMaa+7d
      5/a9ENL1DgtCTNxFL1wmnXqBzqH/nM3mcyjprBad6fuHQUVUonLk19m6+bsQ6P4ozTLzYDb/
      nc90b5t5YMwaprGKGpl+B8//9sWOztBolRnPB0CWGaLI5RukqaubOVw5zvMVoEi1oJlKKsHu
      7sZR0Wd0ImLT3kunxodbRB7stEc+ijXfpdz+Mp7VdNYOoWQbi0dzsQYTJ5DlEdSEi7OIiRNI
      v4YoVhAn3+1SUo3Bxm3HgM1Zs/rmObxjT5LpxHUBUh5Z9Qkal75J8YBPGAUPMACEQE2cINp4
      nm78ZXcDOV347WVn3k12Z0n1r8kIhPfwOYNCKm52ZzjKAuAw/SxzjS1cdeXdaR/WgrAaaV3V
      hB4roG/eSdyy/ndM1LH30Iofw24tgIzx0pt4dolCaZ309suY+nHM1mXs5ha6OIGkA0EV02hA
      EFAdHUULS1dVHW06SxE5iukdckFVay3c/C5d7zFEc8nR2x/kYoUQFOY+QvLDb6OjRn8V0Jmr
      QgDkRDJnFvVb7txFksTVoAyjoA8lWeOCai6jao8hZsGPHkeU7p8I9bchwg5m8V5spC97zhgu
      MFYM3LOLY43yJKqXEIOgVs7Y3KNQ7U+7iLCImDgOgOHRfq83dIaI29BYRtSPIefPISMPxmZR
      B4uoy3+CH06RjRxG2TvrmRAC8djfA6DT2eLfbsgH5AIBIiwQ1p6j3f0yzWZMVHDBHZvXfsky
      x/68H7MoSVzCeRJ3+quKMRYEBHuV87DgmRMUT//iQ5un3KicYHPlKrXxvaPavfTLHk2khxYN
      6NeSdiYpB6affHNsNmPx6lmSfaq77RRX6jJF+O9MkszfivT4Vp7vIrt5TzoxMoXdXAKh0POX
      sZMfoFE/vG1CMZ2m6xfmBX1GwXAlOVGo0ug0HnwAAISHPkjn9ZfRuk2r2c0jwi7CGUZ+Hwmy
      1ubJ4YMc2x13CljX8C1PMUzTzNWZ35ZLu332lEmF0plfedvVwX6sIu7syPcKVqWpM4V6q+Ww
      M28MZEbk8QQXIQ4LHlK4lUUvXkMUysiqK6todQabS4jRgzsuQ8BPk/LvI0IqRO7vycrIrkCg
      tZbuG18nS1s0N84TTpwgKk7ij84STA9K+TQvffvtDQBZqFCa/DnMxhewgrwEnyBJ0n5aIeBa
      deb1KS2uHPheK0MQDGA/7y5kJtmNKM380rY4wMMm1hiOdb9F9eDexah6zSWU6lWDAGlszv3p
      ObkWJXsw6mAiUHnzCjlxKHf6cthw/hzHo4tcTD91TxXgfuplGDbtUal1ytrmj9hqX3L0moXr
      eFYxe/KXtg2Azub1tzcAALyROeRqCGHSTyiPIj8nw/XsVJsv6bLPfx8eIPmd3Nd5BWXU1Km3
      e/k/VrFbyxw+ECOEa6i3lwz7RgIQUhCErhVqL6EokGYoqd5JYDu0IDf98soSnQaPBD9iaqbI
      xeVNqO1fxePvilhraZ37BuvXXqR+7Hm8TDvl7z8uQalwmKCyvSOoTppvfwCo2gEqh36d1rUv
      oMPNvDS3RPQbIO9MGezFDt6mAyfS3MZ78KJPP26ppbeJSnczO3JmWy7WDgKKvu8aXWutt7Fp
      s1QTBwM+vk0T1P/f3pn8yHHdd/zz3quqXmefISmS4gIpWgwnlhLLRgTYCYwkiJGDjdyCOEFO
      AXIKkH/Dl1xyyiGHXAI4C5DcfIodG/JBUhRZYijJpEJSXGbpWXrvqnrvl8Or6u6Z6SFnqSFH
      Un8Jonu6q6ted73f7/3eb/n+tu5yJf2Qq6/O0VjtEsRNLF98ARAR4rsf8PCjH5HohP6H/5Rp
      kvx39R1u+vEGSXeTICucz4kdComohOdeZnbub4jv/Jxe82dIqQf4Os6cn36cS967A30/qsN4
      h8a+bvaoUKr25A4gzxhBf4OdR20q81nXyMyrUap4oVWKYd+wXDFYJ1nHmBFPjohCa//dO82Y
      m4+W6Cy+5EVHhMvb/8WrLySY0Dfpa3UN6cLVL5iPaD8kGdB6599pPnybJCvPTEw6fH+8ZCl2
      He589I/UH/yC5UtvUrr0Ct3Og2IEAECXqpRf+n2Cra/QvPUPOL3lh5AVcOdaP0+SU0qRZh6Q
      w8VzZNdTXTmYOvusYObyG3z9/B1WGxu7KA83Gx16ccyj1S3SvqMSRSy9PE9tvrLL1s8VRV6b
      /PH/BdyW15DFldF3Twacn+sSZI4AEWFbVo5MDzIJnmDl4NcPev9pYbD6KQ9W/xNnJpuXeyEK
      Wu1P6H50h/KtOWK6xQlAjmDhErX5b+M6/zHMFPX3ynsxfLaoZDWvj8Nu02DX0Rai5cezEZwF
      fKZm2LAXuHwRGIthPM8yd++sU75QJiyHw5Vh2JB6DH6ldty8W+Ve+etQqu7+3cISzZ1waOw4
      69h2hy9XFGdRSk/UQouhZiNx1I0iFaHvYNYoylqxlbqhpRGg6DihZhROoOcONyFPAtdtsnrj
      X3FayIuJxr5V9rh3DnlYYjrpOqjj1gQ/ATqcAVGjCLGMUqRzTxFAHDuCYNJ+4PGiYewKwfK1
      Y40tUGAUDA6huk6q4RyKt9szfK/awLGH9UL5XKDcGSCSm0OjNPK8WuzePcvd+psH1EMIoked
      4LcbMfHM5Ym/oGtv+2Kn2li1lHNwQGOO/NWq9lrMWCHUioEIdaNpWces1lSMojOwzBiFPSUB
      kGSAbTYYbN5j+9Of0OuvkdBHDTOXx7xBQwL3vLWrGztGMX5XT8eINhFBEJDYZKjtc+0/ruVG
      gZ8jnNtC5dwfHpv1bCU0bKeeVqRuFLETEvGCoZXCAJFW9J2wGGoeDuyJUjxuDUps9i6yWHmI
      U1mClwjtVh/qYx4gBUFGlQgMg4Baa5YWUmRtHbW0P9epvHmLq1cS8lu52qyhFvcTCohzqNrc
      flXzGFOp63x1d9t6QUycMGM0O6mjpCHN7l0nq3lopkKh6WD438p1dmi8+yO2tj7w9edDB+Lk
      i+W2/2jyK/LNsOyKoB+mwdQx4Aab/iKiSBK/Cfa+bXZ5M3LOzLxoJB8U2fCHEFAdhdoJieQ3
      CM4f3/25kzrmAo0BSloxG2gqWlE1ior2y3vbOqrGC0F0whsqKH7aqhC4UbwiTR0PBjsEEzhB
      lfLRYWtdJgCK+mxENVmbeP6y2yYq+8kvTli3k4mhlM7S04+gbdrWdz3oOqFjhVjgUWxJZTTp
      G4nLFIo/rm0L1v5JzMMf/5DG9vs47R5rHIgI3V5/OM8ki6kgCsmq8QaDxG8GMh/pqawAtv/I
      J83pAI0FZQlDnfWZlSFluDeFfIKY704+wZZLSkTpNcovfBc9s+S7Vj6hG8tB0EDNKDrW4fCm
      0FbibdkZbWgkllKmwvqZ1osLuJ++c+j4mIVyPdpn7+e0J3lhkYwFuA7iSmrpFZLBBmEpoLUd
      061ONn8+r7DdHVq6fSiv+SBO6HQ6iBNSmw7z0nLngyc7Dhn0B4RhQKV61EbZh4TDkTdo00Z5
      117mBjVGDX3dIj4lOAg0NssdyiEimHSJ2tUfYOYvFeLxccB6MrL/1uLR89XYpxakmQZLpThN
      thEbUJbx1TenN/GpD6O/99r//W7Cx/frxIuTG9u56hLr65b5WcunqzU4dzg2hMPAAPOhpmMd
      /Wfk7lHaYFDsTwzfD6M1C/PzxHFMFEXeclA+EyG1lijyNezOWoLAT/3iBUAESZuIlhHnzZ7J
      m1OJ+4Q5v1wlqR02nADAQvXCHxMsXC58iE8bbVF004qvAxZQYwpinH80XxHB/25J4nj34zo7
      l791sAKozPB+/3dhs4esLBXqGp4LvL0/H3h3QM1oNhP/twI2M3NSxJs+5yJN2xZrBtn7t6hK
      ndZYn7KDEIbZpA72p574Wou8xdVo31P4HkBsiksaPprpLCJ2jxCMvB4+4umyRhN7TuQUyhSX
      5LaQBdzCbBhVPamb1wi57V8u4BcSgc/iEkaqkLcazeqDcw5Sb/7luVBqmCGqypUnT+pyHWZW
      Cs+INQpmjKaXbX671m8hZwNf+xEp/zxQfg/VtVL4hAquvEJf98a65hwPfgu8f3SFC4BrbSCm
      hROL0j45aRQF3p0SEYYmixZDGIaZS8sfo5xBl4qhR6wZRS1zvS6HhkBB1fibOGMUi5nNfSHS
      LASaUHkfuFFglP/swpEi1nugFD9rlXjvxj26O3D3diejRVGIKJyFwcDS7yU+nVwyUgEnNM3R
      u54UhUbi6GUb4Ebi20CB3wg3U0cs0Ij9JriXaf5WwZtgVZ1h4eI3OSiX6iiInf8/jsJNINe8
      jzVJFprYbddP8vA45zJBgNw/K1ZRW/7egT2Kj4rFQHv/ejamVCDIcs0XQk3ivBu0nz2WtaJl
      fWCnb4WFULOTnuwGrCWad+KIduN/kVBTqpbotPvZKhAgCM76RnsmMGgF7949jyw+u6aEDujn
      exVgkP0E4zGU7ikHvZRSzL3wLdbv/3RXxPfx6/dkGLVfjAoXAElb5JToef+rvJJpBP/c5wPl
      QTI/NCsKnT5PdPmNwuzZB5kv3wEb2Sa4kfjXVgeOVHyHrmbmzvMp2/6JBTZid2L/tlKKzeAq
      0cwGQdZZxlqFydyTThzGRMNA4e07sLXwtTOf7vE0YOZWiFSZPt3hayNja5Tw9sTzTDikcBPI
      pj16/SQL4ftErjQVrIU0EeKBI4kFm7rMC5Sl/mYaNolnmbn+/WO7OieOiVHsL1fkSa7NxPu6
      cwHJmfdtNvnzzycFKDqZO88nD2ey+gh/26JSiDaaUikkCDRRaGjuOG7r1z6XtJCnAm2YvfD6
      nn2Av1uj9rTZoU5RC1aYrVyjrGdRbpSVPAmFrwA1U+F+f4Bz3r/uS/6yZT6b8HEcj4pkrKFc
      8Zpv0DMsX/kTwi+A52cSlFK04hr9fosk9s6BwSDGGJ/K4JzQ7cIv42/g6l/8VObDQilFWDnY
      HNZOs7D8OvXFF4iWrvpe1hk3ULJ5n7UP/plm/x6IInCK1Ix6HhcuAEnaYH5hFpumpFYwxpdC
      BoFnO05TSxR52kUbW0yUmUlArfIawcr1ooc0RKBgOdRY8fGAkvJ2rcJ7h+IsJQL8ShGp3StB
      EUhVicAEBFXvEh10PEX69lZMq1ejWf11bP3ZbXzPIsQ5Ous3x16AMPWro1KGS6/9OeVrr+83
      F0sVoude5Hz4p/Te+luCoEpZ19lK7gyzhQoVALEprfavIBSC0Fc25cglzuQJXU4oD66jShG2
      t4qOLlB76funavPWjaKR+bFrRhEpRZI6zkXeM/TZwDIfaCKteDCwLIcGi7C613VwAnRqV3j/
      1hZRBDtukU50HtIEKddhpT61+SdBKSpL12m1bhPoiHMv/hH1F9/M34Rwf1R9HMHSZZYWfpP6
      9W+w8/a/+PiUApCjUyM+DvHaLdoP/55ULFmgbWxgev9GJVHUL/+VJ7RSj+8RVQSqWlEPFO1s
      I1A1io3EsRRqEic0rXCxZOhZoWUdFa3QihN7gPbiLFE4fl4gIkivBaiJDTKe+HlniT/5b+z2
      Ko+23qGfPAIKNIFEhOThW2BcttM8xM0NhGTjPYLlp+Pq6zqhO5bck7vwGmPpEQ8GI4OnaJ92
      junEPzqUUqjq7PE/rw3R9a+C/hrPb36VX731Q0QX2I1Ouk2SwYdDloN80CM4ZOwfeH+/mT09
      m3+KKcahojIqCAkWLjBTuYTIMZnhJp89D+NLFsafIFtOUD0DaEx4gdLSNwmfOzy50xRTFAEV
      lrj4O3/N4t3/KU4AVKmCNnMkbm3Y/WQvxEGl/l1KL76RbSd3gqcAAAJFSURBVFzOJpvbFF98
      6FKV6q/9dnECkK7eJg0bwxTU3W/iX3eK4NL1s83kNsWXCsVtgm2M2Ta4mtt3Vj2oUbv6Z77b
      9x7KvimmeJYozAZxW59h2lcmvidhn/7Nn2MWLp5ZEtspvpwoZDaKc76Z60rlAI6WiNL130KV
      JnNkTjHFs0JB6liQzSY0feH23uQjwwrhla9MN71TnDkUswIM+tBcRw+2dzM8CJjBCuWVbxdx
      mSmmKByFbIKlu4Ntr2NX7LB5HoCKS9Rf/svdRExTTHGGcPIVQAS79ilcLeHm2U3nYxKStRtI
      3D/xZaaY4jRwcgFQCrP0PDQj3EBQ46VTgaPb+jeS1ZsHf36KKZ4hCtkDxDd+gXS2gd1BMBGI
      9CuE518u4jJTTFE4inHLpD0kEmywmwPI9GeovvID1KQGd1OcWbxWaWNOuentWUEhAqCrc2g0
      Ztz8SQ2l+TePTWI7xbPDe90ap5QJfuZQiACoheegBWnshjGA0LxK6YXvFHH6KZ42jkii+3lG
      MQIQlsBUqdwNsNbToLt4fdi9cC+ulbr8wfwjzoeDIi4/xRTHRiFxAPPcdXRlBhV3qbRDbAi0
      LK7ZwMzvZze4M6hwb1DGijpxr7wppjgJilkBqrPo565Dqqi2yujGPHZ2k2T77sTjBYVlclue
      KaZ4mihGAJQiev07UJ4n7sSEgwCUor/5Y1zmHj01fEk2a1OcDgrLTlPlGpXf+wuoXMG1GgSP
      BGlv0/7l3xHf+AnJvY+KutQu1LX70rjspige/w8hAJA9p3ufLQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='24' name='Average National Participation' width='139'>
      iVBORw0KGgoAAAANSUhEUgAAAIsAAAAYCAYAAADK6w4SAAAACXBIWXMAABJ0AAASdAHeZh94
      AAADEklEQVRoge3aT0gyWxjH8e9rQeGEgZBU0KJVhOFqEESCFq6qVUSgEBFEbWpRi3LZQsSV
      BkGLoLJluAiqRZBgeyOIgv4QERViIv1RlLQY38UFwZved+4fuPXyfMDNOc/MOcKPhzPD/CiV
      SiWE0MHwf29AfB8SFqGbhEXoJmERuklYhG4SFqGbhEXoJmERuklYhG4SFqGbhEXoJmERuklY
      vqCrqys8Hg+rq6uf5lKpFP39/aiqWvHzer0VddlsFr/fj9PpxG63Mzw8zNHRka71NU3D7/ej
      qirRaLQ8Xv/v/pb4L2WzWUKhEMfHx1gslqo1yWQSq9XK9vY2DQ0NVWsymQwLCwvYbDYODg5o
      bGzk8vKSdDqtax/xeJxkMonD4agYl87yhezt7WGz2YhEIqiqWrUmlUrR3NxcMygAh4eHdHR0
      MDU1hdFoxGAw0N3dTW9v7y/38Pz8zMbGBpOTkyiKUjEnneULcbvdv6y5ubmhp6en5nyhUCAW
      i+F2uzEY/l4v0DSNzc1NVFWtuoZ0lm/m7u4On8+HqqrY7XYGBgaIRCIUi0UAcrkc+Xye6+tr
      RkdHsdvtOBwO5ubmSKVSf3nvk5MTbm9va4ZWOss34/P58Pl8FWMXFxeMj48TCoWAP7pLX18f
      Ho+nXJPJZJifn2dmZgar1VpxvaZprK2toSgKS0tLNdeWsPwGzGZz+QzT1NSEoig8PDzQ3t5e
      rjGZTLS2tvL29vbp+nQ6ze7uLolEgmAwWDEXjUZRFIXl5WUJy3dSLBb5+PjAaDRWjD89PVEq
      laivr8doNNLV1cX+/j6qqpbPLa+vrzw+PmIymT7d12KxsLOz82nc6/XicrlwuVyAnFm+lZeX
      FyYmJtja2iKTyaBpGufn5ywuLuJ0OjGbzQAMDQ1xdnZGOBzm/f2dfD7P+vo6bW1tdHZ2/uP1
      f8jX/V9DLpdjenqa09PTqvOBQACXy0UikWBlZYVYLEahUKClpYWxsTFGRkYqnn7u7+8JBALE
      43Hq6uoYHBxkdna23JWi0SjBYJBwOFzznc6fO4uERej2E/34GcNsXdQaAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Relationship Between Change of Income and Change in Happiness' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Relationship Between Income and Happiness' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
